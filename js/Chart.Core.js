



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1" media="(device-height: 568px)">
  <meta http-equiv="Content-Language" content="en">
  <link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-precomposed.png">
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="/apple-touch-icon-114-precomposed.png">
      <meta name="google-analytics" content="UA-3769691-2">
    <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
  <meta name="theme-color" content="#f5f5f5">

  
  <meta content="Rails, view, blob#show" data-pjax-transient="true" name="analytics-event" />
  <meta class="js-ga-set" name="dimension1" content="Logged Out">
    <meta class="js-ga-set" name="dimension3" content="mobile">

  <!-- </textarea> --><!-- '"` --><meta content="authenticity_token" name="csrf-param" />
<meta content="fESUh2DOm25W65GnsugIMtvV/i/xcfoICnO2N/PIhTveog6JfQWdqSfVlwpqL4RxNt6mbprC9EF+qDPZ8vmZnw==" name="csrf-token" />

  <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="0575EF2B:6D91:B58A28A:55C6ED1E" name="octolytics-dimension-request_id" />
  <meta content="mobile" name="octolytics-dimension-device" />
  <meta content="1458051" name="octolytics-dimension-user_id" /><meta content="nnnick" name="octolytics-dimension-user_login" /><meta content="8843683" name="octolytics-dimension-repository_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="8843683" name="octolytics-dimension-repository_network_root_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_network_root_nwo" />
  

  <title>GitHub Â· Build software better, together.</title>

  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/mobile/index-2925272909e6f36816412cdb6d8a151ed00201f3c8ed4104dda4250b06630146.css" media="all" rel="stylesheet" />
  <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/mobile/index-c612fa633714ea237b8f720b5fea970980ef59fdfe134bec23b43831f1d98f14.js"></script>
</head>
<body class="">
  <header class="nav-bar">
    <div class="nav-bar-inner">
      

      <button class="header-button header-nav-button touchable js-show-global-nav">
        <span class="octicon octicon-three-bars"></span>

      </button>

      <div class="nav-bar-title-text">
              <span class="octicon octicon-repo"></span>

    <strong><a href="/nnnick">nnnick</a></strong>
    /
    <strong><a href="/nnnick/Chart.js">Chart.js</a></strong>

      </div>
    </div>


    <nav class="nav-bar-tabs repo-nav-bar-tabs">
      <ul>
          <li>
            <a href="/explore">
              <span class="octicon octicon-telescope"></span>
              Explore
            </a>
          </li>
        <li>
            <a href="/login?return_to=%2Fnnnick%2FChart.js%2Fblob%2Fmaster%2Fsrc%2FChart.Core.js">
              <span class="octicon octicon-sign-in"></span>
              Sign in
            </a>
        </li>
            <li class="section-title">This repository</li>
    <li><a href="/nnnick/Chart.js?files=1"><span class="octicon octicon-code"></span> Code</a></li>
      <li><a href="/nnnick/Chart.js/issues"><span class="octicon octicon-issue-opened"></span> Issues</a></li>
    <li><a href="/nnnick/Chart.js/pulls"><span class="octicon octicon-git-pull-request"></span> Pull Requests</a></li>
    <li><a href="/nnnick/Chart.js/pulse"><span class="octicon octicon-pulse"></span> Pulse</a></li>

      </ul>
    </nav>
  </header>


  

        

<div class="breadcrumb blob-breadcrumb">
  <label for="blob-history-checkbox" class="blob-history-label">
    <span class="octicon octicon-history"></span>
  </label>
  <span class="filetype-icon"><span class="octicon octicon-file-text"></span></span>
  <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nnnick/Chart.js/tree/master/src" class="" data-branch="master" data-pjax="true" itemscope="url"><span itemprop="title">src</span></a></span><span class="separator">/</span><strong class="final-path">Chart.Core.js</strong>
</div>

<input id="blob-history-checkbox"
       class="js-blob-history-checkbox"
       type="checkbox"
       data-url="/nnnick/Chart.js/latest_commit/master/src/Chart.Core.js">

<div class="blob-history">
  <a href="/nnnick/Chart.js/commits/master/src/Chart.Core.js" class="js-blob-history-link">
    Loading latest commit...
</a></div>

  <div class="blob-file-content js-file-line-container">
    <div class="highlighted-blob tab-size" data-tab-size="8"><div class="code-body highlight"><pre><div class='line js-file-line' id='LC1'><span class="pl-c">/*!</span></div><div class='line js-file-line' id='LC2'><span class="pl-c"> * Chart.js</span></div><div class='line js-file-line' id='LC3'><span class="pl-c"> * http://chartjs.org/</span></div><div class='line js-file-line' id='LC4'><span class="pl-c"> * Version: {{ version }}</span></div><div class='line js-file-line' id='LC5'><span class="pl-c"> *</span></div><div class='line js-file-line' id='LC6'><span class="pl-c"> * Copyright 2015 Nick Downie</span></div><div class='line js-file-line' id='LC7'><span class="pl-c"> * Released under the MIT license</span></div><div class='line js-file-line' id='LC8'><span class="pl-c"> * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md</span></div><div class='line js-file-line' id='LC9'><span class="pl-c"> */</span></div><div class='line js-file-line' id='LC10'><br></div><div class='line js-file-line' id='LC11'><br></div><div class='line js-file-line' id='LC12'>(<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC13'><br></div><div class='line js-file-line' id='LC14'>	<span class="pl-s"><span class="pl-pds">&quot;</span>use strict<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC15'><br></div><div class='line js-file-line' id='LC16'>	<span class="pl-c">//Declare root variable - window in the browser, global on the server</span></div><div class='line js-file-line' id='LC17'>	<span class="pl-k">var</span> root <span class="pl-k">=</span> <span class="pl-v">this</span>,</div><div class='line js-file-line' id='LC18'>		previous <span class="pl-k">=</span> root.Chart;</div><div class='line js-file-line' id='LC19'><br></div><div class='line js-file-line' id='LC20'>	<span class="pl-c">//Occupy the global variable of Chart, and create a simple base class</span></div><div class='line js-file-line' id='LC21'>	<span class="pl-k">var</span> <span class="pl-en">Chart</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">context</span>){</div><div class='line js-file-line' id='LC22'>		<span class="pl-k">var</span> chart <span class="pl-k">=</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC23'>		<span class="pl-v">this</span>.canvas <span class="pl-k">=</span> context.canvas;</div><div class='line js-file-line' id='LC24'><br></div><div class='line js-file-line' id='LC25'>		<span class="pl-v">this</span>.ctx <span class="pl-k">=</span> context;</div><div class='line js-file-line' id='LC26'><br></div><div class='line js-file-line' id='LC27'>		<span class="pl-c">//Variables global to the chart</span></div><div class='line js-file-line' id='LC28'>		<span class="pl-k">var</span> <span class="pl-en">computeDimension</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>,<span class="pl-smi">dimension</span>)</div><div class='line js-file-line' id='LC29'>		{</div><div class='line js-file-line' id='LC30'>			<span class="pl-k">if</span> (element[<span class="pl-s"><span class="pl-pds">&#39;</span>offset<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>dimension])</div><div class='line js-file-line' id='LC31'>			{</div><div class='line js-file-line' id='LC32'>				<span class="pl-k">return</span> element[<span class="pl-s"><span class="pl-pds">&#39;</span>offset<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>dimension];</div><div class='line js-file-line' id='LC33'>			}</div><div class='line js-file-line' id='LC34'>			<span class="pl-k">else</span></div><div class='line js-file-line' id='LC35'>			{</div><div class='line js-file-line' id='LC36'>				<span class="pl-k">return</span> <span class="pl-c1">document</span>.<span class="pl-c1">defaultView</span>.getComputedStyle(element).getPropertyValue(dimension);</div><div class='line js-file-line' id='LC37'>			}</div><div class='line js-file-line' id='LC38'>		};</div><div class='line js-file-line' id='LC39'><br></div><div class='line js-file-line' id='LC40'>		<span class="pl-k">var</span> width <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span> <span class="pl-k">=</span> computeDimension(context.canvas,<span class="pl-s"><span class="pl-pds">&#39;</span>Width<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> context.canvas.<span class="pl-c1">width</span>;</div><div class='line js-file-line' id='LC41'>		<span class="pl-k">var</span> height <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">height</span> <span class="pl-k">=</span> computeDimension(context.canvas,<span class="pl-s"><span class="pl-pds">&#39;</span>Height<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> context.canvas.<span class="pl-c1">height</span>;</div><div class='line js-file-line' id='LC42'><br></div><div class='line js-file-line' id='LC43'>		<span class="pl-c">// Firefox requires this to work correctly</span></div><div class='line js-file-line' id='LC44'>		context.canvas.<span class="pl-c1">width</span>  <span class="pl-k">=</span> width;</div><div class='line js-file-line' id='LC45'>		context.canvas.<span class="pl-c1">height</span> <span class="pl-k">=</span> height;</div><div class='line js-file-line' id='LC46'><br></div><div class='line js-file-line' id='LC47'>		width <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span> <span class="pl-k">=</span> context.canvas.<span class="pl-c1">width</span>;</div><div class='line js-file-line' id='LC48'>		height <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">height</span> <span class="pl-k">=</span> context.canvas.<span class="pl-c1">height</span>;</div><div class='line js-file-line' id='LC49'>		<span class="pl-v">this</span>.aspectRatio <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span> / <span class="pl-v">this</span>.<span class="pl-c1">height</span>;</div><div class='line js-file-line' id='LC50'>		<span class="pl-c">//High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.</span></div><div class='line js-file-line' id='LC51'>		helpers.retinaScale(<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC52'><br></div><div class='line js-file-line' id='LC53'>		<span class="pl-k">return</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC54'>	};</div><div class='line js-file-line' id='LC55'>	<span class="pl-c">//Globally expose the defaults to allow for user updating/changing</span></div><div class='line js-file-line' id='LC56'>	Chart.defaults <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC57'>		global<span class="pl-k">:</span> {</div><div class='line js-file-line' id='LC58'>			<span class="pl-c">// Boolean - Whether to animate the chart</span></div><div class='line js-file-line' id='LC59'>			animation<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC60'><br></div><div class='line js-file-line' id='LC61'>			<span class="pl-c">// Number - Number of animation steps</span></div><div class='line js-file-line' id='LC62'>			animationSteps<span class="pl-k">:</span> <span class="pl-c1">60</span>,</div><div class='line js-file-line' id='LC63'><br></div><div class='line js-file-line' id='LC64'>			<span class="pl-c">// String - Animation easing effect</span></div><div class='line js-file-line' id='LC65'>			animationEasing<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>easeOutQuart<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC66'><br></div><div class='line js-file-line' id='LC67'>			<span class="pl-c">// Boolean - If we should show the scale at all</span></div><div class='line js-file-line' id='LC68'>			showScale<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC69'><br></div><div class='line js-file-line' id='LC70'>			<span class="pl-c">// Boolean - If we want to override with a hard coded scale</span></div><div class='line js-file-line' id='LC71'>			scaleOverride<span class="pl-k">:</span> <span class="pl-c1">false</span>,</div><div class='line js-file-line' id='LC72'><br></div><div class='line js-file-line' id='LC73'>			<span class="pl-c">// ** Required if scaleOverride is true **</span></div><div class='line js-file-line' id='LC74'>			<span class="pl-c">// Number - The number of steps in a hard coded scale</span></div><div class='line js-file-line' id='LC75'>			scaleSteps<span class="pl-k">:</span> <span class="pl-c1">null</span>,</div><div class='line js-file-line' id='LC76'>			<span class="pl-c">// Number - The value jump in the hard coded scale</span></div><div class='line js-file-line' id='LC77'>			scaleStepWidth<span class="pl-k">:</span> <span class="pl-c1">null</span>,</div><div class='line js-file-line' id='LC78'>			<span class="pl-c">// Number - The scale starting value</span></div><div class='line js-file-line' id='LC79'>			scaleStartValue<span class="pl-k">:</span> <span class="pl-c1">null</span>,</div><div class='line js-file-line' id='LC80'><br></div><div class='line js-file-line' id='LC81'>			<span class="pl-c">// String - Colour of the scale line</span></div><div class='line js-file-line' id='LC82'>			scaleLineColor<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,.1)<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC83'><br></div><div class='line js-file-line' id='LC84'>			<span class="pl-c">// Number - Pixel width of the scale line</span></div><div class='line js-file-line' id='LC85'>			scaleLineWidth<span class="pl-k">:</span> <span class="pl-c1">1</span>,</div><div class='line js-file-line' id='LC86'><br></div><div class='line js-file-line' id='LC87'>			<span class="pl-c">// Boolean - Whether to show labels on the scale</span></div><div class='line js-file-line' id='LC88'>			scaleShowLabels<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC89'><br></div><div class='line js-file-line' id='LC90'>			<span class="pl-c">// Interpolated JS string - can access value</span></div><div class='line js-file-line' id='LC91'>			scaleLabel<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;%=value%&gt;<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC92'><br></div><div class='line js-file-line' id='LC93'>			<span class="pl-c">// Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there</span></div><div class='line js-file-line' id='LC94'>			scaleIntegersOnly<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC95'><br></div><div class='line js-file-line' id='LC96'>			<span class="pl-c">// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value</span></div><div class='line js-file-line' id='LC97'>			scaleBeginAtZero<span class="pl-k">:</span> <span class="pl-c1">false</span>,</div><div class='line js-file-line' id='LC98'><br></div><div class='line js-file-line' id='LC99'>			<span class="pl-c">// String - Scale label font declaration for the scale label</span></div><div class='line js-file-line' id='LC100'>			scaleFontFamily<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;Helvetica Neue&#39;, &#39;Helvetica&#39;, &#39;Arial&#39;, sans-serif<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC101'><br></div><div class='line js-file-line' id='LC102'>			<span class="pl-c">// Number - Scale label font size in pixels</span></div><div class='line js-file-line' id='LC103'>			scaleFontSize<span class="pl-k">:</span> <span class="pl-c1">12</span>,</div><div class='line js-file-line' id='LC104'><br></div><div class='line js-file-line' id='LC105'>			<span class="pl-c">// String - Scale label font weight style</span></div><div class='line js-file-line' id='LC106'>			scaleFontStyle<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC107'><br></div><div class='line js-file-line' id='LC108'>			<span class="pl-c">// String - Scale label font colour</span></div><div class='line js-file-line' id='LC109'>			scaleFontColor<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>#666<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC110'><br></div><div class='line js-file-line' id='LC111'>			<span class="pl-c">// Boolean - whether or not the chart should be responsive and resize when the browser does.</span></div><div class='line js-file-line' id='LC112'>			responsive<span class="pl-k">:</span> <span class="pl-c1">false</span>,</div><div class='line js-file-line' id='LC113'><br></div><div class='line js-file-line' id='LC114'>			<span class="pl-c">// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container</span></div><div class='line js-file-line' id='LC115'>			maintainAspectRatio<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC116'><br></div><div class='line js-file-line' id='LC117'>			<span class="pl-c">// Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove &amp; mousemove</span></div><div class='line js-file-line' id='LC118'>			showTooltips<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC119'><br></div><div class='line js-file-line' id='LC120'>			<span class="pl-c">// Boolean - Determines whether to draw built-in tooltip or call custom tooltip function</span></div><div class='line js-file-line' id='LC121'>			customTooltips<span class="pl-k">:</span> <span class="pl-c1">false</span>,</div><div class='line js-file-line' id='LC122'><br></div><div class='line js-file-line' id='LC123'>			<span class="pl-c">// Array - Array of string names to attach tooltip events</span></div><div class='line js-file-line' id='LC124'>			tooltipEvents<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>touchstart<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>touchmove<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>mouseout<span class="pl-pds">&quot;</span></span>],</div><div class='line js-file-line' id='LC125'><br></div><div class='line js-file-line' id='LC126'>			<span class="pl-c">// String - Tooltip background colour</span></div><div class='line js-file-line' id='LC127'>			tooltipFillColor<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,0.8)<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC128'><br></div><div class='line js-file-line' id='LC129'>			<span class="pl-c">// String - Tooltip label font declaration for the scale label</span></div><div class='line js-file-line' id='LC130'>			tooltipFontFamily<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;Helvetica Neue&#39;, &#39;Helvetica&#39;, &#39;Arial&#39;, sans-serif<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC131'><br></div><div class='line js-file-line' id='LC132'>			<span class="pl-c">// Number - Tooltip label font size in pixels</span></div><div class='line js-file-line' id='LC133'>			tooltipFontSize<span class="pl-k">:</span> <span class="pl-c1">14</span>,</div><div class='line js-file-line' id='LC134'><br></div><div class='line js-file-line' id='LC135'>			<span class="pl-c">// String - Tooltip font weight style</span></div><div class='line js-file-line' id='LC136'>			tooltipFontStyle<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC137'><br></div><div class='line js-file-line' id='LC138'>			<span class="pl-c">// String - Tooltip label font colour</span></div><div class='line js-file-line' id='LC139'>			tooltipFontColor<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>#fff<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC140'><br></div><div class='line js-file-line' id='LC141'>			<span class="pl-c">// String - Tooltip title font declaration for the scale label</span></div><div class='line js-file-line' id='LC142'>			tooltipTitleFontFamily<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;Helvetica Neue&#39;, &#39;Helvetica&#39;, &#39;Arial&#39;, sans-serif<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC143'><br></div><div class='line js-file-line' id='LC144'>			<span class="pl-c">// Number - Tooltip title font size in pixels</span></div><div class='line js-file-line' id='LC145'>			tooltipTitleFontSize<span class="pl-k">:</span> <span class="pl-c1">14</span>,</div><div class='line js-file-line' id='LC146'><br></div><div class='line js-file-line' id='LC147'>			<span class="pl-c">// String - Tooltip title font weight style</span></div><div class='line js-file-line' id='LC148'>			tooltipTitleFontStyle<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>bold<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC149'><br></div><div class='line js-file-line' id='LC150'>			<span class="pl-c">// String - Tooltip title font colour</span></div><div class='line js-file-line' id='LC151'>			tooltipTitleFontColor<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>#fff<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC152'><br></div><div class='line js-file-line' id='LC153'>			<span class="pl-c">// Number - pixel width of padding around tooltip text</span></div><div class='line js-file-line' id='LC154'>			tooltipYPadding<span class="pl-k">:</span> <span class="pl-c1">6</span>,</div><div class='line js-file-line' id='LC155'><br></div><div class='line js-file-line' id='LC156'>			<span class="pl-c">// Number - pixel width of padding around tooltip text</span></div><div class='line js-file-line' id='LC157'>			tooltipXPadding<span class="pl-k">:</span> <span class="pl-c1">6</span>,</div><div class='line js-file-line' id='LC158'><br></div><div class='line js-file-line' id='LC159'>			<span class="pl-c">// Number - Size of the caret on the tooltip</span></div><div class='line js-file-line' id='LC160'>			tooltipCaretSize<span class="pl-k">:</span> <span class="pl-c1">8</span>,</div><div class='line js-file-line' id='LC161'><br></div><div class='line js-file-line' id='LC162'>			<span class="pl-c">// Number - Pixel radius of the tooltip border</span></div><div class='line js-file-line' id='LC163'>			tooltipCornerRadius<span class="pl-k">:</span> <span class="pl-c1">6</span>,</div><div class='line js-file-line' id='LC164'><br></div><div class='line js-file-line' id='LC165'>			<span class="pl-c">// Number - Pixel offset from point x to tooltip edge</span></div><div class='line js-file-line' id='LC166'>			tooltipXOffset<span class="pl-k">:</span> <span class="pl-c1">10</span>,</div><div class='line js-file-line' id='LC167'><br></div><div class='line js-file-line' id='LC168'>			<span class="pl-c">// String - Template string for single tooltips</span></div><div class='line js-file-line' id='LC169'>			tooltipTemplate<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;%if (label){%&gt;&lt;%=label%&gt;: &lt;%}%&gt;&lt;%= value %&gt;<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC170'><br></div><div class='line js-file-line' id='LC171'>			<span class="pl-c">// String - Template string for single tooltips</span></div><div class='line js-file-line' id='LC172'>			multiTooltipTemplate<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;%= value %&gt;<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC173'><br></div><div class='line js-file-line' id='LC174'>			<span class="pl-c">// String - Colour behind the legend colour block</span></div><div class='line js-file-line' id='LC175'>			multiTooltipKeyBackground<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>#fff<span class="pl-pds">&#39;</span></span>,</div><div class='line js-file-line' id='LC176'><br></div><div class='line js-file-line' id='LC177'>			<span class="pl-c">// Function - Will fire on animation progression.</span></div><div class='line js-file-line' id='LC178'>			<span class="pl-en">onAnimationProgress</span><span class="pl-k">:</span> <span class="pl-k">function</span>(){},</div><div class='line js-file-line' id='LC179'><br></div><div class='line js-file-line' id='LC180'>			<span class="pl-c">// Function - Will fire on animation completion.</span></div><div class='line js-file-line' id='LC181'>			<span class="pl-en">onAnimationComplete</span><span class="pl-k">:</span> <span class="pl-k">function</span>(){}</div><div class='line js-file-line' id='LC182'><br></div><div class='line js-file-line' id='LC183'>		}</div><div class='line js-file-line' id='LC184'>	};</div><div class='line js-file-line' id='LC185'><br></div><div class='line js-file-line' id='LC186'>	<span class="pl-c">//Create a dictionary of chart types, to allow for extension of existing types</span></div><div class='line js-file-line' id='LC187'>	Chart.types <span class="pl-k">=</span> {};</div><div class='line js-file-line' id='LC188'><br></div><div class='line js-file-line' id='LC189'>	<span class="pl-c">//Global Chart helpers object for utility methods and classes</span></div><div class='line js-file-line' id='LC190'>	<span class="pl-k">var</span> helpers <span class="pl-k">=</span> Chart.helpers <span class="pl-k">=</span> {};</div><div class='line js-file-line' id='LC191'><br></div><div class='line js-file-line' id='LC192'>		<span class="pl-c">//-- Basic js utility methods</span></div><div class='line js-file-line' id='LC193'>	<span class="pl-k">var</span> each <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">each</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">loopable</span>,<span class="pl-smi">callback</span>,<span class="pl-smi">self</span>){</div><div class='line js-file-line' id='LC194'>			<span class="pl-k">var</span> additionalArgs <span class="pl-k">=</span> <span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.slice.<span class="pl-c1">call</span>(arguments, <span class="pl-c1">3</span>);</div><div class='line js-file-line' id='LC195'>			<span class="pl-c">// Check to see if null or undefined firstly.</span></div><div class='line js-file-line' id='LC196'>			<span class="pl-k">if</span> (loopable){</div><div class='line js-file-line' id='LC197'>				<span class="pl-k">if</span> (loopable.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-k">+</span>loopable.<span class="pl-c1">length</span>){</div><div class='line js-file-line' id='LC198'>					<span class="pl-k">var</span> i;</div><div class='line js-file-line' id='LC199'>					<span class="pl-k">for</span> (i<span class="pl-k">=</span><span class="pl-c1">0</span>; i<span class="pl-k">&lt;</span>loopable.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>){</div><div class='line js-file-line' id='LC200'>						callback.<span class="pl-c1">apply</span>(self,[loopable[i], i].<span class="pl-c1">concat</span>(additionalArgs));</div><div class='line js-file-line' id='LC201'>					}</div><div class='line js-file-line' id='LC202'>				}</div><div class='line js-file-line' id='LC203'>				<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC204'>					<span class="pl-k">for</span> (<span class="pl-k">var</span> item <span class="pl-k">in</span> loopable){</div><div class='line js-file-line' id='LC205'>						callback.<span class="pl-c1">apply</span>(self,[loopable[item],item].<span class="pl-c1">concat</span>(additionalArgs));</div><div class='line js-file-line' id='LC206'>					}</div><div class='line js-file-line' id='LC207'>				}</div><div class='line js-file-line' id='LC208'>			}</div><div class='line js-file-line' id='LC209'>		},</div><div class='line js-file-line' id='LC210'>		clone <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">clone</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">obj</span>){</div><div class='line js-file-line' id='LC211'>			<span class="pl-k">var</span> objClone <span class="pl-k">=</span> {};</div><div class='line js-file-line' id='LC212'>			each(obj,<span class="pl-k">function</span>(<span class="pl-smi">value</span>,<span class="pl-smi">key</span>){</div><div class='line js-file-line' id='LC213'>				<span class="pl-k">if</span> (obj.hasOwnProperty(key)){</div><div class='line js-file-line' id='LC214'>					objClone[key] <span class="pl-k">=</span> value;</div><div class='line js-file-line' id='LC215'>				}</div><div class='line js-file-line' id='LC216'>			});</div><div class='line js-file-line' id='LC217'>			<span class="pl-k">return</span> objClone;</div><div class='line js-file-line' id='LC218'>		},</div><div class='line js-file-line' id='LC219'>		extend <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">extend</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">base</span>){</div><div class='line js-file-line' id='LC220'>			each(<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.slice.<span class="pl-c1">call</span>(arguments,<span class="pl-c1">1</span>), <span class="pl-k">function</span>(<span class="pl-smi">extensionObject</span>) {</div><div class='line js-file-line' id='LC221'>				each(extensionObject,<span class="pl-k">function</span>(<span class="pl-smi">value</span>,<span class="pl-smi">key</span>){</div><div class='line js-file-line' id='LC222'>					<span class="pl-k">if</span> (extensionObject.hasOwnProperty(key)){</div><div class='line js-file-line' id='LC223'>						base[key] <span class="pl-k">=</span> value;</div><div class='line js-file-line' id='LC224'>					}</div><div class='line js-file-line' id='LC225'>				});</div><div class='line js-file-line' id='LC226'>			});</div><div class='line js-file-line' id='LC227'>			<span class="pl-k">return</span> base;</div><div class='line js-file-line' id='LC228'>		},</div><div class='line js-file-line' id='LC229'>		merge <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">merge</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">base</span>,<span class="pl-smi">master</span>){</div><div class='line js-file-line' id='LC230'>			<span class="pl-c">//Merge properties in left object over to a shallow clone of object right.</span></div><div class='line js-file-line' id='LC231'>			<span class="pl-k">var</span> args <span class="pl-k">=</span> <span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.slice.<span class="pl-c1">call</span>(arguments,<span class="pl-c1">0</span>);</div><div class='line js-file-line' id='LC232'>			args.<span class="pl-c1">unshift</span>({});</div><div class='line js-file-line' id='LC233'>			<span class="pl-k">return</span> extend.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>, args);</div><div class='line js-file-line' id='LC234'>		},</div><div class='line js-file-line' id='LC235'>		indexOf <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">indexOf</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">arrayToSearch</span>, <span class="pl-smi">item</span>){</div><div class='line js-file-line' id='LC236'>			<span class="pl-k">if</span> (<span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.indexOf) {</div><div class='line js-file-line' id='LC237'>				<span class="pl-k">return</span> arrayToSearch.<span class="pl-c1">indexOf</span>(item);</div><div class='line js-file-line' id='LC238'>			}</div><div class='line js-file-line' id='LC239'>			<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC240'>				<span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> arrayToSearch.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</div><div class='line js-file-line' id='LC241'>					<span class="pl-k">if</span> (arrayToSearch[i] <span class="pl-k">===</span> item) <span class="pl-k">return</span> i;</div><div class='line js-file-line' id='LC242'>				}</div><div class='line js-file-line' id='LC243'>				<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC244'>			}</div><div class='line js-file-line' id='LC245'>		},</div><div class='line js-file-line' id='LC246'>		where <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">where</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">collection</span>, <span class="pl-smi">filterCallback</span>){</div><div class='line js-file-line' id='LC247'>			<span class="pl-k">var</span> filtered <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC248'><br></div><div class='line js-file-line' id='LC249'>			helpers.each(collection, <span class="pl-k">function</span>(<span class="pl-smi">item</span>){</div><div class='line js-file-line' id='LC250'>				<span class="pl-k">if</span> (filterCallback(item)){</div><div class='line js-file-line' id='LC251'>					filtered.<span class="pl-c1">push</span>(item);</div><div class='line js-file-line' id='LC252'>				}</div><div class='line js-file-line' id='LC253'>			});</div><div class='line js-file-line' id='LC254'><br></div><div class='line js-file-line' id='LC255'>			<span class="pl-k">return</span> filtered;</div><div class='line js-file-line' id='LC256'>		},</div><div class='line js-file-line' id='LC257'>		findNextWhere <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">findNextWhere</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">arrayToSearch</span>, <span class="pl-smi">filterCallback</span>, <span class="pl-smi">startIndex</span>){</div><div class='line js-file-line' id='LC258'>			<span class="pl-c">// Default to start of the array</span></div><div class='line js-file-line' id='LC259'>			<span class="pl-k">if</span> (<span class="pl-k">!</span>startIndex){</div><div class='line js-file-line' id='LC260'>				startIndex <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC261'>			}</div><div class='line js-file-line' id='LC262'>			<span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> startIndex <span class="pl-k">+</span> <span class="pl-c1">1</span>; i <span class="pl-k">&lt;</span> arrayToSearch.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</div><div class='line js-file-line' id='LC263'>				<span class="pl-k">var</span> currentItem <span class="pl-k">=</span> arrayToSearch[i];</div><div class='line js-file-line' id='LC264'>				<span class="pl-k">if</span> (filterCallback(currentItem)){</div><div class='line js-file-line' id='LC265'>					<span class="pl-k">return</span> currentItem;</div><div class='line js-file-line' id='LC266'>				}</div><div class='line js-file-line' id='LC267'>			}</div><div class='line js-file-line' id='LC268'>		},</div><div class='line js-file-line' id='LC269'>		findPreviousWhere <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">findPreviousWhere</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">arrayToSearch</span>, <span class="pl-smi">filterCallback</span>, <span class="pl-smi">startIndex</span>){</div><div class='line js-file-line' id='LC270'>			<span class="pl-c">// Default to end of the array</span></div><div class='line js-file-line' id='LC271'>			<span class="pl-k">if</span> (<span class="pl-k">!</span>startIndex){</div><div class='line js-file-line' id='LC272'>				startIndex <span class="pl-k">=</span> arrayToSearch.<span class="pl-c1">length</span>;</div><div class='line js-file-line' id='LC273'>			}</div><div class='line js-file-line' id='LC274'>			<span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> startIndex <span class="pl-k">-</span> <span class="pl-c1">1</span>; i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>; i<span class="pl-k">--</span>) {</div><div class='line js-file-line' id='LC275'>				<span class="pl-k">var</span> currentItem <span class="pl-k">=</span> arrayToSearch[i];</div><div class='line js-file-line' id='LC276'>				<span class="pl-k">if</span> (filterCallback(currentItem)){</div><div class='line js-file-line' id='LC277'>					<span class="pl-k">return</span> currentItem;</div><div class='line js-file-line' id='LC278'>				}</div><div class='line js-file-line' id='LC279'>			}</div><div class='line js-file-line' id='LC280'>		},</div><div class='line js-file-line' id='LC281'>		inherits <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">inherits</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">extensions</span>){</div><div class='line js-file-line' id='LC282'>			<span class="pl-c">//Basic javascript inheritance based on the model created in Backbone.js</span></div><div class='line js-file-line' id='LC283'>			<span class="pl-k">var</span> parent <span class="pl-k">=</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC284'>			<span class="pl-k">var</span> ChartElement <span class="pl-k">=</span> (extensions <span class="pl-k">&amp;&amp;</span> extensions.hasOwnProperty(<span class="pl-s"><span class="pl-pds">&quot;</span>constructor<span class="pl-pds">&quot;</span></span>)) <span class="pl-k">?</span> <span class="pl-en">extensions.constructor</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){ <span class="pl-k">return</span> parent.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments); };</div><div class='line js-file-line' id='LC285'><br></div><div class='line js-file-line' id='LC286'>			<span class="pl-k">var</span> <span class="pl-en">Surrogate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(){ <span class="pl-v">this</span>.<span class="pl-c1">constructor</span> <span class="pl-k">=</span> ChartElement;};</div><div class='line js-file-line' id='LC287'>			<span class="pl-c1">Surrogate</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> parent.<span class="pl-c1">prototype</span>;</div><div class='line js-file-line' id='LC288'>			<span class="pl-c1">ChartElement</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Surrogate</span>();</div><div class='line js-file-line' id='LC289'><br></div><div class='line js-file-line' id='LC290'>			ChartElement.extend <span class="pl-k">=</span> inherits;</div><div class='line js-file-line' id='LC291'><br></div><div class='line js-file-line' id='LC292'>			<span class="pl-k">if</span> (extensions) extend(ChartElement.<span class="pl-c1">prototype</span>, extensions);</div><div class='line js-file-line' id='LC293'><br></div><div class='line js-file-line' id='LC294'>			ChartElement.__super__ <span class="pl-k">=</span> parent.<span class="pl-c1">prototype</span>;</div><div class='line js-file-line' id='LC295'><br></div><div class='line js-file-line' id='LC296'>			<span class="pl-k">return</span> ChartElement;</div><div class='line js-file-line' id='LC297'>		},</div><div class='line js-file-line' id='LC298'>		noop <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">noop</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(){},</div><div class='line js-file-line' id='LC299'>		uid <span class="pl-k">=</span> helpers.uid <span class="pl-k">=</span> (<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC300'>			<span class="pl-k">var</span> id<span class="pl-k">=</span><span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC301'>			<span class="pl-k">return</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC302'>				<span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&quot;</span>chart-<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> id<span class="pl-k">++</span>;</div><div class='line js-file-line' id='LC303'>			};</div><div class='line js-file-line' id='LC304'>		})(),</div><div class='line js-file-line' id='LC305'>		warn <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">warn</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">str</span>){</div><div class='line js-file-line' id='LC306'>			<span class="pl-c">//Method for warning of errors</span></div><div class='line js-file-line' id='LC307'>			<span class="pl-k">if</span> (<span class="pl-c1">window</span>.<span class="pl-en">console</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> <span class="pl-c1">window</span>.<span class="pl-en">console</span><span class="pl-c1">.warn</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>) <span class="pl-en">console</span><span class="pl-c1">.warn</span>(str);</div><div class='line js-file-line' id='LC308'>		},</div><div class='line js-file-line' id='LC309'>		amd <span class="pl-k">=</span> helpers.amd <span class="pl-k">=</span> (<span class="pl-k">typeof</span> define <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> define.amd),</div><div class='line js-file-line' id='LC310'>		<span class="pl-c">//-- Math methods</span></div><div class='line js-file-line' id='LC311'>		isNumber <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">isNumber</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">n</span>){</div><div class='line js-file-line' id='LC312'>			<span class="pl-k">return</span> <span class="pl-k">!</span><span class="pl-c1">isNaN</span>(<span class="pl-c1">parseFloat</span>(n)) <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">isFinite</span>(n);</div><div class='line js-file-line' id='LC313'>		},</div><div class='line js-file-line' id='LC314'>		max <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">max</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>){</div><div class='line js-file-line' id='LC315'>			<span class="pl-k">return</span> <span class="pl-c1">Math</span>.max.<span class="pl-c1">apply</span>( <span class="pl-c1">Math</span>, array );</div><div class='line js-file-line' id='LC316'>		},</div><div class='line js-file-line' id='LC317'>		min <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">min</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>){</div><div class='line js-file-line' id='LC318'>			<span class="pl-k">return</span> <span class="pl-c1">Math</span>.min.<span class="pl-c1">apply</span>( <span class="pl-c1">Math</span>, array );</div><div class='line js-file-line' id='LC319'>		},</div><div class='line js-file-line' id='LC320'>		cap <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">cap</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">valueToCap</span>,<span class="pl-smi">maxValue</span>,<span class="pl-smi">minValue</span>){</div><div class='line js-file-line' id='LC321'>			<span class="pl-k">if</span>(isNumber(maxValue)) {</div><div class='line js-file-line' id='LC322'>				<span class="pl-k">if</span>( valueToCap <span class="pl-k">&gt;</span> maxValue ) {</div><div class='line js-file-line' id='LC323'>					<span class="pl-k">return</span> maxValue;</div><div class='line js-file-line' id='LC324'>				}</div><div class='line js-file-line' id='LC325'>			}</div><div class='line js-file-line' id='LC326'>			<span class="pl-k">else</span> <span class="pl-k">if</span>(isNumber(minValue)){</div><div class='line js-file-line' id='LC327'>				<span class="pl-k">if</span> ( valueToCap <span class="pl-k">&lt;</span> minValue ){</div><div class='line js-file-line' id='LC328'>					<span class="pl-k">return</span> minValue;</div><div class='line js-file-line' id='LC329'>				}</div><div class='line js-file-line' id='LC330'>			}</div><div class='line js-file-line' id='LC331'>			<span class="pl-k">return</span> valueToCap;</div><div class='line js-file-line' id='LC332'>		},</div><div class='line js-file-line' id='LC333'>		getDecimalPlaces <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">getDecimalPlaces</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">num</span>){</div><div class='line js-file-line' id='LC334'>			<span class="pl-k">if</span> (num<span class="pl-k">%</span><span class="pl-c1">1</span><span class="pl-k">!==</span><span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> isNumber(num)){</div><div class='line js-file-line' id='LC335'>				<span class="pl-k">var</span> s <span class="pl-k">=</span> num.<span class="pl-c1">toString</span>();</div><div class='line js-file-line' id='LC336'>				<span class="pl-k">if</span>(s.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>e-<span class="pl-pds">&quot;</span></span>) <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC337'>					<span class="pl-c">// no exponent, e.g. 0.01</span></div><div class='line js-file-line' id='LC338'>					<span class="pl-k">return</span> s.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">1</span>].<span class="pl-c1">length</span>;</div><div class='line js-file-line' id='LC339'>				}</div><div class='line js-file-line' id='LC340'>				<span class="pl-k">else</span> <span class="pl-k">if</span>(s.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>) <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</div><div class='line js-file-line' id='LC341'>					<span class="pl-c">// no decimal point, e.g. 1e-9</span></div><div class='line js-file-line' id='LC342'>					<span class="pl-k">return</span> <span class="pl-c1">parseInt</span>(s.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>e-<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">1</span>]);</div><div class='line js-file-line' id='LC343'>				}</div><div class='line js-file-line' id='LC344'>				<span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC345'>					<span class="pl-c">// exponent and decimal point, e.g. 1.23e-9</span></div><div class='line js-file-line' id='LC346'>					<span class="pl-k">var</span> parts <span class="pl-k">=</span> s.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)[<span class="pl-c1">1</span>].<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>e-<span class="pl-pds">&quot;</span></span>);</div><div class='line js-file-line' id='LC347'>					<span class="pl-k">return</span> parts[<span class="pl-c1">0</span>].<span class="pl-c1">length</span> <span class="pl-k">+</span> <span class="pl-c1">parseInt</span>(parts[<span class="pl-c1">1</span>]);</div><div class='line js-file-line' id='LC348'>				}</div><div class='line js-file-line' id='LC349'>			}</div><div class='line js-file-line' id='LC350'>			<span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC351'>				<span class="pl-k">return</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC352'>			}</div><div class='line js-file-line' id='LC353'>		},</div><div class='line js-file-line' id='LC354'>		toRadians <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">radians</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">degrees</span>){</div><div class='line js-file-line' id='LC355'>			<span class="pl-k">return</span> degrees <span class="pl-k">*</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>/<span class="pl-c1">180</span>);</div><div class='line js-file-line' id='LC356'>		},</div><div class='line js-file-line' id='LC357'>		<span class="pl-c">// Gets the angle from vertical upright to the point about a centre.</span></div><div class='line js-file-line' id='LC358'>		getAngleFromPoint <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">getAngleFromPoint</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">centrePoint</span>, <span class="pl-smi">anglePoint</span>){</div><div class='line js-file-line' id='LC359'>			<span class="pl-k">var</span> distanceFromXCenter <span class="pl-k">=</span> anglePoint.<span class="pl-c1">x</span> <span class="pl-k">-</span> centrePoint.<span class="pl-c1">x</span>,</div><div class='line js-file-line' id='LC360'>				distanceFromYCenter <span class="pl-k">=</span> anglePoint.<span class="pl-c1">y</span> <span class="pl-k">-</span> centrePoint.<span class="pl-c1">y</span>,</div><div class='line js-file-line' id='LC361'>				radialDistanceFromCenter <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>( distanceFromXCenter <span class="pl-k">*</span> distanceFromXCenter <span class="pl-k">+</span> distanceFromYCenter <span class="pl-k">*</span> distanceFromYCenter);</div><div class='line js-file-line' id='LC362'><br></div><div class='line js-file-line' id='LC363'><br></div><div class='line js-file-line' id='LC364'>			<span class="pl-k">var</span> angle <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">atan2</span>(distanceFromYCenter, distanceFromXCenter);</div><div class='line js-file-line' id='LC365'><br></div><div class='line js-file-line' id='LC366'>			<span class="pl-c">//If the segment is in the top left quadrant, we need to add another rotation to the angle</span></div><div class='line js-file-line' id='LC367'>			<span class="pl-k">if</span> (distanceFromXCenter <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> distanceFromYCenter <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC368'>				angle <span class="pl-k">+=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">*</span><span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC369'>			}</div><div class='line js-file-line' id='LC370'><br></div><div class='line js-file-line' id='LC371'>			<span class="pl-k">return</span> {</div><div class='line js-file-line' id='LC372'>				angle<span class="pl-k">:</span> angle,</div><div class='line js-file-line' id='LC373'>				distance<span class="pl-k">:</span> radialDistanceFromCenter</div><div class='line js-file-line' id='LC374'>			};</div><div class='line js-file-line' id='LC375'>		},</div><div class='line js-file-line' id='LC376'>		aliasPixel <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">aliasPixel</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">pixelWidth</span>){</div><div class='line js-file-line' id='LC377'>			<span class="pl-k">return</span> (pixelWidth <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">0.5</span>;</div><div class='line js-file-line' id='LC378'>		},</div><div class='line js-file-line' id='LC379'>		splineCurve <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">splineCurve</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">FirstPoint</span>,<span class="pl-smi">MiddlePoint</span>,<span class="pl-smi">AfterPoint</span>,<span class="pl-smi">t</span>){</div><div class='line js-file-line' id='LC380'>			<span class="pl-c">//Props to Rob Spencer at scaled innovation for his post on splining between points</span></div><div class='line js-file-line' id='LC381'>			<span class="pl-c">//http://scaledinnovation.com/analytics/splines/aboutSplines.html</span></div><div class='line js-file-line' id='LC382'>			<span class="pl-k">var</span> d01<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(MiddlePoint.<span class="pl-c1">x</span><span class="pl-k">-</span>FirstPoint.<span class="pl-c1">x</span>,<span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(MiddlePoint.<span class="pl-c1">y</span><span class="pl-k">-</span>FirstPoint.<span class="pl-c1">y</span>,<span class="pl-c1">2</span>)),</div><div class='line js-file-line' id='LC383'>				d12<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(AfterPoint.<span class="pl-c1">x</span><span class="pl-k">-</span>MiddlePoint.<span class="pl-c1">x</span>,<span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(AfterPoint.<span class="pl-c1">y</span><span class="pl-k">-</span>MiddlePoint.<span class="pl-c1">y</span>,<span class="pl-c1">2</span>)),</div><div class='line js-file-line' id='LC384'>				fa<span class="pl-k">=</span>t<span class="pl-k">*</span>d01/(d01<span class="pl-k">+</span>d12),<span class="pl-c">// scaling factor for triangle Ta</span></div><div class='line js-file-line' id='LC385'>				fb<span class="pl-k">=</span>t<span class="pl-k">*</span>d12/(d01<span class="pl-k">+</span>d12);</div><div class='line js-file-line' id='LC386'>			<span class="pl-k">return</span> {</div><div class='line js-file-line' id='LC387'>				inner <span class="pl-k">:</span> {</div><div class='line js-file-line' id='LC388'>					x <span class="pl-k">:</span> MiddlePoint.<span class="pl-c1">x</span><span class="pl-k">-</span>fa<span class="pl-k">*</span>(AfterPoint.<span class="pl-c1">x</span><span class="pl-k">-</span>FirstPoint.<span class="pl-c1">x</span>),</div><div class='line js-file-line' id='LC389'>					y <span class="pl-k">:</span> MiddlePoint.<span class="pl-c1">y</span><span class="pl-k">-</span>fa<span class="pl-k">*</span>(AfterPoint.<span class="pl-c1">y</span><span class="pl-k">-</span>FirstPoint.<span class="pl-c1">y</span>)</div><div class='line js-file-line' id='LC390'>				},</div><div class='line js-file-line' id='LC391'>				outer <span class="pl-k">:</span> {</div><div class='line js-file-line' id='LC392'>					x<span class="pl-k">:</span> MiddlePoint.<span class="pl-c1">x</span><span class="pl-k">+</span>fb<span class="pl-k">*</span>(AfterPoint.<span class="pl-c1">x</span><span class="pl-k">-</span>FirstPoint.<span class="pl-c1">x</span>),</div><div class='line js-file-line' id='LC393'>					y <span class="pl-k">:</span> MiddlePoint.<span class="pl-c1">y</span><span class="pl-k">+</span>fb<span class="pl-k">*</span>(AfterPoint.<span class="pl-c1">y</span><span class="pl-k">-</span>FirstPoint.<span class="pl-c1">y</span>)</div><div class='line js-file-line' id='LC394'>				}</div><div class='line js-file-line' id='LC395'>			};</div><div class='line js-file-line' id='LC396'>		},</div><div class='line js-file-line' id='LC397'>		calculateOrderOfMagnitude <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">calculateOrderOfMagnitude</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">val</span>){</div><div class='line js-file-line' id='LC398'>			<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span><span class="pl-c1">.log</span>(val) / <span class="pl-c1">Math</span>.<span class="pl-c1">LN10</span>);</div><div class='line js-file-line' id='LC399'>		},</div><div class='line js-file-line' id='LC400'>		calculateScaleRange <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">calculateScaleRange</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">valuesArray</span>, <span class="pl-smi">drawingSize</span>, <span class="pl-smi">textSize</span>, <span class="pl-smi">startFromZero</span>, <span class="pl-smi">integersOnly</span>){</div><div class='line js-file-line' id='LC401'><br></div><div class='line js-file-line' id='LC402'>			<span class="pl-c">//Set a minimum step of two - a point at the top of the graph, and a point at the base</span></div><div class='line js-file-line' id='LC403'>			<span class="pl-k">var</span> minSteps <span class="pl-k">=</span> <span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC404'>				maxSteps <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(drawingSize/(textSize <span class="pl-k">*</span> <span class="pl-c1">1.5</span>)),</div><div class='line js-file-line' id='LC405'>				skipFitting <span class="pl-k">=</span> (minSteps <span class="pl-k">&gt;=</span> maxSteps);</div><div class='line js-file-line' id='LC406'><br></div><div class='line js-file-line' id='LC407'>			<span class="pl-k">var</span> maxValue <span class="pl-k">=</span> <span class="pl-c1">max</span>(valuesArray),</div><div class='line js-file-line' id='LC408'>				minValue <span class="pl-k">=</span> <span class="pl-c1">min</span>(valuesArray);</div><div class='line js-file-line' id='LC409'><br></div><div class='line js-file-line' id='LC410'>			<span class="pl-c">// We need some degree of separation here to calculate the scales if all the values are the same</span></div><div class='line js-file-line' id='LC411'>			<span class="pl-c">// Adding/minusing 0.5 will give us a range of 1.</span></div><div class='line js-file-line' id='LC412'>			<span class="pl-k">if</span> (maxValue <span class="pl-k">===</span> minValue){</div><div class='line js-file-line' id='LC413'>				maxValue <span class="pl-k">+=</span> <span class="pl-c1">0.5</span>;</div><div class='line js-file-line' id='LC414'>				<span class="pl-c">// So we don&#39;t end up with a graph with a negative start value if we&#39;ve said always start from zero</span></div><div class='line js-file-line' id='LC415'>				<span class="pl-k">if</span> (minValue <span class="pl-k">&gt;=</span> <span class="pl-c1">0.5</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>startFromZero){</div><div class='line js-file-line' id='LC416'>					minValue <span class="pl-k">-=</span> <span class="pl-c1">0.5</span>;</div><div class='line js-file-line' id='LC417'>				}</div><div class='line js-file-line' id='LC418'>				<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC419'>					<span class="pl-c">// Make up a whole number above the values</span></div><div class='line js-file-line' id='LC420'>					maxValue <span class="pl-k">+=</span> <span class="pl-c1">0.5</span>;</div><div class='line js-file-line' id='LC421'>				}</div><div class='line js-file-line' id='LC422'>			}</div><div class='line js-file-line' id='LC423'><br></div><div class='line js-file-line' id='LC424'>			<span class="pl-k">var</span>	valueRange <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(maxValue <span class="pl-k">-</span> minValue),</div><div class='line js-file-line' id='LC425'>				rangeOrderOfMagnitude <span class="pl-k">=</span> calculateOrderOfMagnitude(valueRange),</div><div class='line js-file-line' id='LC426'>				graphMax <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(maxValue / (<span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>, rangeOrderOfMagnitude))) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>, rangeOrderOfMagnitude),</div><div class='line js-file-line' id='LC427'>				graphMin <span class="pl-k">=</span> (startFromZero) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(minValue / (<span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>, rangeOrderOfMagnitude))) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>, rangeOrderOfMagnitude),</div><div class='line js-file-line' id='LC428'>				graphRange <span class="pl-k">=</span> graphMax <span class="pl-k">-</span> graphMin,</div><div class='line js-file-line' id='LC429'>				stepValue <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>, rangeOrderOfMagnitude),</div><div class='line js-file-line' id='LC430'>				numberOfSteps <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(graphRange / stepValue);</div><div class='line js-file-line' id='LC431'><br></div><div class='line js-file-line' id='LC432'>			<span class="pl-c">//If we have more space on the graph we&#39;ll use it to give more definition to the data</span></div><div class='line js-file-line' id='LC433'>			<span class="pl-k">while</span>((numberOfSteps <span class="pl-k">&gt;</span> maxSteps <span class="pl-k">||</span> (numberOfSteps <span class="pl-k">*</span> <span class="pl-c1">2</span>) <span class="pl-k">&lt;</span> maxSteps) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>skipFitting) {</div><div class='line js-file-line' id='LC434'>				<span class="pl-k">if</span>(numberOfSteps <span class="pl-k">&gt;</span> maxSteps){</div><div class='line js-file-line' id='LC435'>					stepValue <span class="pl-k">*=</span><span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC436'>					numberOfSteps <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(graphRange/stepValue);</div><div class='line js-file-line' id='LC437'>					<span class="pl-c">// Don&#39;t ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.</span></div><div class='line js-file-line' id='LC438'>					<span class="pl-k">if</span> (numberOfSteps <span class="pl-k">%</span> <span class="pl-c1">1</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC439'>						skipFitting <span class="pl-k">=</span> <span class="pl-c1">true</span>;</div><div class='line js-file-line' id='LC440'>					}</div><div class='line js-file-line' id='LC441'>				}</div><div class='line js-file-line' id='LC442'>				<span class="pl-c">//We can fit in double the amount of scale points on the scale</span></div><div class='line js-file-line' id='LC443'>				<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC444'>					<span class="pl-c">//If user has declared ints only, and the step value isn&#39;t a decimal</span></div><div class='line js-file-line' id='LC445'>					<span class="pl-k">if</span> (integersOnly <span class="pl-k">&amp;&amp;</span> rangeOrderOfMagnitude <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC446'>						<span class="pl-c">//If the user has said integers only, we need to check that making the scale more granular wouldn&#39;t make it a float</span></div><div class='line js-file-line' id='LC447'>						<span class="pl-k">if</span>(stepValue/<span class="pl-c1">2</span> <span class="pl-k">%</span> <span class="pl-c1">1</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC448'>							stepValue <span class="pl-k">/=</span><span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC449'>							numberOfSteps <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(graphRange/stepValue);</div><div class='line js-file-line' id='LC450'>						}</div><div class='line js-file-line' id='LC451'>						<span class="pl-c">//If it would make it a float break out of the loop</span></div><div class='line js-file-line' id='LC452'>						<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC453'>							<span class="pl-k">break</span>;</div><div class='line js-file-line' id='LC454'>						}</div><div class='line js-file-line' id='LC455'>					}</div><div class='line js-file-line' id='LC456'>					<span class="pl-c">//If the scale doesn&#39;t have to be an int, make the scale more granular anyway.</span></div><div class='line js-file-line' id='LC457'>					<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC458'>						stepValue <span class="pl-k">/=</span><span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC459'>						numberOfSteps <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(graphRange/stepValue);</div><div class='line js-file-line' id='LC460'>					}</div><div class='line js-file-line' id='LC461'><br></div><div class='line js-file-line' id='LC462'>				}</div><div class='line js-file-line' id='LC463'>			}</div><div class='line js-file-line' id='LC464'><br></div><div class='line js-file-line' id='LC465'>			<span class="pl-k">if</span> (skipFitting){</div><div class='line js-file-line' id='LC466'>				numberOfSteps <span class="pl-k">=</span> minSteps;</div><div class='line js-file-line' id='LC467'>				stepValue <span class="pl-k">=</span> graphRange / numberOfSteps;</div><div class='line js-file-line' id='LC468'>			}</div><div class='line js-file-line' id='LC469'><br></div><div class='line js-file-line' id='LC470'>			<span class="pl-k">return</span> {</div><div class='line js-file-line' id='LC471'>				steps <span class="pl-k">:</span> numberOfSteps,</div><div class='line js-file-line' id='LC472'>				stepValue <span class="pl-k">:</span> stepValue,</div><div class='line js-file-line' id='LC473'>				min <span class="pl-k">:</span> graphMin,</div><div class='line js-file-line' id='LC474'>				max	<span class="pl-k">:</span> graphMin <span class="pl-k">+</span> (numberOfSteps <span class="pl-k">*</span> stepValue)</div><div class='line js-file-line' id='LC475'>			};</div><div class='line js-file-line' id='LC476'><br></div><div class='line js-file-line' id='LC477'>		},</div><div class='line js-file-line' id='LC478'>		<span class="pl-c">/* jshint ignore:start */</span></div><div class='line js-file-line' id='LC479'>		<span class="pl-c">// Blows up jshint errors based on the new Function constructor</span></div><div class='line js-file-line' id='LC480'>		<span class="pl-c">//Templating methods</span></div><div class='line js-file-line' id='LC481'>		<span class="pl-c">//Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/</span></div><div class='line js-file-line' id='LC482'>		template <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">template</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">templateString</span>, <span class="pl-smi">valuesObject</span>){</div><div class='line js-file-line' id='LC483'><br></div><div class='line js-file-line' id='LC484'>			<span class="pl-c">// If templateString is function rather than string-template - call the function for valuesObject</span></div><div class='line js-file-line' id='LC485'><br></div><div class='line js-file-line' id='LC486'>			<span class="pl-k">if</span>(templateString <span class="pl-k">instanceof</span> <span class="pl-c1">Function</span>){</div><div class='line js-file-line' id='LC487'>			 	<span class="pl-k">return</span> templateString(valuesObject);</div><div class='line js-file-line' id='LC488'>		 	}</div><div class='line js-file-line' id='LC489'><br></div><div class='line js-file-line' id='LC490'>			<span class="pl-k">var</span> cache <span class="pl-k">=</span> {};</div><div class='line js-file-line' id='LC491'>			<span class="pl-k">function</span> <span class="pl-en">tmpl</span>(<span class="pl-smi">str</span>, <span class="pl-smi">data</span>){</div><div class='line js-file-line' id='LC492'>				<span class="pl-c">// Figure out if we&#39;re getting a template, or if we need to</span></div><div class='line js-file-line' id='LC493'>				<span class="pl-c">// load the template - and be sure to cache the result.</span></div><div class='line js-file-line' id='LC494'>				<span class="pl-k">var</span> fn <span class="pl-k">=</span> <span class="pl-k">!</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\W</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(str) <span class="pl-k">?</span></div><div class='line js-file-line' id='LC495'>				cache[str] <span class="pl-k">=</span> cache[str] <span class="pl-k">:</span></div><div class='line js-file-line' id='LC496'><br></div><div class='line js-file-line' id='LC497'>				<span class="pl-c">// Generate a reusable function that will serve as a template</span></div><div class='line js-file-line' id='LC498'>				<span class="pl-c">// generator (and which will be cached).</span></div><div class='line js-file-line' id='LC499'>				<span class="pl-k">new</span> <span class="pl-en">Function</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>obj<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC500'>					<span class="pl-s"><span class="pl-pds">&quot;</span>var p=[],print=function(){p.push.apply(p,arguments);};<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></div><div class='line js-file-line' id='LC501'><br></div><div class='line js-file-line' id='LC502'>					<span class="pl-c">// Introduce the data as local variables using with(){}</span></div><div class='line js-file-line' id='LC503'>					<span class="pl-s"><span class="pl-pds">&quot;</span>with(obj){p.push(&#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></div><div class='line js-file-line' id='LC504'><br></div><div class='line js-file-line' id='LC505'>					<span class="pl-c">// Convert the template into pure JavaScript</span></div><div class='line js-file-line' id='LC506'>					str</div><div class='line js-file-line' id='LC507'>						.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-cce">\r\t\n</span>]</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)</div><div class='line js-file-line' id='LC508'>						.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;%<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span>)</div><div class='line js-file-line' id='LC509'>						.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>((<span class="pl-k">^</span><span class="pl-k">|</span>%&gt;)<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\t</span>]</span><span class="pl-k">*</span>)&#39;<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>$1<span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span>)</div><div class='line js-file-line' id='LC510'>						.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\t</span>=(<span class="pl-c1">.</span><span class="pl-k">*?</span>)%&gt;<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;,$1,&#39;<span class="pl-pds">&quot;</span></span>)</div><div class='line js-file-line' id='LC511'>						.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;);<span class="pl-pds">&quot;</span></span>)</div><div class='line js-file-line' id='LC512'>						.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%&gt;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>p.push(&#39;<span class="pl-pds">&quot;</span></span>)</div><div class='line js-file-line' id='LC513'>						.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>&#39;<span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span></div><div class='line js-file-line' id='LC514'>					<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;);}return p.join(&#39;&#39;);<span class="pl-pds">&quot;</span></span></div><div class='line js-file-line' id='LC515'>				);</div><div class='line js-file-line' id='LC516'><br></div><div class='line js-file-line' id='LC517'>				<span class="pl-c">// Provide some basic currying to the user</span></div><div class='line js-file-line' id='LC518'>				<span class="pl-k">return</span> data <span class="pl-k">?</span> fn( data ) <span class="pl-k">:</span> fn;</div><div class='line js-file-line' id='LC519'>			}</div><div class='line js-file-line' id='LC520'>			<span class="pl-k">return</span> tmpl(templateString,valuesObject);</div><div class='line js-file-line' id='LC521'>		},</div><div class='line js-file-line' id='LC522'>		<span class="pl-c">/* jshint ignore:end */</span></div><div class='line js-file-line' id='LC523'>		generateLabels <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">generateLabels</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">templateString</span>,<span class="pl-smi">numberOfSteps</span>,<span class="pl-smi">graphMin</span>,<span class="pl-smi">stepValue</span>){</div><div class='line js-file-line' id='LC524'>			<span class="pl-k">var</span> labelsArray <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Array</span>(numberOfSteps);</div><div class='line js-file-line' id='LC525'>			<span class="pl-k">if</span> (templateString){</div><div class='line js-file-line' id='LC526'>				each(labelsArray,<span class="pl-k">function</span>(<span class="pl-smi">val</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC527'>					labelsArray[index] <span class="pl-k">=</span> template(templateString,{value<span class="pl-k">:</span> (graphMin <span class="pl-k">+</span> (stepValue<span class="pl-k">*</span>(index<span class="pl-k">+</span><span class="pl-c1">1</span>)))});</div><div class='line js-file-line' id='LC528'>				});</div><div class='line js-file-line' id='LC529'>			}</div><div class='line js-file-line' id='LC530'>			<span class="pl-k">return</span> labelsArray;</div><div class='line js-file-line' id='LC531'>		},</div><div class='line js-file-line' id='LC532'>		<span class="pl-c">//--Animation methods</span></div><div class='line js-file-line' id='LC533'>		<span class="pl-c">//Easing functions adapted from Robert Penner&#39;s easing equations</span></div><div class='line js-file-line' id='LC534'>		<span class="pl-c">//http://www.robertpenner.com/easing/</span></div><div class='line js-file-line' id='LC535'>		easingEffects <span class="pl-k">=</span> helpers.easingEffects <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC536'>			<span class="pl-en">linear</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC537'>				<span class="pl-k">return</span> t;</div><div class='line js-file-line' id='LC538'>			},</div><div class='line js-file-line' id='LC539'>			<span class="pl-en">easeInQuad</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC540'>				<span class="pl-k">return</span> t <span class="pl-k">*</span> t;</div><div class='line js-file-line' id='LC541'>			},</div><div class='line js-file-line' id='LC542'>			<span class="pl-en">easeOutQuad</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC543'>				<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">*</span> t <span class="pl-k">*</span> (t <span class="pl-k">-</span> <span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC544'>			},</div><div class='line js-file-line' id='LC545'>			<span class="pl-en">easeInOutQuad</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC546'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC547'>					<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> t <span class="pl-k">*</span> t;</div><div class='line js-file-line' id='LC548'>				}</div><div class='line js-file-line' id='LC549'>				<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> ((<span class="pl-k">--</span>t) <span class="pl-k">*</span> (t <span class="pl-k">-</span> <span class="pl-c1">2</span>) <span class="pl-k">-</span> <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC550'>			},</div><div class='line js-file-line' id='LC551'>			<span class="pl-en">easeInCubic</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC552'>				<span class="pl-k">return</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t;</div><div class='line js-file-line' id='LC553'>			},</div><div class='line js-file-line' id='LC554'>			<span class="pl-en">easeOutCubic</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC555'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> ((t <span class="pl-k">=</span> t / <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">+</span> <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC556'>			},</div><div class='line js-file-line' id='LC557'>			<span class="pl-en">easeInOutCubic</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC558'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC559'>					<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t;</div><div class='line js-file-line' id='LC560'>				}</div><div class='line js-file-line' id='LC561'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> ((t <span class="pl-k">-=</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">+</span> <span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC562'>			},</div><div class='line js-file-line' id='LC563'>			<span class="pl-en">easeInQuart</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC564'>				<span class="pl-k">return</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t;</div><div class='line js-file-line' id='LC565'>			},</div><div class='line js-file-line' id='LC566'>			<span class="pl-en">easeOutQuart</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC567'>				<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">*</span> ((t <span class="pl-k">=</span> t / <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">-</span> <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC568'>			},</div><div class='line js-file-line' id='LC569'>			<span class="pl-en">easeInOutQuart</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC570'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC571'>					<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t;</div><div class='line js-file-line' id='LC572'>				}</div><div class='line js-file-line' id='LC573'>				<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> ((t <span class="pl-k">-=</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">-</span> <span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC574'>			},</div><div class='line js-file-line' id='LC575'>			<span class="pl-en">easeInQuint</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC576'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> (t <span class="pl-k">/=</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t;</div><div class='line js-file-line' id='LC577'>			},</div><div class='line js-file-line' id='LC578'>			<span class="pl-en">easeOutQuint</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC579'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> ((t <span class="pl-k">=</span> t / <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">+</span> <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC580'>			},</div><div class='line js-file-line' id='LC581'>			<span class="pl-en">easeInOutQuint</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC582'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC583'>					<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t;</div><div class='line js-file-line' id='LC584'>				}</div><div class='line js-file-line' id='LC585'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> ((t <span class="pl-k">-=</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">*</span> t <span class="pl-k">+</span> <span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC586'>			},</div><div class='line js-file-line' id='LC587'>			<span class="pl-en">easeInSine</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC588'>				<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(t / <span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> / <span class="pl-c1">2</span>)) <span class="pl-k">+</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC589'>			},</div><div class='line js-file-line' id='LC590'>			<span class="pl-en">easeOutSine</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC591'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(t / <span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> / <span class="pl-c1">2</span>));</div><div class='line js-file-line' id='LC592'>			},</div><div class='line js-file-line' id='LC593'>			<span class="pl-en">easeInOutSine</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC594'>				<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> <span class="pl-k">*</span> t / <span class="pl-c1">1</span>) <span class="pl-k">-</span> <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC595'>			},</div><div class='line js-file-line' id='LC596'>			<span class="pl-en">easeInExpo</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC597'>				<span class="pl-k">return</span> (t <span class="pl-k">===</span> <span class="pl-c1">0</span>) <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-c1">10</span> <span class="pl-k">*</span> (t / <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>));</div><div class='line js-file-line' id='LC598'>			},</div><div class='line js-file-line' id='LC599'>			<span class="pl-en">easeOutExpo</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC600'>				<span class="pl-k">return</span> (t <span class="pl-k">===</span> <span class="pl-c1">1</span>) <span class="pl-k">?</span> <span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">10</span> <span class="pl-k">*</span> t / <span class="pl-c1">1</span>) <span class="pl-k">+</span> <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC601'>			},</div><div class='line js-file-line' id='LC602'>			<span class="pl-en">easeInOutExpo</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC603'>				<span class="pl-k">if</span> (t <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC604'>					<span class="pl-k">return</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC605'>				}</div><div class='line js-file-line' id='LC606'>				<span class="pl-k">if</span> (t <span class="pl-k">===</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC607'>					<span class="pl-k">return</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC608'>				}</div><div class='line js-file-line' id='LC609'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC610'>					<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-c1">10</span> <span class="pl-k">*</span> (t <span class="pl-k">-</span> <span class="pl-c1">1</span>));</div><div class='line js-file-line' id='LC611'>				}</div><div class='line js-file-line' id='LC612'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> (<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">10</span> <span class="pl-k">*</span> <span class="pl-k">--</span>t) <span class="pl-k">+</span> <span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC613'>			},</div><div class='line js-file-line' id='LC614'>			<span class="pl-en">easeInCirc</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC615'>				<span class="pl-k">if</span> (t <span class="pl-k">&gt;=</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC616'>					<span class="pl-k">return</span> t;</div><div class='line js-file-line' id='LC617'>				}</div><div class='line js-file-line' id='LC618'>				<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">1</span> <span class="pl-k">-</span> (t <span class="pl-k">/=</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t) <span class="pl-k">-</span> <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC619'>			},</div><div class='line js-file-line' id='LC620'>			<span class="pl-en">easeOutCirc</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC621'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">1</span> <span class="pl-k">-</span> (t <span class="pl-k">=</span> t / <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t);</div><div class='line js-file-line' id='LC622'>			},</div><div class='line js-file-line' id='LC623'>			<span class="pl-en">easeInOutCirc</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC624'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC625'>					<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">1</span> <span class="pl-k">-</span> t <span class="pl-k">*</span> t) <span class="pl-k">-</span> <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC626'>				}</div><div class='line js-file-line' id='LC627'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">1</span> <span class="pl-k">-</span> (t <span class="pl-k">-=</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> t) <span class="pl-k">+</span> <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC628'>			},</div><div class='line js-file-line' id='LC629'>			<span class="pl-en">easeInElastic</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC630'>				<span class="pl-k">var</span> s <span class="pl-k">=</span> <span class="pl-c1">1.70158</span>;</div><div class='line js-file-line' id='LC631'>				<span class="pl-k">var</span> p <span class="pl-k">=</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC632'>				<span class="pl-k">var</span> a <span class="pl-k">=</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC633'>				<span class="pl-k">if</span> (t <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC634'>					<span class="pl-k">return</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC635'>				}</div><div class='line js-file-line' id='LC636'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span>) <span class="pl-k">==</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC637'>					<span class="pl-k">return</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC638'>				}</div><div class='line js-file-line' id='LC639'>				<span class="pl-k">if</span> (<span class="pl-k">!</span>p){</div><div class='line js-file-line' id='LC640'>					p <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">0.3</span>;</div><div class='line js-file-line' id='LC641'>				}</div><div class='line js-file-line' id='LC642'>				<span class="pl-k">if</span> (a <span class="pl-k">&lt;</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">1</span>)) {</div><div class='line js-file-line' id='LC643'>					a <span class="pl-k">=</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC644'>					s <span class="pl-k">=</span> p / <span class="pl-c1">4</span>;</div><div class='line js-file-line' id='LC645'>				} <span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC646'>					s <span class="pl-k">=</span> p / (<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-c1">1</span> / a);</div><div class='line js-file-line' id='LC647'>				}</div><div class='line js-file-line' id='LC648'>				<span class="pl-k">return</span> <span class="pl-k">-</span>(a <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-c1">10</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> <span class="pl-c1">1</span>)) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>((t <span class="pl-k">*</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> s) <span class="pl-k">*</span> (<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>) / p));</div><div class='line js-file-line' id='LC649'>			},</div><div class='line js-file-line' id='LC650'>			<span class="pl-en">easeOutElastic</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC651'>				<span class="pl-k">var</span> s <span class="pl-k">=</span> <span class="pl-c1">1.70158</span>;</div><div class='line js-file-line' id='LC652'>				<span class="pl-k">var</span> p <span class="pl-k">=</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC653'>				<span class="pl-k">var</span> a <span class="pl-k">=</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC654'>				<span class="pl-k">if</span> (t <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC655'>					<span class="pl-k">return</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC656'>				}</div><div class='line js-file-line' id='LC657'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span>) <span class="pl-k">==</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC658'>					<span class="pl-k">return</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC659'>				}</div><div class='line js-file-line' id='LC660'>				<span class="pl-k">if</span> (<span class="pl-k">!</span>p){</div><div class='line js-file-line' id='LC661'>					p <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">0.3</span>;</div><div class='line js-file-line' id='LC662'>				}</div><div class='line js-file-line' id='LC663'>				<span class="pl-k">if</span> (a <span class="pl-k">&lt;</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">1</span>)) {</div><div class='line js-file-line' id='LC664'>					a <span class="pl-k">=</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC665'>					s <span class="pl-k">=</span> p / <span class="pl-c1">4</span>;</div><div class='line js-file-line' id='LC666'>				} <span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC667'>					s <span class="pl-k">=</span> p / (<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-c1">1</span> / a);</div><div class='line js-file-line' id='LC668'>				}</div><div class='line js-file-line' id='LC669'>				<span class="pl-k">return</span> a <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">10</span> <span class="pl-k">*</span> t) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>((t <span class="pl-k">*</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> s) <span class="pl-k">*</span> (<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>) / p) <span class="pl-k">+</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC670'>			},</div><div class='line js-file-line' id='LC671'>			<span class="pl-en">easeInOutElastic</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC672'>				<span class="pl-k">var</span> s <span class="pl-k">=</span> <span class="pl-c1">1.70158</span>;</div><div class='line js-file-line' id='LC673'>				<span class="pl-k">var</span> p <span class="pl-k">=</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC674'>				<span class="pl-k">var</span> a <span class="pl-k">=</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC675'>				<span class="pl-k">if</span> (t <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC676'>					<span class="pl-k">return</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC677'>				}</div><div class='line js-file-line' id='LC678'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span>) <span class="pl-k">==</span> <span class="pl-c1">2</span>){</div><div class='line js-file-line' id='LC679'>					<span class="pl-k">return</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC680'>				}</div><div class='line js-file-line' id='LC681'>				<span class="pl-k">if</span> (<span class="pl-k">!</span>p){</div><div class='line js-file-line' id='LC682'>					p <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-c1">0.3</span> <span class="pl-k">*</span> <span class="pl-c1">1.5</span>);</div><div class='line js-file-line' id='LC683'>				}</div><div class='line js-file-line' id='LC684'>				<span class="pl-k">if</span> (a <span class="pl-k">&lt;</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(<span class="pl-c1">1</span>)) {</div><div class='line js-file-line' id='LC685'>					a <span class="pl-k">=</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC686'>					s <span class="pl-k">=</span> p / <span class="pl-c1">4</span>;</div><div class='line js-file-line' id='LC687'>				} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC688'>					s <span class="pl-k">=</span> p / (<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">asin</span>(<span class="pl-c1">1</span> / a);</div><div class='line js-file-line' id='LC689'>				}</div><div class='line js-file-line' id='LC690'>				<span class="pl-k">if</span> (t <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC691'>					<span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">0.5</span> <span class="pl-k">*</span> (a <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-c1">10</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> <span class="pl-c1">1</span>)) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>((t <span class="pl-k">*</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> s) <span class="pl-k">*</span> (<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>) / p));}</div><div class='line js-file-line' id='LC692'>				<span class="pl-k">return</span> a <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">10</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> <span class="pl-c1">1</span>)) <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>((t <span class="pl-k">*</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> s) <span class="pl-k">*</span> (<span class="pl-c1">2</span> <span class="pl-k">*</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>) / p) <span class="pl-k">*</span> <span class="pl-c1">0.5</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC693'>			},</div><div class='line js-file-line' id='LC694'>			<span class="pl-en">easeInBack</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC695'>				<span class="pl-k">var</span> s <span class="pl-k">=</span> <span class="pl-c1">1.70158</span>;</div><div class='line js-file-line' id='LC696'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> (t <span class="pl-k">/=</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">*</span> ((s <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">-</span> s);</div><div class='line js-file-line' id='LC697'>			},</div><div class='line js-file-line' id='LC698'>			<span class="pl-en">easeOutBack</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC699'>				<span class="pl-k">var</span> s <span class="pl-k">=</span> <span class="pl-c1">1.70158</span>;</div><div class='line js-file-line' id='LC700'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> ((t <span class="pl-k">=</span> t / <span class="pl-c1">1</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">*</span> ((s <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">+</span> s) <span class="pl-k">+</span> <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC701'>			},</div><div class='line js-file-line' id='LC702'>			<span class="pl-en">easeInOutBack</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC703'>				<span class="pl-k">var</span> s <span class="pl-k">=</span> <span class="pl-c1">1.70158</span>;</div><div class='line js-file-line' id='LC704'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC705'>					<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> (t <span class="pl-k">*</span> t <span class="pl-k">*</span> (((s <span class="pl-k">*=</span> (<span class="pl-c1">1.525</span>)) <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">-</span> s));</div><div class='line js-file-line' id='LC706'>				}</div><div class='line js-file-line' id='LC707'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span> <span class="pl-k">*</span> ((t <span class="pl-k">-=</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> t <span class="pl-k">*</span> (((s <span class="pl-k">*=</span> (<span class="pl-c1">1.525</span>)) <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> t <span class="pl-k">+</span> s) <span class="pl-k">+</span> <span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC708'>			},</div><div class='line js-file-line' id='LC709'>			<span class="pl-en">easeInBounce</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC710'>				<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">-</span> easingEffects.easeOutBounce(<span class="pl-c1">1</span> <span class="pl-k">-</span> t);</div><div class='line js-file-line' id='LC711'>			},</div><div class='line js-file-line' id='LC712'>			<span class="pl-en">easeOutBounce</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC713'>				<span class="pl-k">if</span> ((t <span class="pl-k">/=</span> <span class="pl-c1">1</span>) <span class="pl-k">&lt;</span> (<span class="pl-c1">1</span> / <span class="pl-c1">2.75</span>)) {</div><div class='line js-file-line' id='LC714'>					<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-c1">7.5625</span> <span class="pl-k">*</span> t <span class="pl-k">*</span> t);</div><div class='line js-file-line' id='LC715'>				} <span class="pl-k">else</span> <span class="pl-k">if</span> (t <span class="pl-k">&lt;</span> (<span class="pl-c1">2</span> / <span class="pl-c1">2.75</span>)) {</div><div class='line js-file-line' id='LC716'>					<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> (<span class="pl-c1">1.5</span> / <span class="pl-c1">2.75</span>)) <span class="pl-k">*</span> t <span class="pl-k">+</span> <span class="pl-c1">0.75</span>);</div><div class='line js-file-line' id='LC717'>				} <span class="pl-k">else</span> <span class="pl-k">if</span> (t <span class="pl-k">&lt;</span> (<span class="pl-c1">2.5</span> / <span class="pl-c1">2.75</span>)) {</div><div class='line js-file-line' id='LC718'>					<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> (<span class="pl-c1">2.25</span> / <span class="pl-c1">2.75</span>)) <span class="pl-k">*</span> t <span class="pl-k">+</span> <span class="pl-c1">0.9375</span>);</div><div class='line js-file-line' id='LC719'>				} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC720'>					<span class="pl-k">return</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> (<span class="pl-c1">7.5625</span> <span class="pl-k">*</span> (t <span class="pl-k">-=</span> (<span class="pl-c1">2.625</span> / <span class="pl-c1">2.75</span>)) <span class="pl-k">*</span> t <span class="pl-k">+</span> <span class="pl-c1">0.984375</span>);</div><div class='line js-file-line' id='LC721'>				}</div><div class='line js-file-line' id='LC722'>			},</div><div class='line js-file-line' id='LC723'>			<span class="pl-en">easeInOutBounce</span><span class="pl-k">:</span> <span class="pl-k">function</span> (<span class="pl-smi">t</span>) {</div><div class='line js-file-line' id='LC724'>				<span class="pl-k">if</span> (t <span class="pl-k">&lt;</span> <span class="pl-c1">1</span> / <span class="pl-c1">2</span>){</div><div class='line js-file-line' id='LC725'>					<span class="pl-k">return</span> easingEffects.easeInBounce(t <span class="pl-k">*</span> <span class="pl-c1">2</span>) <span class="pl-k">*</span> <span class="pl-c1">0.5</span>;</div><div class='line js-file-line' id='LC726'>				}</div><div class='line js-file-line' id='LC727'>				<span class="pl-k">return</span> easingEffects.easeOutBounce(t <span class="pl-k">*</span> <span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> <span class="pl-c1">0.5</span> <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> <span class="pl-c1">0.5</span>;</div><div class='line js-file-line' id='LC728'>			}</div><div class='line js-file-line' id='LC729'>		},</div><div class='line js-file-line' id='LC730'>		<span class="pl-c">//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/</span></div><div class='line js-file-line' id='LC731'>		requestAnimFrame <span class="pl-k">=</span> helpers.requestAnimFrame <span class="pl-k">=</span> (<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC732'>			<span class="pl-k">return</span> <span class="pl-c1">window</span>.requestAnimationFrame <span class="pl-k">||</span></div><div class='line js-file-line' id='LC733'>				<span class="pl-c1">window</span>.webkitRequestAnimationFrame <span class="pl-k">||</span></div><div class='line js-file-line' id='LC734'>				<span class="pl-c1">window</span>.mozRequestAnimationFrame <span class="pl-k">||</span></div><div class='line js-file-line' id='LC735'>				<span class="pl-c1">window</span>.oRequestAnimationFrame <span class="pl-k">||</span></div><div class='line js-file-line' id='LC736'>				<span class="pl-c1">window</span>.msRequestAnimationFrame <span class="pl-k">||</span></div><div class='line js-file-line' id='LC737'>				<span class="pl-k">function</span>(<span class="pl-smi">callback</span>) {</div><div class='line js-file-line' id='LC738'>					<span class="pl-k">return</span> <span class="pl-c1">window</span>.<span class="pl-c1">setTimeout</span>(callback, <span class="pl-c1">1000</span> / <span class="pl-c1">60</span>);</div><div class='line js-file-line' id='LC739'>				};</div><div class='line js-file-line' id='LC740'>		})(),</div><div class='line js-file-line' id='LC741'>		cancelAnimFrame <span class="pl-k">=</span> helpers.cancelAnimFrame <span class="pl-k">=</span> (<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC742'>			<span class="pl-k">return</span> <span class="pl-c1">window</span>.cancelAnimationFrame <span class="pl-k">||</span></div><div class='line js-file-line' id='LC743'>				<span class="pl-c1">window</span>.webkitCancelAnimationFrame <span class="pl-k">||</span></div><div class='line js-file-line' id='LC744'>				<span class="pl-c1">window</span>.mozCancelAnimationFrame <span class="pl-k">||</span></div><div class='line js-file-line' id='LC745'>				<span class="pl-c1">window</span>.oCancelAnimationFrame <span class="pl-k">||</span></div><div class='line js-file-line' id='LC746'>				<span class="pl-c1">window</span>.msCancelAnimationFrame <span class="pl-k">||</span></div><div class='line js-file-line' id='LC747'>				<span class="pl-k">function</span>(<span class="pl-smi">callback</span>) {</div><div class='line js-file-line' id='LC748'>					<span class="pl-k">return</span> <span class="pl-c1">window</span>.<span class="pl-c1">clearTimeout</span>(callback, <span class="pl-c1">1000</span> / <span class="pl-c1">60</span>);</div><div class='line js-file-line' id='LC749'>				};</div><div class='line js-file-line' id='LC750'>		})(),</div><div class='line js-file-line' id='LC751'>		animationLoop <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">animationLoop</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>,<span class="pl-smi">totalSteps</span>,<span class="pl-smi">easingString</span>,<span class="pl-smi">onProgress</span>,<span class="pl-smi">onComplete</span>,<span class="pl-smi">chartInstance</span>){</div><div class='line js-file-line' id='LC752'><br></div><div class='line js-file-line' id='LC753'>			<span class="pl-k">var</span> currentStep <span class="pl-k">=</span> <span class="pl-c1">0</span>,</div><div class='line js-file-line' id='LC754'>				easingFunction <span class="pl-k">=</span> easingEffects[easingString] <span class="pl-k">||</span> easingEffects.linear;</div><div class='line js-file-line' id='LC755'><br></div><div class='line js-file-line' id='LC756'>			<span class="pl-k">var</span> <span class="pl-en">animationFrame</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC757'>				currentStep<span class="pl-k">++</span>;</div><div class='line js-file-line' id='LC758'>				<span class="pl-k">var</span> stepDecimal <span class="pl-k">=</span> currentStep/totalSteps;</div><div class='line js-file-line' id='LC759'>				<span class="pl-k">var</span> easeDecimal <span class="pl-k">=</span> easingFunction(stepDecimal);</div><div class='line js-file-line' id='LC760'><br></div><div class='line js-file-line' id='LC761'>				callback.<span class="pl-c1">call</span>(chartInstance,easeDecimal,stepDecimal, currentStep);</div><div class='line js-file-line' id='LC762'>				onProgress.<span class="pl-c1">call</span>(chartInstance,easeDecimal,stepDecimal);</div><div class='line js-file-line' id='LC763'>				<span class="pl-k">if</span> (currentStep <span class="pl-k">&lt;</span> totalSteps){</div><div class='line js-file-line' id='LC764'>					chartInstance.animationFrame <span class="pl-k">=</span> requestAnimFrame(animationFrame);</div><div class='line js-file-line' id='LC765'>				} <span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC766'>					onComplete.<span class="pl-c1">apply</span>(chartInstance);</div><div class='line js-file-line' id='LC767'>				}</div><div class='line js-file-line' id='LC768'>			};</div><div class='line js-file-line' id='LC769'>			requestAnimFrame(animationFrame);</div><div class='line js-file-line' id='LC770'>		},</div><div class='line js-file-line' id='LC771'>		<span class="pl-c">//-- DOM methods</span></div><div class='line js-file-line' id='LC772'>		getRelativePosition <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">getRelativePosition</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">evt</span>){</div><div class='line js-file-line' id='LC773'>			<span class="pl-k">var</span> mouseX, mouseY;</div><div class='line js-file-line' id='LC774'>			<span class="pl-k">var</span> e <span class="pl-k">=</span> evt.originalEvent <span class="pl-k">||</span> evt,</div><div class='line js-file-line' id='LC775'>				canvas <span class="pl-k">=</span> evt.currentTarget <span class="pl-k">||</span> evt.srcElement,</div><div class='line js-file-line' id='LC776'>				boundingRect <span class="pl-k">=</span> canvas.getBoundingClientRect();</div><div class='line js-file-line' id='LC777'><br></div><div class='line js-file-line' id='LC778'>			<span class="pl-k">if</span> (e.touches){</div><div class='line js-file-line' id='LC779'>				mouseX <span class="pl-k">=</span> e.touches[<span class="pl-c1">0</span>].clientX <span class="pl-k">-</span> boundingRect.<span class="pl-c1">left</span>;</div><div class='line js-file-line' id='LC780'>				mouseY <span class="pl-k">=</span> e.touches[<span class="pl-c1">0</span>].clientY <span class="pl-k">-</span> boundingRect.<span class="pl-c1">top</span>;</div><div class='line js-file-line' id='LC781'><br></div><div class='line js-file-line' id='LC782'>			}</div><div class='line js-file-line' id='LC783'>			<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC784'>				mouseX <span class="pl-k">=</span> e.clientX <span class="pl-k">-</span> boundingRect.<span class="pl-c1">left</span>;</div><div class='line js-file-line' id='LC785'>				mouseY <span class="pl-k">=</span> e.clientY <span class="pl-k">-</span> boundingRect.<span class="pl-c1">top</span>;</div><div class='line js-file-line' id='LC786'>			}</div><div class='line js-file-line' id='LC787'><br></div><div class='line js-file-line' id='LC788'>			<span class="pl-k">return</span> {</div><div class='line js-file-line' id='LC789'>				x <span class="pl-k">:</span> mouseX,</div><div class='line js-file-line' id='LC790'>				y <span class="pl-k">:</span> mouseY</div><div class='line js-file-line' id='LC791'>			};</div><div class='line js-file-line' id='LC792'><br></div><div class='line js-file-line' id='LC793'>		},</div><div class='line js-file-line' id='LC794'>		addEvent <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">addEvent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>,<span class="pl-smi">eventType</span>,<span class="pl-smi">method</span>){</div><div class='line js-file-line' id='LC795'>			<span class="pl-k">if</span> (node.addEventListener){</div><div class='line js-file-line' id='LC796'>				node.addEventListener(eventType,method);</div><div class='line js-file-line' id='LC797'>			} <span class="pl-k">else</span> <span class="pl-k">if</span> (node.attachEvent){</div><div class='line js-file-line' id='LC798'>				node.<span class="pl-c1">attachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>eventType, method);</div><div class='line js-file-line' id='LC799'>			} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC800'>				node[<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>eventType] <span class="pl-k">=</span> method;</div><div class='line js-file-line' id='LC801'>			}</div><div class='line js-file-line' id='LC802'>		},</div><div class='line js-file-line' id='LC803'>		removeEvent <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">removeEvent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">node</span>, <span class="pl-smi">eventType</span>, <span class="pl-smi">handler</span>){</div><div class='line js-file-line' id='LC804'>			<span class="pl-k">if</span> (node.removeEventListener){</div><div class='line js-file-line' id='LC805'>				node.removeEventListener(eventType, handler, <span class="pl-c1">false</span>);</div><div class='line js-file-line' id='LC806'>			} <span class="pl-k">else</span> <span class="pl-k">if</span> (node.detachEvent){</div><div class='line js-file-line' id='LC807'>				node.<span class="pl-c1">detachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>eventType,handler);</div><div class='line js-file-line' id='LC808'>			} <span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC809'>				node[<span class="pl-s"><span class="pl-pds">&quot;</span>on<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> eventType] <span class="pl-k">=</span> noop;</div><div class='line js-file-line' id='LC810'>			}</div><div class='line js-file-line' id='LC811'>		},</div><div class='line js-file-line' id='LC812'>		bindEvents <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">bindEvents</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">chartInstance</span>, <span class="pl-smi">arrayOfEvents</span>, <span class="pl-smi">handler</span>){</div><div class='line js-file-line' id='LC813'>			<span class="pl-c">// Create the events object if it&#39;s not already present</span></div><div class='line js-file-line' id='LC814'>			<span class="pl-k">if</span> (<span class="pl-k">!</span>chartInstance.events) chartInstance.events <span class="pl-k">=</span> {};</div><div class='line js-file-line' id='LC815'><br></div><div class='line js-file-line' id='LC816'>			each(arrayOfEvents,<span class="pl-k">function</span>(<span class="pl-smi">eventName</span>){</div><div class='line js-file-line' id='LC817'>				chartInstance.events[eventName] <span class="pl-k">=</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC818'>					handler.<span class="pl-c1">apply</span>(chartInstance, arguments);</div><div class='line js-file-line' id='LC819'>				};</div><div class='line js-file-line' id='LC820'>				addEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);</div><div class='line js-file-line' id='LC821'>			});</div><div class='line js-file-line' id='LC822'>		},</div><div class='line js-file-line' id='LC823'>		unbindEvents <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">unbindEvents</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">chartInstance</span>, <span class="pl-smi">arrayOfEvents</span>) {</div><div class='line js-file-line' id='LC824'>			each(arrayOfEvents, <span class="pl-k">function</span>(<span class="pl-smi">handler</span>,<span class="pl-smi">eventName</span>){</div><div class='line js-file-line' id='LC825'>				removeEvent(chartInstance.chart.canvas, eventName, handler);</div><div class='line js-file-line' id='LC826'>			});</div><div class='line js-file-line' id='LC827'>		},</div><div class='line js-file-line' id='LC828'>		getMaximumWidth <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">getMaximumWidth</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">domNode</span>){</div><div class='line js-file-line' id='LC829'>			<span class="pl-k">var</span> container <span class="pl-k">=</span> domNode.<span class="pl-c1">parentNode</span>,</div><div class='line js-file-line' id='LC830'>			    padding <span class="pl-k">=</span> <span class="pl-c1">parseInt</span>(getStyle(container, <span class="pl-s"><span class="pl-pds">&#39;</span>padding-left<span class="pl-pds">&#39;</span></span>)) <span class="pl-k">+</span> <span class="pl-c1">parseInt</span>(getStyle(container, <span class="pl-s"><span class="pl-pds">&#39;</span>padding-right<span class="pl-pds">&#39;</span></span>));</div><div class='line js-file-line' id='LC831'>			<span class="pl-c">// TODO = check cross browser stuff with this.</span></div><div class='line js-file-line' id='LC832'>			<span class="pl-k">return</span> container.clientWidth <span class="pl-k">-</span> padding;</div><div class='line js-file-line' id='LC833'>		},</div><div class='line js-file-line' id='LC834'>		getMaximumHeight <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">getMaximumHeight</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">domNode</span>){</div><div class='line js-file-line' id='LC835'>			<span class="pl-k">var</span> container <span class="pl-k">=</span> domNode.<span class="pl-c1">parentNode</span>,</div><div class='line js-file-line' id='LC836'>			    padding <span class="pl-k">=</span> <span class="pl-c1">parseInt</span>(getStyle(container, <span class="pl-s"><span class="pl-pds">&#39;</span>padding-bottom<span class="pl-pds">&#39;</span></span>)) <span class="pl-k">+</span> <span class="pl-c1">parseInt</span>(getStyle(container, <span class="pl-s"><span class="pl-pds">&#39;</span>padding-top<span class="pl-pds">&#39;</span></span>));</div><div class='line js-file-line' id='LC837'>			<span class="pl-c">// TODO = check cross browser stuff with this.</span></div><div class='line js-file-line' id='LC838'>			<span class="pl-k">return</span> container.clientHeight <span class="pl-k">-</span> padding;</div><div class='line js-file-line' id='LC839'>		},</div><div class='line js-file-line' id='LC840'>		getStyle <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">getStyle</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">el</span>, <span class="pl-smi">property</span>) {</div><div class='line js-file-line' id='LC841'>			<span class="pl-k">return</span> el.currentStyle <span class="pl-k">?</span></div><div class='line js-file-line' id='LC842'>				el.currentStyle[property] <span class="pl-k">:</span></div><div class='line js-file-line' id='LC843'>				<span class="pl-c1">document</span>.<span class="pl-c1">defaultView</span>.getComputedStyle(el, <span class="pl-c1">null</span>).getPropertyValue(property);</div><div class='line js-file-line' id='LC844'>		},</div><div class='line js-file-line' id='LC845'>		getMaximumSize <span class="pl-k">=</span> helpers.getMaximumSize <span class="pl-k">=</span> helpers.getMaximumWidth, <span class="pl-c">// legacy support</span></div><div class='line js-file-line' id='LC846'>		retinaScale <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">retinaScale</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">chart</span>){</div><div class='line js-file-line' id='LC847'>			<span class="pl-k">var</span> ctx <span class="pl-k">=</span> chart.ctx,</div><div class='line js-file-line' id='LC848'>				width <span class="pl-k">=</span> chart.canvas.<span class="pl-c1">width</span>,</div><div class='line js-file-line' id='LC849'>				height <span class="pl-k">=</span> chart.canvas.<span class="pl-c1">height</span>;</div><div class='line js-file-line' id='LC850'><br></div><div class='line js-file-line' id='LC851'>			<span class="pl-k">if</span> (<span class="pl-c1">window</span>.devicePixelRatio) {</div><div class='line js-file-line' id='LC852'>				ctx.canvas.<span class="pl-c1">style</span>.<span class="pl-c1">width</span> <span class="pl-k">=</span> width <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC853'>				ctx.canvas.<span class="pl-c1">style</span>.<span class="pl-c1">height</span> <span class="pl-k">=</span> height <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC854'>				ctx.canvas.<span class="pl-c1">height</span> <span class="pl-k">=</span> height <span class="pl-k">*</span> <span class="pl-c1">window</span>.devicePixelRatio;</div><div class='line js-file-line' id='LC855'>				ctx.canvas.<span class="pl-c1">width</span> <span class="pl-k">=</span> width <span class="pl-k">*</span> <span class="pl-c1">window</span>.devicePixelRatio;</div><div class='line js-file-line' id='LC856'>				ctx.scale(<span class="pl-c1">window</span>.devicePixelRatio, <span class="pl-c1">window</span>.devicePixelRatio);</div><div class='line js-file-line' id='LC857'>			}</div><div class='line js-file-line' id='LC858'>		},</div><div class='line js-file-line' id='LC859'>		<span class="pl-c">//-- Canvas methods</span></div><div class='line js-file-line' id='LC860'>		clear <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">clear</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">chart</span>){</div><div class='line js-file-line' id='LC861'>			chart.ctx.clearRect(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,chart.<span class="pl-c1">width</span>,chart.<span class="pl-c1">height</span>);</div><div class='line js-file-line' id='LC862'>		},</div><div class='line js-file-line' id='LC863'>		fontString <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">fontString</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">pixelSize</span>,<span class="pl-smi">fontStyle</span>,<span class="pl-smi">fontFamily</span>){</div><div class='line js-file-line' id='LC864'>			<span class="pl-k">return</span> fontStyle <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> pixelSize<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> fontFamily;</div><div class='line js-file-line' id='LC865'>		},</div><div class='line js-file-line' id='LC866'>		longestText <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">longestText</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">ctx</span>,<span class="pl-smi">font</span>,<span class="pl-smi">arrayOfStrings</span>){</div><div class='line js-file-line' id='LC867'>			ctx.font <span class="pl-k">=</span> font;</div><div class='line js-file-line' id='LC868'>			<span class="pl-k">var</span> longest <span class="pl-k">=</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC869'>			each(arrayOfStrings,<span class="pl-k">function</span>(<span class="pl-smi">string</span>){</div><div class='line js-file-line' id='LC870'>				<span class="pl-k">var</span> textWidth <span class="pl-k">=</span> ctx.measureText(string).<span class="pl-c1">width</span>;</div><div class='line js-file-line' id='LC871'>				longest <span class="pl-k">=</span> (textWidth <span class="pl-k">&gt;</span> longest) <span class="pl-k">?</span> textWidth <span class="pl-k">:</span> longest;</div><div class='line js-file-line' id='LC872'>			});</div><div class='line js-file-line' id='LC873'>			<span class="pl-k">return</span> longest;</div><div class='line js-file-line' id='LC874'>		},</div><div class='line js-file-line' id='LC875'>		drawRoundedRectangle <span class="pl-k">=</span> <span class="pl-c1">helpers</span>.<span class="pl-en">drawRoundedRectangle</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">ctx</span>,<span class="pl-smi">x</span>,<span class="pl-smi">y</span>,<span class="pl-smi">width</span>,<span class="pl-smi">height</span>,<span class="pl-smi">radius</span>){</div><div class='line js-file-line' id='LC876'>			ctx.beginPath();</div><div class='line js-file-line' id='LC877'>			ctx.<span class="pl-c1">moveTo</span>(x <span class="pl-k">+</span> radius, y);</div><div class='line js-file-line' id='LC878'>			ctx.lineTo(x <span class="pl-k">+</span> width <span class="pl-k">-</span> radius, y);</div><div class='line js-file-line' id='LC879'>			ctx.quadraticCurveTo(x <span class="pl-k">+</span> width, y, x <span class="pl-k">+</span> width, y <span class="pl-k">+</span> radius);</div><div class='line js-file-line' id='LC880'>			ctx.lineTo(x <span class="pl-k">+</span> width, y <span class="pl-k">+</span> height <span class="pl-k">-</span> radius);</div><div class='line js-file-line' id='LC881'>			ctx.quadraticCurveTo(x <span class="pl-k">+</span> width, y <span class="pl-k">+</span> height, x <span class="pl-k">+</span> width <span class="pl-k">-</span> radius, y <span class="pl-k">+</span> height);</div><div class='line js-file-line' id='LC882'>			ctx.lineTo(x <span class="pl-k">+</span> radius, y <span class="pl-k">+</span> height);</div><div class='line js-file-line' id='LC883'>			ctx.quadraticCurveTo(x, y <span class="pl-k">+</span> height, x, y <span class="pl-k">+</span> height <span class="pl-k">-</span> radius);</div><div class='line js-file-line' id='LC884'>			ctx.lineTo(x, y <span class="pl-k">+</span> radius);</div><div class='line js-file-line' id='LC885'>			ctx.quadraticCurveTo(x, y, x <span class="pl-k">+</span> radius, y);</div><div class='line js-file-line' id='LC886'>			ctx.closePath();</div><div class='line js-file-line' id='LC887'>		};</div><div class='line js-file-line' id='LC888'><br></div><div class='line js-file-line' id='LC889'><br></div><div class='line js-file-line' id='LC890'>	<span class="pl-c">//Store a reference to each instance - allowing us to globally resize chart instances on window resize.</span></div><div class='line js-file-line' id='LC891'>	<span class="pl-c">//Destroy method on the chart will remove the instance of the chart from this reference.</span></div><div class='line js-file-line' id='LC892'>	Chart.instances <span class="pl-k">=</span> {};</div><div class='line js-file-line' id='LC893'><br></div><div class='line js-file-line' id='LC894'>	<span class="pl-c1">Chart</span>.<span class="pl-en">Type</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">data</span>,<span class="pl-smi">options</span>,<span class="pl-smi">chart</span>){</div><div class='line js-file-line' id='LC895'>		<span class="pl-v">this</span>.<span class="pl-c1">options</span> <span class="pl-k">=</span> options;</div><div class='line js-file-line' id='LC896'>		<span class="pl-v">this</span>.chart <span class="pl-k">=</span> chart;</div><div class='line js-file-line' id='LC897'>		<span class="pl-v">this</span>.<span class="pl-c1">id</span> <span class="pl-k">=</span> uid();</div><div class='line js-file-line' id='LC898'>		<span class="pl-c">//Add the chart instance to the global namespace</span></div><div class='line js-file-line' id='LC899'>		Chart.instances[<span class="pl-v">this</span>.<span class="pl-c1">id</span>] <span class="pl-k">=</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC900'><br></div><div class='line js-file-line' id='LC901'>		<span class="pl-c">// Initialize is always called when a chart type is created</span></div><div class='line js-file-line' id='LC902'>		<span class="pl-c">// By default it is a no op, but it should be extended</span></div><div class='line js-file-line' id='LC903'>		<span class="pl-k">if</span> (options.responsive){</div><div class='line js-file-line' id='LC904'>			<span class="pl-v">this</span>.<span class="pl-c1">resize</span>();</div><div class='line js-file-line' id='LC905'>		}</div><div class='line js-file-line' id='LC906'>		<span class="pl-v">this</span>.initialize.<span class="pl-c1">call</span>(<span class="pl-v">this</span>,data);</div><div class='line js-file-line' id='LC907'>	};</div><div class='line js-file-line' id='LC908'><br></div><div class='line js-file-line' id='LC909'>	<span class="pl-c">//Core methods that&#39;ll be a part of every chart type</span></div><div class='line js-file-line' id='LC910'>	extend(Chart.Type.<span class="pl-c1">prototype</span>,{</div><div class='line js-file-line' id='LC911'>		<span class="pl-en">initialize</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>;},</div><div class='line js-file-line' id='LC912'>		<span class="pl-en">clear</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC913'>			<span class="pl-c1">clear</span>(<span class="pl-v">this</span>.chart);</div><div class='line js-file-line' id='LC914'>			<span class="pl-k">return</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC915'>		},</div><div class='line js-file-line' id='LC916'>		<span class="pl-en">stop</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC917'>			<span class="pl-c">// Stops any current animation loop occuring</span></div><div class='line js-file-line' id='LC918'>			Chart.animationService.cancelAnimation(<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC919'>			<span class="pl-k">return</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC920'>		},</div><div class='line js-file-line' id='LC921'>		<span class="pl-en">resize</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>){</div><div class='line js-file-line' id='LC922'>			<span class="pl-v">this</span>.<span class="pl-c1">stop</span>();</div><div class='line js-file-line' id='LC923'>			<span class="pl-k">var</span> canvas <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.canvas,</div><div class='line js-file-line' id='LC924'>				newWidth <span class="pl-k">=</span> getMaximumWidth(<span class="pl-v">this</span>.chart.canvas),</div><div class='line js-file-line' id='LC925'>				newHeight <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.maintainAspectRatio <span class="pl-k">?</span> newWidth / <span class="pl-v">this</span>.chart.aspectRatio <span class="pl-k">:</span> getMaximumHeight(<span class="pl-v">this</span>.chart.canvas);</div><div class='line js-file-line' id='LC926'><br></div><div class='line js-file-line' id='LC927'>			canvas.<span class="pl-c1">width</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span> <span class="pl-k">=</span> newWidth;</div><div class='line js-file-line' id='LC928'>			canvas.<span class="pl-c1">height</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span> <span class="pl-k">=</span> newHeight;</div><div class='line js-file-line' id='LC929'><br></div><div class='line js-file-line' id='LC930'>			retinaScale(<span class="pl-v">this</span>.chart);</div><div class='line js-file-line' id='LC931'><br></div><div class='line js-file-line' id='LC932'>			<span class="pl-k">if</span> (<span class="pl-k">typeof</span> callback <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span>){</div><div class='line js-file-line' id='LC933'>				callback.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, <span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.slice.<span class="pl-c1">call</span>(arguments, <span class="pl-c1">1</span>));</div><div class='line js-file-line' id='LC934'>			}</div><div class='line js-file-line' id='LC935'>			<span class="pl-k">return</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC936'>		},</div><div class='line js-file-line' id='LC937'>		reflow <span class="pl-k">:</span> noop,</div><div class='line js-file-line' id='LC938'>		<span class="pl-en">render</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">reflow</span>){</div><div class='line js-file-line' id='LC939'>			<span class="pl-k">if</span> (reflow){</div><div class='line js-file-line' id='LC940'>				<span class="pl-v">this</span>.reflow();</div><div class='line js-file-line' id='LC941'>			}</div><div class='line js-file-line' id='LC942'><br></div><div class='line js-file-line' id='LC943'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.animation <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>reflow){</div><div class='line js-file-line' id='LC944'>				<span class="pl-k">var</span> animation <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Chart.Animation</span>();</div><div class='line js-file-line' id='LC945'>				animation.numSteps <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.animationSteps;</div><div class='line js-file-line' id='LC946'>				animation.easing <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.animationEasing;</div><div class='line js-file-line' id='LC947'><br></div><div class='line js-file-line' id='LC948'>				<span class="pl-c">// render function</span></div><div class='line js-file-line' id='LC949'>				<span class="pl-c1">animation</span>.<span class="pl-en">render</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">chartInstance</span>, <span class="pl-smi">animationObject</span>) {</div><div class='line js-file-line' id='LC950'>					<span class="pl-k">var</span> easingFunction <span class="pl-k">=</span> helpers.easingEffects[animationObject.easing];</div><div class='line js-file-line' id='LC951'>					<span class="pl-k">var</span> stepDecimal <span class="pl-k">=</span> animationObject.currentStep / animationObject.numSteps;</div><div class='line js-file-line' id='LC952'>					<span class="pl-k">var</span> easeDecimal <span class="pl-k">=</span> easingFunction(stepDecimal);</div><div class='line js-file-line' id='LC953'><br></div><div class='line js-file-line' id='LC954'>					chartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);</div><div class='line js-file-line' id='LC955'>				};</div><div class='line js-file-line' id='LC956'><br></div><div class='line js-file-line' id='LC957'>				<span class="pl-c">// user events</span></div><div class='line js-file-line' id='LC958'>				animation.onAnimationProgress <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.onAnimationProgress;</div><div class='line js-file-line' id='LC959'>				animation.onAnimationComplete <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.onAnimationComplete;</div><div class='line js-file-line' id='LC960'><br></div><div class='line js-file-line' id='LC961'>				Chart.animationService.addAnimation(<span class="pl-v">this</span>, animation);</div><div class='line js-file-line' id='LC962'>			}</div><div class='line js-file-line' id='LC963'>			<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC964'>				<span class="pl-v">this</span>.draw();</div><div class='line js-file-line' id='LC965'>				<span class="pl-v">this</span>.<span class="pl-c1">options</span>.onAnimationComplete.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC966'>			}</div><div class='line js-file-line' id='LC967'>			<span class="pl-k">return</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC968'>		},</div><div class='line js-file-line' id='LC969'>		<span class="pl-en">generateLegend</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC970'>			<span class="pl-k">return</span> template(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.legendTemplate,<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC971'>		},</div><div class='line js-file-line' id='LC972'>		<span class="pl-en">destroy</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC973'>			<span class="pl-v">this</span>.<span class="pl-c1">clear</span>();</div><div class='line js-file-line' id='LC974'>			unbindEvents(<span class="pl-v">this</span>, <span class="pl-v">this</span>.events);</div><div class='line js-file-line' id='LC975'>			<span class="pl-k">var</span> canvas <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.canvas;</div><div class='line js-file-line' id='LC976'><br></div><div class='line js-file-line' id='LC977'>			<span class="pl-c">// Reset canvas height/width attributes starts a fresh with the canvas context</span></div><div class='line js-file-line' id='LC978'>			canvas.<span class="pl-c1">width</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>;</div><div class='line js-file-line' id='LC979'>			canvas.<span class="pl-c1">height</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>;</div><div class='line js-file-line' id='LC980'><br></div><div class='line js-file-line' id='LC981'>			<span class="pl-c">// &lt; IE9 doesn&#39;t support removeProperty</span></div><div class='line js-file-line' id='LC982'>			<span class="pl-k">if</span> (canvas.<span class="pl-c1">style</span>.removeProperty) {</div><div class='line js-file-line' id='LC983'>				canvas.<span class="pl-c1">style</span>.removeProperty(<span class="pl-s"><span class="pl-pds">&#39;</span>width<span class="pl-pds">&#39;</span></span>);</div><div class='line js-file-line' id='LC984'>				canvas.<span class="pl-c1">style</span>.removeProperty(<span class="pl-s"><span class="pl-pds">&#39;</span>height<span class="pl-pds">&#39;</span></span>);</div><div class='line js-file-line' id='LC985'>			} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC986'>				canvas.<span class="pl-c1">style</span>.removeAttribute(<span class="pl-s"><span class="pl-pds">&#39;</span>width<span class="pl-pds">&#39;</span></span>);</div><div class='line js-file-line' id='LC987'>				canvas.<span class="pl-c1">style</span>.removeAttribute(<span class="pl-s"><span class="pl-pds">&#39;</span>height<span class="pl-pds">&#39;</span></span>);</div><div class='line js-file-line' id='LC988'>			}</div><div class='line js-file-line' id='LC989'><br></div><div class='line js-file-line' id='LC990'>			<span class="pl-k">delete</span> Chart.instances[<span class="pl-v">this</span>.<span class="pl-c1">id</span>];</div><div class='line js-file-line' id='LC991'>		},</div><div class='line js-file-line' id='LC992'>		<span class="pl-en">showTooltip</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">ChartElements</span>, <span class="pl-smi">forceRedraw</span>){</div><div class='line js-file-line' id='LC993'>			<span class="pl-c">// Only redraw the chart if we&#39;ve actually changed what we&#39;re hovering on.</span></div><div class='line js-file-line' id='LC994'>			<span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-v">this</span>.activeElements <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>) <span class="pl-v">this</span>.activeElements <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC995'><br></div><div class='line js-file-line' id='LC996'>			<span class="pl-k">var</span> isChanged <span class="pl-k">=</span> (<span class="pl-k">function</span>(<span class="pl-smi">Elements</span>){</div><div class='line js-file-line' id='LC997'>				<span class="pl-k">var</span> changed <span class="pl-k">=</span> <span class="pl-c1">false</span>;</div><div class='line js-file-line' id='LC998'><br></div><div class='line js-file-line' id='LC999'>				<span class="pl-k">if</span> (Elements.<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-v">this</span>.activeElements.<span class="pl-c1">length</span>){</div><div class='line js-file-line' id='LC1000'>					changed <span class="pl-k">=</span> <span class="pl-c1">true</span>;</div><div class='line js-file-line' id='LC1001'>					<span class="pl-k">return</span> changed;</div><div class='line js-file-line' id='LC1002'>				}</div><div class='line js-file-line' id='LC1003'><br></div><div class='line js-file-line' id='LC1004'>				each(Elements, <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC1005'>					<span class="pl-k">if</span> (element <span class="pl-k">!==</span> <span class="pl-v">this</span>.activeElements[index]){</div><div class='line js-file-line' id='LC1006'>						changed <span class="pl-k">=</span> <span class="pl-c1">true</span>;</div><div class='line js-file-line' id='LC1007'>					}</div><div class='line js-file-line' id='LC1008'>				}, <span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1009'>				<span class="pl-k">return</span> changed;</div><div class='line js-file-line' id='LC1010'>			}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>, ChartElements);</div><div class='line js-file-line' id='LC1011'><br></div><div class='line js-file-line' id='LC1012'>			<span class="pl-k">if</span> (<span class="pl-k">!</span>isChanged <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>forceRedraw){</div><div class='line js-file-line' id='LC1013'>				<span class="pl-k">return</span>;</div><div class='line js-file-line' id='LC1014'>			}</div><div class='line js-file-line' id='LC1015'>			<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC1016'>				<span class="pl-v">this</span>.activeElements <span class="pl-k">=</span> ChartElements;</div><div class='line js-file-line' id='LC1017'>			}</div><div class='line js-file-line' id='LC1018'>			<span class="pl-v">this</span>.draw();</div><div class='line js-file-line' id='LC1019'>			<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.customTooltips){</div><div class='line js-file-line' id='LC1020'>				<span class="pl-v">this</span>.<span class="pl-c1">options</span>.customTooltips(<span class="pl-c1">false</span>);</div><div class='line js-file-line' id='LC1021'>			}</div><div class='line js-file-line' id='LC1022'>			<span class="pl-k">if</span> (ChartElements.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC1023'>				<span class="pl-c">// If we have multiple datasets, show a MultiTooltip for all of the data points at that index</span></div><div class='line js-file-line' id='LC1024'>				<span class="pl-k">if</span> (<span class="pl-v">this</span>.datasets <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>.datasets.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>) {</div><div class='line js-file-line' id='LC1025'>					<span class="pl-k">var</span> dataArray,</div><div class='line js-file-line' id='LC1026'>						dataIndex;</div><div class='line js-file-line' id='LC1027'><br></div><div class='line js-file-line' id='LC1028'>					<span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-v">this</span>.datasets.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>; i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>; i<span class="pl-k">--</span>) {</div><div class='line js-file-line' id='LC1029'>						dataArray <span class="pl-k">=</span> <span class="pl-v">this</span>.datasets[i].points <span class="pl-k">||</span> <span class="pl-v">this</span>.datasets[i].bars <span class="pl-k">||</span> <span class="pl-v">this</span>.datasets[i].segments;</div><div class='line js-file-line' id='LC1030'>						dataIndex <span class="pl-k">=</span> <span class="pl-c1">indexOf</span>(dataArray, ChartElements[<span class="pl-c1">0</span>]);</div><div class='line js-file-line' id='LC1031'>						<span class="pl-k">if</span> (dataIndex <span class="pl-k">!==</span> <span class="pl-k">-</span><span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC1032'>							<span class="pl-k">break</span>;</div><div class='line js-file-line' id='LC1033'>						}</div><div class='line js-file-line' id='LC1034'>					}</div><div class='line js-file-line' id='LC1035'>					<span class="pl-k">var</span> tooltipLabels <span class="pl-k">=</span> [],</div><div class='line js-file-line' id='LC1036'>						tooltipColors <span class="pl-k">=</span> [],</div><div class='line js-file-line' id='LC1037'>						medianPosition <span class="pl-k">=</span> (<span class="pl-k">function</span>(<span class="pl-smi">index</span>) {</div><div class='line js-file-line' id='LC1038'><br></div><div class='line js-file-line' id='LC1039'>							<span class="pl-c">// Get all the points at that particular index</span></div><div class='line js-file-line' id='LC1040'>							<span class="pl-k">var</span> Elements <span class="pl-k">=</span> [],</div><div class='line js-file-line' id='LC1041'>								dataCollection,</div><div class='line js-file-line' id='LC1042'>								xPositions <span class="pl-k">=</span> [],</div><div class='line js-file-line' id='LC1043'>								yPositions <span class="pl-k">=</span> [],</div><div class='line js-file-line' id='LC1044'>								xMax,</div><div class='line js-file-line' id='LC1045'>								yMax,</div><div class='line js-file-line' id='LC1046'>								xMin,</div><div class='line js-file-line' id='LC1047'>								yMin;</div><div class='line js-file-line' id='LC1048'>							helpers.each(<span class="pl-v">this</span>.datasets, <span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC1049'>								dataCollection <span class="pl-k">=</span> dataset.points <span class="pl-k">||</span> dataset.bars <span class="pl-k">||</span> dataset.segments;</div><div class='line js-file-line' id='LC1050'>								<span class="pl-k">if</span> (dataCollection[dataIndex] <span class="pl-k">&amp;&amp;</span> dataCollection[dataIndex].hasValue()){</div><div class='line js-file-line' id='LC1051'>									Elements.<span class="pl-c1">push</span>(dataCollection[dataIndex]);</div><div class='line js-file-line' id='LC1052'>								}</div><div class='line js-file-line' id='LC1053'>							});</div><div class='line js-file-line' id='LC1054'><br></div><div class='line js-file-line' id='LC1055'>							helpers.each(Elements, <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</div><div class='line js-file-line' id='LC1056'>								xPositions.<span class="pl-c1">push</span>(element.<span class="pl-c1">x</span>);</div><div class='line js-file-line' id='LC1057'>								yPositions.<span class="pl-c1">push</span>(element.<span class="pl-c1">y</span>);</div><div class='line js-file-line' id='LC1058'><br></div><div class='line js-file-line' id='LC1059'><br></div><div class='line js-file-line' id='LC1060'>								<span class="pl-c">//Include any colour information about the element</span></div><div class='line js-file-line' id='LC1061'>								tooltipLabels.<span class="pl-c1">push</span>(helpers.template(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.multiTooltipTemplate, element));</div><div class='line js-file-line' id='LC1062'>								tooltipColors.<span class="pl-c1">push</span>({</div><div class='line js-file-line' id='LC1063'>									fill<span class="pl-k">:</span> element._saved.fillColor <span class="pl-k">||</span> element.fillColor,</div><div class='line js-file-line' id='LC1064'>									stroke<span class="pl-k">:</span> element._saved.strokeColor <span class="pl-k">||</span> element.strokeColor</div><div class='line js-file-line' id='LC1065'>								});</div><div class='line js-file-line' id='LC1066'><br></div><div class='line js-file-line' id='LC1067'>							}, <span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1068'><br></div><div class='line js-file-line' id='LC1069'>							yMin <span class="pl-k">=</span> <span class="pl-c1">min</span>(yPositions);</div><div class='line js-file-line' id='LC1070'>							yMax <span class="pl-k">=</span> <span class="pl-c1">max</span>(yPositions);</div><div class='line js-file-line' id='LC1071'><br></div><div class='line js-file-line' id='LC1072'>							xMin <span class="pl-k">=</span> <span class="pl-c1">min</span>(xPositions);</div><div class='line js-file-line' id='LC1073'>							xMax <span class="pl-k">=</span> <span class="pl-c1">max</span>(xPositions);</div><div class='line js-file-line' id='LC1074'><br></div><div class='line js-file-line' id='LC1075'>							<span class="pl-k">return</span> {</div><div class='line js-file-line' id='LC1076'>								x<span class="pl-k">:</span> (xMin <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>/<span class="pl-c1">2</span>) <span class="pl-k">?</span> xMin <span class="pl-k">:</span> xMax,</div><div class='line js-file-line' id='LC1077'>								y<span class="pl-k">:</span> (yMin <span class="pl-k">+</span> yMax)/<span class="pl-c1">2</span></div><div class='line js-file-line' id='LC1078'>							};</div><div class='line js-file-line' id='LC1079'>						}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>, dataIndex);</div><div class='line js-file-line' id='LC1080'><br></div><div class='line js-file-line' id='LC1081'>					<span class="pl-k">new</span> <span class="pl-en">Chart.MultiTooltip</span>({</div><div class='line js-file-line' id='LC1082'>						x<span class="pl-k">:</span> medianPosition.<span class="pl-c1">x</span>,</div><div class='line js-file-line' id='LC1083'>						y<span class="pl-k">:</span> medianPosition.<span class="pl-c1">y</span>,</div><div class='line js-file-line' id='LC1084'>						xPadding<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipXPadding,</div><div class='line js-file-line' id='LC1085'>						yPadding<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipYPadding,</div><div class='line js-file-line' id='LC1086'>						xOffset<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipXOffset,</div><div class='line js-file-line' id='LC1087'>						fillColor<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipFillColor,</div><div class='line js-file-line' id='LC1088'>						textColor<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipFontColor,</div><div class='line js-file-line' id='LC1089'>						fontFamily<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipFontFamily,</div><div class='line js-file-line' id='LC1090'>						fontStyle<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipFontStyle,</div><div class='line js-file-line' id='LC1091'>						fontSize<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipFontSize,</div><div class='line js-file-line' id='LC1092'>						titleTextColor<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipTitleFontColor,</div><div class='line js-file-line' id='LC1093'>						titleFontFamily<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipTitleFontFamily,</div><div class='line js-file-line' id='LC1094'>						titleFontStyle<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipTitleFontStyle,</div><div class='line js-file-line' id='LC1095'>						titleFontSize<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipTitleFontSize,</div><div class='line js-file-line' id='LC1096'>						cornerRadius<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipCornerRadius,</div><div class='line js-file-line' id='LC1097'>						labels<span class="pl-k">:</span> tooltipLabels,</div><div class='line js-file-line' id='LC1098'>						legendColors<span class="pl-k">:</span> tooltipColors,</div><div class='line js-file-line' id='LC1099'>						legendColorBackground <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.multiTooltipKeyBackground,</div><div class='line js-file-line' id='LC1100'>						title<span class="pl-k">:</span> ChartElements[<span class="pl-c1">0</span>].<span class="pl-c1">label</span>,</div><div class='line js-file-line' id='LC1101'>						chart<span class="pl-k">:</span> <span class="pl-v">this</span>.chart,</div><div class='line js-file-line' id='LC1102'>						ctx<span class="pl-k">:</span> <span class="pl-v">this</span>.chart.ctx,</div><div class='line js-file-line' id='LC1103'>						custom<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.customTooltips</div><div class='line js-file-line' id='LC1104'>					}).draw();</div><div class='line js-file-line' id='LC1105'><br></div><div class='line js-file-line' id='LC1106'>				} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC1107'>					each(ChartElements, <span class="pl-k">function</span>(<span class="pl-smi">Element</span>) {</div><div class='line js-file-line' id='LC1108'>						<span class="pl-k">var</span> tooltipPosition <span class="pl-k">=</span> Element.tooltipPosition();</div><div class='line js-file-line' id='LC1109'>						<span class="pl-k">new</span> <span class="pl-en">Chart.Tooltip</span>({</div><div class='line js-file-line' id='LC1110'>							x<span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(tooltipPosition.<span class="pl-c1">x</span>),</div><div class='line js-file-line' id='LC1111'>							y<span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(tooltipPosition.<span class="pl-c1">y</span>),</div><div class='line js-file-line' id='LC1112'>							xPadding<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipXPadding,</div><div class='line js-file-line' id='LC1113'>							yPadding<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipYPadding,</div><div class='line js-file-line' id='LC1114'>							fillColor<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipFillColor,</div><div class='line js-file-line' id='LC1115'>							textColor<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipFontColor,</div><div class='line js-file-line' id='LC1116'>							fontFamily<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipFontFamily,</div><div class='line js-file-line' id='LC1117'>							fontStyle<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipFontStyle,</div><div class='line js-file-line' id='LC1118'>							fontSize<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipFontSize,</div><div class='line js-file-line' id='LC1119'>							caretHeight<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipCaretSize,</div><div class='line js-file-line' id='LC1120'>							cornerRadius<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipCornerRadius,</div><div class='line js-file-line' id='LC1121'>							text<span class="pl-k">:</span> template(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipTemplate, Element),</div><div class='line js-file-line' id='LC1122'>							chart<span class="pl-k">:</span> <span class="pl-v">this</span>.chart,</div><div class='line js-file-line' id='LC1123'>							custom<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.customTooltips</div><div class='line js-file-line' id='LC1124'>						}).draw();</div><div class='line js-file-line' id='LC1125'>					}, <span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1126'>				}</div><div class='line js-file-line' id='LC1127'>			}</div><div class='line js-file-line' id='LC1128'>			<span class="pl-k">return</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC1129'>		},</div><div class='line js-file-line' id='LC1130'>		<span class="pl-en">toBase64Image</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1131'>			<span class="pl-k">return</span> <span class="pl-v">this</span>.chart.canvas.toDataURL.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>.chart.canvas, arguments);</div><div class='line js-file-line' id='LC1132'>		}</div><div class='line js-file-line' id='LC1133'>	});</div><div class='line js-file-line' id='LC1134'><br></div><div class='line js-file-line' id='LC1135'>	<span class="pl-c1">Chart.Type</span>.<span class="pl-en">extend</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">extensions</span>){</div><div class='line js-file-line' id='LC1136'><br></div><div class='line js-file-line' id='LC1137'>		<span class="pl-k">var</span> parent <span class="pl-k">=</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC1138'><br></div><div class='line js-file-line' id='LC1139'>		<span class="pl-k">var</span> <span class="pl-en">ChartType</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1140'>			<span class="pl-k">return</span> parent.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,arguments);</div><div class='line js-file-line' id='LC1141'>		};</div><div class='line js-file-line' id='LC1142'><br></div><div class='line js-file-line' id='LC1143'>		<span class="pl-c">//Copy the prototype object of the this class</span></div><div class='line js-file-line' id='LC1144'>		<span class="pl-c1">ChartType</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> clone(parent.<span class="pl-c1">prototype</span>);</div><div class='line js-file-line' id='LC1145'>		<span class="pl-c">//Now overwrite some of the properties in the base class with the new extensions</span></div><div class='line js-file-line' id='LC1146'>		extend(ChartType.<span class="pl-c1">prototype</span>, extensions);</div><div class='line js-file-line' id='LC1147'><br></div><div class='line js-file-line' id='LC1148'>		ChartType.extend <span class="pl-k">=</span> Chart.Type.extend;</div><div class='line js-file-line' id='LC1149'><br></div><div class='line js-file-line' id='LC1150'>		<span class="pl-k">if</span> (extensions.<span class="pl-c1">name</span> <span class="pl-k">||</span> parent.<span class="pl-c1">prototype</span>.<span class="pl-c1">name</span>){</div><div class='line js-file-line' id='LC1151'><br></div><div class='line js-file-line' id='LC1152'>			<span class="pl-k">var</span> chartName <span class="pl-k">=</span> extensions.<span class="pl-c1">name</span> <span class="pl-k">||</span> parent.<span class="pl-c1">prototype</span>.<span class="pl-c1">name</span>;</div><div class='line js-file-line' id='LC1153'>			<span class="pl-c">//Assign any potential default values of the new chart type</span></div><div class='line js-file-line' id='LC1154'><br></div><div class='line js-file-line' id='LC1155'>			<span class="pl-c">//If none are defined, we&#39;ll use a clone of the chart type this is being extended from.</span></div><div class='line js-file-line' id='LC1156'>			<span class="pl-c">//I.e. if we extend a line chart, we&#39;ll use the defaults from the line chart if our new chart</span></div><div class='line js-file-line' id='LC1157'>			<span class="pl-c">//doesn&#39;t define some defaults of their own.</span></div><div class='line js-file-line' id='LC1158'><br></div><div class='line js-file-line' id='LC1159'>			<span class="pl-k">var</span> baseDefaults <span class="pl-k">=</span> (Chart.defaults[parent.<span class="pl-c1">prototype</span>.<span class="pl-c1">name</span>]) <span class="pl-k">?</span> clone(Chart.defaults[parent.<span class="pl-c1">prototype</span>.<span class="pl-c1">name</span>]) <span class="pl-k">:</span> {};</div><div class='line js-file-line' id='LC1160'><br></div><div class='line js-file-line' id='LC1161'>			Chart.defaults[chartName] <span class="pl-k">=</span> extend(baseDefaults,extensions.defaults);</div><div class='line js-file-line' id='LC1162'><br></div><div class='line js-file-line' id='LC1163'>			Chart.types[chartName] <span class="pl-k">=</span> ChartType;</div><div class='line js-file-line' id='LC1164'><br></div><div class='line js-file-line' id='LC1165'>			<span class="pl-c">//Register this new chart type in the Chart prototype</span></div><div class='line js-file-line' id='LC1166'>			Chart.<span class="pl-c1">prototype</span>[chartName] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">data</span>,<span class="pl-smi">options</span>){</div><div class='line js-file-line' id='LC1167'>				<span class="pl-k">var</span> config <span class="pl-k">=</span> merge(Chart.defaults.<span class="pl-c1">global</span>, Chart.defaults[chartName], options <span class="pl-k">||</span> {});</div><div class='line js-file-line' id='LC1168'>				<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ChartType</span>(data,config,<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1169'>			};</div><div class='line js-file-line' id='LC1170'>		} <span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC1171'>			warn(<span class="pl-s"><span class="pl-pds">&quot;</span>Name not provided for this chart, so it hasn&#39;t been registered<span class="pl-pds">&quot;</span></span>);</div><div class='line js-file-line' id='LC1172'>		}</div><div class='line js-file-line' id='LC1173'>		<span class="pl-k">return</span> parent;</div><div class='line js-file-line' id='LC1174'>	};</div><div class='line js-file-line' id='LC1175'><br></div><div class='line js-file-line' id='LC1176'>	<span class="pl-c1">Chart</span>.<span class="pl-en">Element</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">configuration</span>){</div><div class='line js-file-line' id='LC1177'>		extend(<span class="pl-v">this</span>,configuration);</div><div class='line js-file-line' id='LC1178'>		<span class="pl-v">this</span>.initialize.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>,arguments);</div><div class='line js-file-line' id='LC1179'>		<span class="pl-v">this</span>.save();</div><div class='line js-file-line' id='LC1180'>	};</div><div class='line js-file-line' id='LC1181'>	extend(Chart.Element.<span class="pl-c1">prototype</span>,{</div><div class='line js-file-line' id='LC1182'>		<span class="pl-en">initialize</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){},</div><div class='line js-file-line' id='LC1183'>		<span class="pl-en">restore</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">props</span>){</div><div class='line js-file-line' id='LC1184'>			<span class="pl-k">if</span> (<span class="pl-k">!</span>props){</div><div class='line js-file-line' id='LC1185'>				extend(<span class="pl-v">this</span>,<span class="pl-v">this</span>._saved);</div><div class='line js-file-line' id='LC1186'>			} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC1187'>				each(props,<span class="pl-k">function</span>(<span class="pl-smi">key</span>){</div><div class='line js-file-line' id='LC1188'>					<span class="pl-v">this</span>[key] <span class="pl-k">=</span> <span class="pl-v">this</span>._saved[key];</div><div class='line js-file-line' id='LC1189'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1190'>			}</div><div class='line js-file-line' id='LC1191'>			<span class="pl-k">return</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC1192'>		},</div><div class='line js-file-line' id='LC1193'>		<span class="pl-en">save</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1194'>			<span class="pl-v">this</span>._saved <span class="pl-k">=</span> clone(<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1195'>			<span class="pl-k">delete</span> <span class="pl-v">this</span>._saved._saved;</div><div class='line js-file-line' id='LC1196'>			<span class="pl-k">return</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC1197'>		},</div><div class='line js-file-line' id='LC1198'>		<span class="pl-en">update</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">newProps</span>){</div><div class='line js-file-line' id='LC1199'>			each(newProps,<span class="pl-k">function</span>(<span class="pl-smi">value</span>,<span class="pl-smi">key</span>){</div><div class='line js-file-line' id='LC1200'>				<span class="pl-v">this</span>._saved[key] <span class="pl-k">=</span> <span class="pl-v">this</span>[key];</div><div class='line js-file-line' id='LC1201'>				<span class="pl-v">this</span>[key] <span class="pl-k">=</span> value;</div><div class='line js-file-line' id='LC1202'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1203'>			<span class="pl-k">return</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC1204'>		},</div><div class='line js-file-line' id='LC1205'>		<span class="pl-en">transition</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">props</span>,<span class="pl-smi">ease</span>){</div><div class='line js-file-line' id='LC1206'>			each(props,<span class="pl-k">function</span>(<span class="pl-smi">value</span>,<span class="pl-smi">key</span>){</div><div class='line js-file-line' id='LC1207'>				<span class="pl-v">this</span>[key] <span class="pl-k">=</span> ((value <span class="pl-k">-</span> <span class="pl-v">this</span>._saved[key]) <span class="pl-k">*</span> ease) <span class="pl-k">+</span> <span class="pl-v">this</span>._saved[key];</div><div class='line js-file-line' id='LC1208'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1209'>			<span class="pl-k">return</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC1210'>		},</div><div class='line js-file-line' id='LC1211'>		<span class="pl-en">tooltipPosition</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1212'>			<span class="pl-k">return</span> {</div><div class='line js-file-line' id='LC1213'>				x <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">x</span>,</div><div class='line js-file-line' id='LC1214'>				y <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">y</span></div><div class='line js-file-line' id='LC1215'>			};</div><div class='line js-file-line' id='LC1216'>		},</div><div class='line js-file-line' id='LC1217'>		<span class="pl-en">hasValue</span><span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1218'>			<span class="pl-k">return</span> isNumber(<span class="pl-v">this</span>.<span class="pl-c1">value</span>);</div><div class='line js-file-line' id='LC1219'>		}</div><div class='line js-file-line' id='LC1220'>	});</div><div class='line js-file-line' id='LC1221'><br></div><div class='line js-file-line' id='LC1222'>	Chart.Element.extend <span class="pl-k">=</span> inherits;</div><div class='line js-file-line' id='LC1223'><br></div><div class='line js-file-line' id='LC1224'><br></div><div class='line js-file-line' id='LC1225'>	Chart.Point <span class="pl-k">=</span> Chart.Element.extend({</div><div class='line js-file-line' id='LC1226'>		display<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC1227'>		<span class="pl-en">inRange</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">chartX</span>,<span class="pl-smi">chartY</span>){</div><div class='line js-file-line' id='LC1228'>			<span class="pl-k">var</span> hitDetectionRange <span class="pl-k">=</span> <span class="pl-v">this</span>.hitDetectionRadius <span class="pl-k">+</span> <span class="pl-v">this</span>.radius;</div><div class='line js-file-line' id='LC1229'>			<span class="pl-k">return</span> ((<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(chartX<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">x</span>, <span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(chartY<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">y</span>, <span class="pl-c1">2</span>)) <span class="pl-k">&lt;</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(hitDetectionRange,<span class="pl-c1">2</span>));</div><div class='line js-file-line' id='LC1230'>		},</div><div class='line js-file-line' id='LC1231'>		<span class="pl-en">draw</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1232'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">display</span>){</div><div class='line js-file-line' id='LC1233'>				<span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-v">this</span>.ctx;</div><div class='line js-file-line' id='LC1234'>				ctx.beginPath();</div><div class='line js-file-line' id='LC1235'><br></div><div class='line js-file-line' id='LC1236'>				ctx.arc(<span class="pl-v">this</span>.<span class="pl-c1">x</span>, <span class="pl-v">this</span>.<span class="pl-c1">y</span>, <span class="pl-v">this</span>.radius, <span class="pl-c1">0</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">*</span><span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1237'>				ctx.closePath();</div><div class='line js-file-line' id='LC1238'><br></div><div class='line js-file-line' id='LC1239'>				ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.strokeColor;</div><div class='line js-file-line' id='LC1240'>				ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.strokeWidth;</div><div class='line js-file-line' id='LC1241'><br></div><div class='line js-file-line' id='LC1242'>				ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.fillColor;</div><div class='line js-file-line' id='LC1243'><br></div><div class='line js-file-line' id='LC1244'>				ctx.fill();</div><div class='line js-file-line' id='LC1245'>				ctx.stroke();</div><div class='line js-file-line' id='LC1246'>			}</div><div class='line js-file-line' id='LC1247'><br></div><div class='line js-file-line' id='LC1248'><br></div><div class='line js-file-line' id='LC1249'>			<span class="pl-c">//Quick debug for bezier curve splining</span></div><div class='line js-file-line' id='LC1250'>			<span class="pl-c">//Highlights control points and the line between them.</span></div><div class='line js-file-line' id='LC1251'>			<span class="pl-c">//Handy for dev - stripped in the min version.</span></div><div class='line js-file-line' id='LC1252'><br></div><div class='line js-file-line' id='LC1253'>			<span class="pl-c">// ctx.save();</span></div><div class='line js-file-line' id='LC1254'>			<span class="pl-c">// ctx.fillStyle = &quot;black&quot;;</span></div><div class='line js-file-line' id='LC1255'>			<span class="pl-c">// ctx.strokeStyle = &quot;black&quot;</span></div><div class='line js-file-line' id='LC1256'>			<span class="pl-c">// ctx.beginPath();</span></div><div class='line js-file-line' id='LC1257'>			<span class="pl-c">// ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);</span></div><div class='line js-file-line' id='LC1258'>			<span class="pl-c">// ctx.fill();</span></div><div class='line js-file-line' id='LC1259'><br></div><div class='line js-file-line' id='LC1260'>			<span class="pl-c">// ctx.beginPath();</span></div><div class='line js-file-line' id='LC1261'>			<span class="pl-c">// ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);</span></div><div class='line js-file-line' id='LC1262'>			<span class="pl-c">// ctx.fill();</span></div><div class='line js-file-line' id='LC1263'><br></div><div class='line js-file-line' id='LC1264'>			<span class="pl-c">// ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);</span></div><div class='line js-file-line' id='LC1265'>			<span class="pl-c">// ctx.lineTo(this.x, this.y);</span></div><div class='line js-file-line' id='LC1266'>			<span class="pl-c">// ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);</span></div><div class='line js-file-line' id='LC1267'>			<span class="pl-c">// ctx.stroke();</span></div><div class='line js-file-line' id='LC1268'><br></div><div class='line js-file-line' id='LC1269'>			<span class="pl-c">// ctx.restore();</span></div><div class='line js-file-line' id='LC1270'><br></div><div class='line js-file-line' id='LC1271'><br></div><div class='line js-file-line' id='LC1272'><br></div><div class='line js-file-line' id='LC1273'>		}</div><div class='line js-file-line' id='LC1274'>	});</div><div class='line js-file-line' id='LC1275'><br></div><div class='line js-file-line' id='LC1276'>	Chart.Arc <span class="pl-k">=</span> Chart.Element.extend({</div><div class='line js-file-line' id='LC1277'>		<span class="pl-en">inRange</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">chartX</span>,<span class="pl-smi">chartY</span>){</div><div class='line js-file-line' id='LC1278'><br></div><div class='line js-file-line' id='LC1279'>			<span class="pl-k">var</span> pointRelativePosition <span class="pl-k">=</span> helpers.getAngleFromPoint(<span class="pl-v">this</span>, {</div><div class='line js-file-line' id='LC1280'>				x<span class="pl-k">:</span> chartX,</div><div class='line js-file-line' id='LC1281'>				y<span class="pl-k">:</span> chartY</div><div class='line js-file-line' id='LC1282'>			});</div><div class='line js-file-line' id='LC1283'><br></div><div class='line js-file-line' id='LC1284'>			<span class="pl-c">//Check if within the range of the open/close angle</span></div><div class='line js-file-line' id='LC1285'>			<span class="pl-k">var</span> betweenAngles <span class="pl-k">=</span> (pointRelativePosition.angle <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.startAngle <span class="pl-k">&amp;&amp;</span> pointRelativePosition.angle <span class="pl-k">&lt;=</span> <span class="pl-v">this</span>.endAngle),</div><div class='line js-file-line' id='LC1286'>				withinRadius <span class="pl-k">=</span> (pointRelativePosition.distance <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.innerRadius <span class="pl-k">&amp;&amp;</span> pointRelativePosition.distance <span class="pl-k">&lt;=</span> <span class="pl-v">this</span>.outerRadius);</div><div class='line js-file-line' id='LC1287'><br></div><div class='line js-file-line' id='LC1288'>			<span class="pl-k">return</span> (betweenAngles <span class="pl-k">&amp;&amp;</span> withinRadius);</div><div class='line js-file-line' id='LC1289'>			<span class="pl-c">//Ensure within the outside of the arc centre, but inside arc outer</span></div><div class='line js-file-line' id='LC1290'>		},</div><div class='line js-file-line' id='LC1291'>		<span class="pl-en">tooltipPosition</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1292'>			<span class="pl-k">var</span> centreAngle <span class="pl-k">=</span> <span class="pl-v">this</span>.startAngle <span class="pl-k">+</span> ((<span class="pl-v">this</span>.endAngle <span class="pl-k">-</span> <span class="pl-v">this</span>.startAngle) / <span class="pl-c1">2</span>),</div><div class='line js-file-line' id='LC1293'>				rangeFromCentre <span class="pl-k">=</span> (<span class="pl-v">this</span>.outerRadius <span class="pl-k">-</span> <span class="pl-v">this</span>.innerRadius) / <span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.innerRadius;</div><div class='line js-file-line' id='LC1294'>			<span class="pl-k">return</span> {</div><div class='line js-file-line' id='LC1295'>				x <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(centreAngle) <span class="pl-k">*</span> rangeFromCentre),</div><div class='line js-file-line' id='LC1296'>				y <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">+</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(centreAngle) <span class="pl-k">*</span> rangeFromCentre)</div><div class='line js-file-line' id='LC1297'>			};</div><div class='line js-file-line' id='LC1298'>		},</div><div class='line js-file-line' id='LC1299'>		<span class="pl-en">draw</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">animationPercent</span>){</div><div class='line js-file-line' id='LC1300'><br></div><div class='line js-file-line' id='LC1301'>			<span class="pl-k">var</span> easingDecimal <span class="pl-k">=</span> animationPercent <span class="pl-k">||</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC1302'><br></div><div class='line js-file-line' id='LC1303'>			<span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-v">this</span>.ctx;</div><div class='line js-file-line' id='LC1304'><br></div><div class='line js-file-line' id='LC1305'>			ctx.beginPath();</div><div class='line js-file-line' id='LC1306'><br></div><div class='line js-file-line' id='LC1307'>			ctx.arc(<span class="pl-v">this</span>.<span class="pl-c1">x</span>, <span class="pl-v">this</span>.<span class="pl-c1">y</span>, <span class="pl-v">this</span>.outerRadius, <span class="pl-v">this</span>.startAngle, <span class="pl-v">this</span>.endAngle);</div><div class='line js-file-line' id='LC1308'><br></div><div class='line js-file-line' id='LC1309'>			ctx.arc(<span class="pl-v">this</span>.<span class="pl-c1">x</span>, <span class="pl-v">this</span>.<span class="pl-c1">y</span>, <span class="pl-v">this</span>.innerRadius, <span class="pl-v">this</span>.endAngle, <span class="pl-v">this</span>.startAngle, <span class="pl-c1">true</span>);</div><div class='line js-file-line' id='LC1310'><br></div><div class='line js-file-line' id='LC1311'>			ctx.closePath();</div><div class='line js-file-line' id='LC1312'>			ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.strokeColor;</div><div class='line js-file-line' id='LC1313'>			ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.strokeWidth;</div><div class='line js-file-line' id='LC1314'><br></div><div class='line js-file-line' id='LC1315'>			ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.fillColor;</div><div class='line js-file-line' id='LC1316'><br></div><div class='line js-file-line' id='LC1317'>			ctx.fill();</div><div class='line js-file-line' id='LC1318'>			ctx.lineJoin <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>bevel<span class="pl-pds">&#39;</span></span>;</div><div class='line js-file-line' id='LC1319'><br></div><div class='line js-file-line' id='LC1320'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.showStroke){</div><div class='line js-file-line' id='LC1321'>				ctx.stroke();</div><div class='line js-file-line' id='LC1322'>			}</div><div class='line js-file-line' id='LC1323'>		}</div><div class='line js-file-line' id='LC1324'>	});</div><div class='line js-file-line' id='LC1325'><br></div><div class='line js-file-line' id='LC1326'>	Chart.Rectangle <span class="pl-k">=</span> Chart.Element.extend({</div><div class='line js-file-line' id='LC1327'>		<span class="pl-en">draw</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1328'>			<span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-v">this</span>.ctx,</div><div class='line js-file-line' id='LC1329'>				halfWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span>/<span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC1330'>				leftX <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> halfWidth,</div><div class='line js-file-line' id='LC1331'>				rightX <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> halfWidth,</div><div class='line js-file-line' id='LC1332'>				top <span class="pl-k">=</span> <span class="pl-v">this</span>.base <span class="pl-k">-</span> (<span class="pl-v">this</span>.base <span class="pl-k">-</span> <span class="pl-v">this</span>.<span class="pl-c1">y</span>),</div><div class='line js-file-line' id='LC1333'>				halfStroke <span class="pl-k">=</span> <span class="pl-v">this</span>.strokeWidth / <span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC1334'><br></div><div class='line js-file-line' id='LC1335'>			<span class="pl-c">// Canvas doesn&#39;t allow us to stroke inside the width so we can</span></div><div class='line js-file-line' id='LC1336'>			<span class="pl-c">// adjust the sizes to fit if we&#39;re setting a stroke on the line</span></div><div class='line js-file-line' id='LC1337'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.showStroke){</div><div class='line js-file-line' id='LC1338'>				leftX <span class="pl-k">+=</span> halfStroke;</div><div class='line js-file-line' id='LC1339'>				rightX <span class="pl-k">-=</span> halfStroke;</div><div class='line js-file-line' id='LC1340'>				top <span class="pl-k">+=</span> halfStroke;</div><div class='line js-file-line' id='LC1341'>			}</div><div class='line js-file-line' id='LC1342'><br></div><div class='line js-file-line' id='LC1343'>			ctx.beginPath();</div><div class='line js-file-line' id='LC1344'><br></div><div class='line js-file-line' id='LC1345'>			ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.fillColor;</div><div class='line js-file-line' id='LC1346'>			ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.strokeColor;</div><div class='line js-file-line' id='LC1347'>			ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.strokeWidth;</div><div class='line js-file-line' id='LC1348'><br></div><div class='line js-file-line' id='LC1349'>			<span class="pl-c">// It&#39;d be nice to keep this class totally generic to any rectangle</span></div><div class='line js-file-line' id='LC1350'>			<span class="pl-c">// and simply specify which border to miss out.</span></div><div class='line js-file-line' id='LC1351'>			ctx.<span class="pl-c1">moveTo</span>(leftX, <span class="pl-v">this</span>.base);</div><div class='line js-file-line' id='LC1352'>			ctx.lineTo(leftX, top);</div><div class='line js-file-line' id='LC1353'>			ctx.lineTo(rightX, top);</div><div class='line js-file-line' id='LC1354'>			ctx.lineTo(rightX, <span class="pl-v">this</span>.base);</div><div class='line js-file-line' id='LC1355'>			ctx.fill();</div><div class='line js-file-line' id='LC1356'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.showStroke){</div><div class='line js-file-line' id='LC1357'>				ctx.stroke();</div><div class='line js-file-line' id='LC1358'>			}</div><div class='line js-file-line' id='LC1359'>		},</div><div class='line js-file-line' id='LC1360'>		<span class="pl-en">height</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1361'>			<span class="pl-k">return</span> <span class="pl-v">this</span>.base <span class="pl-k">-</span> <span class="pl-v">this</span>.<span class="pl-c1">y</span>;</div><div class='line js-file-line' id='LC1362'>		},</div><div class='line js-file-line' id='LC1363'>		<span class="pl-en">inRange</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">chartX</span>,<span class="pl-smi">chartY</span>){</div><div class='line js-file-line' id='LC1364'>			<span class="pl-k">return</span> (chartX <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span>/<span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> chartX <span class="pl-k">&lt;=</span> <span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span>/<span class="pl-c1">2</span>) <span class="pl-k">&amp;&amp;</span> (chartY <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">&amp;&amp;</span> chartY <span class="pl-k">&lt;=</span> <span class="pl-v">this</span>.base);</div><div class='line js-file-line' id='LC1365'>		}</div><div class='line js-file-line' id='LC1366'>	});</div><div class='line js-file-line' id='LC1367'><br></div><div class='line js-file-line' id='LC1368'>	Chart.Animation <span class="pl-k">=</span> Chart.Element.extend({</div><div class='line js-file-line' id='LC1369'>		currentStep<span class="pl-k">:</span> <span class="pl-c1">null</span>, <span class="pl-c">// the current animation step</span></div><div class='line js-file-line' id='LC1370'>		numSteps<span class="pl-k">:</span> <span class="pl-c1">60</span>, <span class="pl-c">// default number of steps</span></div><div class='line js-file-line' id='LC1371'>		easing<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, <span class="pl-c">// the easing to use for this animation</span></div><div class='line js-file-line' id='LC1372'>		render<span class="pl-k">:</span> <span class="pl-c1">null</span>, <span class="pl-c">// render function used by the animation service</span></div><div class='line js-file-line' id='LC1373'><br></div><div class='line js-file-line' id='LC1374'>		onAnimationProgress<span class="pl-k">:</span> <span class="pl-c1">null</span>, <span class="pl-c">// user specified callback to fire on each step of the animation </span></div><div class='line js-file-line' id='LC1375'>		onAnimationComplete<span class="pl-k">:</span> <span class="pl-c1">null</span>, <span class="pl-c">// user specified callback to fire when the animation finishes</span></div><div class='line js-file-line' id='LC1376'>	});</div><div class='line js-file-line' id='LC1377'><br></div><div class='line js-file-line' id='LC1378'>	Chart.Tooltip <span class="pl-k">=</span> Chart.Element.extend({</div><div class='line js-file-line' id='LC1379'>		<span class="pl-en">draw</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1380'><br></div><div class='line js-file-line' id='LC1381'>			<span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.ctx;</div><div class='line js-file-line' id='LC1382'><br></div><div class='line js-file-line' id='LC1383'>			ctx.font <span class="pl-k">=</span> fontString(<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>,<span class="pl-v">this</span>.fontStyle,<span class="pl-v">this</span>.<span class="pl-c1">fontFamily</span>);</div><div class='line js-file-line' id='LC1384'><br></div><div class='line js-file-line' id='LC1385'>			<span class="pl-v">this</span>.xAlign <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1386'>			<span class="pl-v">this</span>.yAlign <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>above<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1387'><br></div><div class='line js-file-line' id='LC1388'>			<span class="pl-c">//Distance between the actual element.y position and the start of the tooltip caret</span></div><div class='line js-file-line' id='LC1389'>			<span class="pl-k">var</span> caretPadding <span class="pl-k">=</span> <span class="pl-v">this</span>.caretPadding <span class="pl-k">=</span> <span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC1390'><br></div><div class='line js-file-line' id='LC1391'>			<span class="pl-k">var</span> tooltipWidth <span class="pl-k">=</span> ctx.measureText(<span class="pl-v">this</span>.<span class="pl-c1">text</span>).<span class="pl-c1">width</span> <span class="pl-k">+</span> <span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-v">this</span>.xPadding,</div><div class='line js-file-line' id='LC1392'>				tooltipRectHeight <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span> <span class="pl-k">+</span> <span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-v">this</span>.yPadding,</div><div class='line js-file-line' id='LC1393'>				tooltipHeight <span class="pl-k">=</span> tooltipRectHeight <span class="pl-k">+</span> <span class="pl-v">this</span>.caretHeight <span class="pl-k">+</span> caretPadding;</div><div class='line js-file-line' id='LC1394'><br></div><div class='line js-file-line' id='LC1395'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> tooltipWidth/<span class="pl-c1">2</span> <span class="pl-k">&gt;</span><span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>){</div><div class='line js-file-line' id='LC1396'>				<span class="pl-v">this</span>.xAlign <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1397'>			} <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> tooltipWidth/<span class="pl-c1">2</span> <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC1398'>				<span class="pl-v">this</span>.xAlign <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1399'>			}</div><div class='line js-file-line' id='LC1400'><br></div><div class='line js-file-line' id='LC1401'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> tooltipHeight <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC1402'>				<span class="pl-v">this</span>.yAlign <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>below<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1403'>			}</div><div class='line js-file-line' id='LC1404'><br></div><div class='line js-file-line' id='LC1405'><br></div><div class='line js-file-line' id='LC1406'>			<span class="pl-k">var</span> tooltipX <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> tooltipWidth/<span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC1407'>				tooltipY <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> tooltipHeight;</div><div class='line js-file-line' id='LC1408'><br></div><div class='line js-file-line' id='LC1409'>			ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.fillColor;</div><div class='line js-file-line' id='LC1410'><br></div><div class='line js-file-line' id='LC1411'>			<span class="pl-c">// Custom Tooltips</span></div><div class='line js-file-line' id='LC1412'>			<span class="pl-k">if</span>(<span class="pl-v">this</span>.custom){</div><div class='line js-file-line' id='LC1413'>				<span class="pl-v">this</span>.custom(<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1414'>			}</div><div class='line js-file-line' id='LC1415'>			<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC1416'>				<span class="pl-k">switch</span>(<span class="pl-v">this</span>.yAlign)</div><div class='line js-file-line' id='LC1417'>				{</div><div class='line js-file-line' id='LC1418'>				<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>above<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></div><div class='line js-file-line' id='LC1419'>					<span class="pl-c">//Draw a caret above the x/y</span></div><div class='line js-file-line' id='LC1420'>					ctx.beginPath();</div><div class='line js-file-line' id='LC1421'>					ctx.<span class="pl-c1">moveTo</span>(<span class="pl-v">this</span>.<span class="pl-c1">x</span>,<span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> caretPadding);</div><div class='line js-file-line' id='LC1422'>					ctx.lineTo(<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.caretHeight, <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> (caretPadding <span class="pl-k">+</span> <span class="pl-v">this</span>.caretHeight));</div><div class='line js-file-line' id='LC1423'>					ctx.lineTo(<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> <span class="pl-v">this</span>.caretHeight, <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> (caretPadding <span class="pl-k">+</span> <span class="pl-v">this</span>.caretHeight));</div><div class='line js-file-line' id='LC1424'>					ctx.closePath();</div><div class='line js-file-line' id='LC1425'>					ctx.fill();</div><div class='line js-file-line' id='LC1426'>					<span class="pl-k">break</span>;</div><div class='line js-file-line' id='LC1427'>				<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>below<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></div><div class='line js-file-line' id='LC1428'>					tooltipY <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">+</span> caretPadding <span class="pl-k">+</span> <span class="pl-v">this</span>.caretHeight;</div><div class='line js-file-line' id='LC1429'>					<span class="pl-c">//Draw a caret below the x/y</span></div><div class='line js-file-line' id='LC1430'>					ctx.beginPath();</div><div class='line js-file-line' id='LC1431'>					ctx.<span class="pl-c1">moveTo</span>(<span class="pl-v">this</span>.<span class="pl-c1">x</span>, <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">+</span> caretPadding);</div><div class='line js-file-line' id='LC1432'>					ctx.lineTo(<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.caretHeight, <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">+</span> caretPadding <span class="pl-k">+</span> <span class="pl-v">this</span>.caretHeight);</div><div class='line js-file-line' id='LC1433'>					ctx.lineTo(<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> <span class="pl-v">this</span>.caretHeight, <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">+</span> caretPadding <span class="pl-k">+</span> <span class="pl-v">this</span>.caretHeight);</div><div class='line js-file-line' id='LC1434'>					ctx.closePath();</div><div class='line js-file-line' id='LC1435'>					ctx.fill();</div><div class='line js-file-line' id='LC1436'>					<span class="pl-k">break</span>;</div><div class='line js-file-line' id='LC1437'>				}</div><div class='line js-file-line' id='LC1438'><br></div><div class='line js-file-line' id='LC1439'>				<span class="pl-k">switch</span>(<span class="pl-v">this</span>.xAlign)</div><div class='line js-file-line' id='LC1440'>				{</div><div class='line js-file-line' id='LC1441'>				<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></div><div class='line js-file-line' id='LC1442'>					tooltipX <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> tooltipWidth <span class="pl-k">+</span> (<span class="pl-v">this</span>.cornerRadius <span class="pl-k">+</span> <span class="pl-v">this</span>.caretHeight);</div><div class='line js-file-line' id='LC1443'>					<span class="pl-k">break</span>;</div><div class='line js-file-line' id='LC1444'>				<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></div><div class='line js-file-line' id='LC1445'>					tooltipX <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-</span> (<span class="pl-v">this</span>.cornerRadius <span class="pl-k">+</span> <span class="pl-v">this</span>.caretHeight);</div><div class='line js-file-line' id='LC1446'>					<span class="pl-k">break</span>;</div><div class='line js-file-line' id='LC1447'>				}</div><div class='line js-file-line' id='LC1448'><br></div><div class='line js-file-line' id='LC1449'>				drawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,<span class="pl-v">this</span>.cornerRadius);</div><div class='line js-file-line' id='LC1450'><br></div><div class='line js-file-line' id='LC1451'>				ctx.fill();</div><div class='line js-file-line' id='LC1452'><br></div><div class='line js-file-line' id='LC1453'>				ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.textColor;</div><div class='line js-file-line' id='LC1454'>				ctx.<span class="pl-c1">textAlign</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1455'>				ctx.textBaseline <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1456'>				ctx.fillText(<span class="pl-v">this</span>.<span class="pl-c1">text</span>, tooltipX <span class="pl-k">+</span> tooltipWidth/<span class="pl-c1">2</span>, tooltipY <span class="pl-k">+</span> tooltipRectHeight/<span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1457'>			}</div><div class='line js-file-line' id='LC1458'>		}</div><div class='line js-file-line' id='LC1459'>	});</div><div class='line js-file-line' id='LC1460'><br></div><div class='line js-file-line' id='LC1461'>	Chart.MultiTooltip <span class="pl-k">=</span> Chart.Element.extend({</div><div class='line js-file-line' id='LC1462'>		<span class="pl-en">initialize</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1463'>			<span class="pl-v">this</span>.font <span class="pl-k">=</span> fontString(<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>,<span class="pl-v">this</span>.fontStyle,<span class="pl-v">this</span>.<span class="pl-c1">fontFamily</span>);</div><div class='line js-file-line' id='LC1464'><br></div><div class='line js-file-line' id='LC1465'>			<span class="pl-v">this</span>.titleFont <span class="pl-k">=</span> fontString(<span class="pl-v">this</span>.titleFontSize,<span class="pl-v">this</span>.titleFontStyle,<span class="pl-v">this</span>.titleFontFamily);</div><div class='line js-file-line' id='LC1466'><br></div><div class='line js-file-line' id='LC1467'>			<span class="pl-v">this</span>.<span class="pl-c1">height</span> <span class="pl-k">=</span> (<span class="pl-v">this</span>.labels.<span class="pl-c1">length</span> <span class="pl-k">*</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>) <span class="pl-k">+</span> ((<span class="pl-v">this</span>.labels.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>) <span class="pl-k">*</span> (<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>/<span class="pl-c1">2</span>)) <span class="pl-k">+</span> (<span class="pl-v">this</span>.yPadding<span class="pl-k">*</span><span class="pl-c1">2</span>) <span class="pl-k">+</span> <span class="pl-v">this</span>.titleFontSize <span class="pl-k">*</span><span class="pl-c1">1.5</span>;</div><div class='line js-file-line' id='LC1468'><br></div><div class='line js-file-line' id='LC1469'>			<span class="pl-v">this</span>.ctx.font <span class="pl-k">=</span> <span class="pl-v">this</span>.titleFont;</div><div class='line js-file-line' id='LC1470'><br></div><div class='line js-file-line' id='LC1471'>			<span class="pl-k">var</span> titleWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.ctx.measureText(<span class="pl-v">this</span>.<span class="pl-c1">title</span>).<span class="pl-c1">width</span>,</div><div class='line js-file-line' id='LC1472'>				<span class="pl-c">//Label has a legend square as well so account for this.</span></div><div class='line js-file-line' id='LC1473'>				labelWidth <span class="pl-k">=</span> longestText(<span class="pl-v">this</span>.ctx,<span class="pl-v">this</span>.font,<span class="pl-v">this</span>.labels) <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span> <span class="pl-k">+</span> <span class="pl-c1">3</span>,</div><div class='line js-file-line' id='LC1474'>				longestTextWidth <span class="pl-k">=</span> <span class="pl-c1">max</span>([labelWidth,titleWidth]);</div><div class='line js-file-line' id='LC1475'><br></div><div class='line js-file-line' id='LC1476'>			<span class="pl-v">this</span>.<span class="pl-c1">width</span> <span class="pl-k">=</span> longestTextWidth <span class="pl-k">+</span> (<span class="pl-v">this</span>.xPadding<span class="pl-k">*</span><span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1477'><br></div><div class='line js-file-line' id='LC1478'><br></div><div class='line js-file-line' id='LC1479'>			<span class="pl-k">var</span> halfHeight <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">height</span>/<span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC1480'><br></div><div class='line js-file-line' id='LC1481'>			<span class="pl-c">//Check to ensure the height will fit on the canvas</span></div><div class='line js-file-line' id='LC1482'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> halfHeight <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> ){</div><div class='line js-file-line' id='LC1483'>				<span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">=</span> halfHeight;</div><div class='line js-file-line' id='LC1484'>			} <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">+</span> halfHeight <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>){</div><div class='line js-file-line' id='LC1485'>				<span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span> <span class="pl-k">-</span> halfHeight;</div><div class='line js-file-line' id='LC1486'>			}</div><div class='line js-file-line' id='LC1487'><br></div><div class='line js-file-line' id='LC1488'>			<span class="pl-c">//Decide whether to align left or right based on position on canvas</span></div><div class='line js-file-line' id='LC1489'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>/<span class="pl-c1">2</span>){</div><div class='line js-file-line' id='LC1490'>				<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">-=</span> <span class="pl-v">this</span>.xOffset <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span>;</div><div class='line js-file-line' id='LC1491'>			} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC1492'>				<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+=</span> <span class="pl-v">this</span>.xOffset;</div><div class='line js-file-line' id='LC1493'>			}</div><div class='line js-file-line' id='LC1494'><br></div><div class='line js-file-line' id='LC1495'><br></div><div class='line js-file-line' id='LC1496'>		},</div><div class='line js-file-line' id='LC1497'>		<span class="pl-en">getLineHeight</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC1498'>			<span class="pl-k">var</span> baseLineHeight <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> (<span class="pl-v">this</span>.<span class="pl-c1">height</span>/<span class="pl-c1">2</span>) <span class="pl-k">+</span> <span class="pl-v">this</span>.yPadding,</div><div class='line js-file-line' id='LC1499'>				afterTitleIndex <span class="pl-k">=</span> index<span class="pl-k">-</span><span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC1500'><br></div><div class='line js-file-line' id='LC1501'>			<span class="pl-c">//If the index is zero, we&#39;re getting the title</span></div><div class='line js-file-line' id='LC1502'>			<span class="pl-k">if</span> (index <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC1503'>				<span class="pl-k">return</span> baseLineHeight <span class="pl-k">+</span> <span class="pl-v">this</span>.titleFontSize/<span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC1504'>			} <span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC1505'>				<span class="pl-k">return</span> baseLineHeight <span class="pl-k">+</span> ((<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span><span class="pl-k">*</span><span class="pl-c1">1.5</span><span class="pl-k">*</span>afterTitleIndex) <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>/<span class="pl-c1">2</span>) <span class="pl-k">+</span> <span class="pl-v">this</span>.titleFontSize <span class="pl-k">*</span> <span class="pl-c1">1.5</span>;</div><div class='line js-file-line' id='LC1506'>			}</div><div class='line js-file-line' id='LC1507'><br></div><div class='line js-file-line' id='LC1508'>		},</div><div class='line js-file-line' id='LC1509'>		<span class="pl-en">draw</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1510'>			<span class="pl-c">// Custom Tooltips</span></div><div class='line js-file-line' id='LC1511'>			<span class="pl-k">if</span>(<span class="pl-v">this</span>.custom){</div><div class='line js-file-line' id='LC1512'>				<span class="pl-v">this</span>.custom(<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1513'>			}</div><div class='line js-file-line' id='LC1514'>			<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC1515'>				drawRoundedRectangle(<span class="pl-v">this</span>.ctx,<span class="pl-v">this</span>.<span class="pl-c1">x</span>,<span class="pl-v">this</span>.<span class="pl-c1">y</span> <span class="pl-k">-</span> <span class="pl-v">this</span>.<span class="pl-c1">height</span>/<span class="pl-c1">2</span>,<span class="pl-v">this</span>.<span class="pl-c1">width</span>,<span class="pl-v">this</span>.<span class="pl-c1">height</span>,<span class="pl-v">this</span>.cornerRadius);</div><div class='line js-file-line' id='LC1516'>				<span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-v">this</span>.ctx;</div><div class='line js-file-line' id='LC1517'>				ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.fillColor;</div><div class='line js-file-line' id='LC1518'>				ctx.fill();</div><div class='line js-file-line' id='LC1519'>				ctx.closePath();</div><div class='line js-file-line' id='LC1520'><br></div><div class='line js-file-line' id='LC1521'>				ctx.<span class="pl-c1">textAlign</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1522'>				ctx.textBaseline <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1523'>				ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.titleTextColor;</div><div class='line js-file-line' id='LC1524'>				ctx.font <span class="pl-k">=</span> <span class="pl-v">this</span>.titleFont;</div><div class='line js-file-line' id='LC1525'><br></div><div class='line js-file-line' id='LC1526'>				ctx.fillText(<span class="pl-v">this</span>.<span class="pl-c1">title</span>,<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.xPadding, <span class="pl-v">this</span>.getLineHeight(<span class="pl-c1">0</span>));</div><div class='line js-file-line' id='LC1527'><br></div><div class='line js-file-line' id='LC1528'>				ctx.font <span class="pl-k">=</span> <span class="pl-v">this</span>.font;</div><div class='line js-file-line' id='LC1529'>				helpers.each(<span class="pl-v">this</span>.labels,<span class="pl-k">function</span>(<span class="pl-smi">label</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC1530'>					ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.textColor;</div><div class='line js-file-line' id='LC1531'>					ctx.fillText(label,<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.xPadding <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span> <span class="pl-k">+</span> <span class="pl-c1">3</span>, <span class="pl-v">this</span>.getLineHeight(index <span class="pl-k">+</span> <span class="pl-c1">1</span>));</div><div class='line js-file-line' id='LC1532'><br></div><div class='line js-file-line' id='LC1533'>					<span class="pl-c">//A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)</span></div><div class='line js-file-line' id='LC1534'>					<span class="pl-c">//ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);</span></div><div class='line js-file-line' id='LC1535'>					<span class="pl-c">//Instead we&#39;ll make a white filled block to put the legendColour palette over.</span></div><div class='line js-file-line' id='LC1536'><br></div><div class='line js-file-line' id='LC1537'>					ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.legendColorBackground;</div><div class='line js-file-line' id='LC1538'>					ctx.fillRect(<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.xPadding, <span class="pl-v">this</span>.getLineHeight(index <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">-</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>/<span class="pl-c1">2</span>, <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>, <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>);</div><div class='line js-file-line' id='LC1539'><br></div><div class='line js-file-line' id='LC1540'>					ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.legendColors[index].fill;</div><div class='line js-file-line' id='LC1541'>					ctx.fillRect(<span class="pl-v">this</span>.<span class="pl-c1">x</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.xPadding, <span class="pl-v">this</span>.getLineHeight(index <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">-</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>/<span class="pl-c1">2</span>, <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>, <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>);</div><div class='line js-file-line' id='LC1542'><br></div><div class='line js-file-line' id='LC1543'><br></div><div class='line js-file-line' id='LC1544'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1545'>			}</div><div class='line js-file-line' id='LC1546'>		}</div><div class='line js-file-line' id='LC1547'>	});</div><div class='line js-file-line' id='LC1548'><br></div><div class='line js-file-line' id='LC1549'>	Chart.Scale <span class="pl-k">=</span> Chart.Element.extend({</div><div class='line js-file-line' id='LC1550'>		<span class="pl-en">initialize</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1551'>			<span class="pl-v">this</span>.fit();</div><div class='line js-file-line' id='LC1552'>		},</div><div class='line js-file-line' id='LC1553'>		<span class="pl-en">buildYLabels</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1554'>			<span class="pl-v">this</span>.yLabels <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC1555'><br></div><div class='line js-file-line' id='LC1556'>			<span class="pl-k">var</span> stepDecimalPlaces <span class="pl-k">=</span> getDecimalPlaces(<span class="pl-v">this</span>.stepValue);</div><div class='line js-file-line' id='LC1557'><br></div><div class='line js-file-line' id='LC1558'>			<span class="pl-k">for</span> (<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>; i<span class="pl-k">&lt;=</span><span class="pl-v">this</span>.steps; i<span class="pl-k">++</span>){</div><div class='line js-file-line' id='LC1559'>				<span class="pl-v">this</span>.yLabels.<span class="pl-c1">push</span>(template(<span class="pl-v">this</span>.templateString,{value<span class="pl-k">:</span>(<span class="pl-v">this</span>.min <span class="pl-k">+</span> (i <span class="pl-k">*</span> <span class="pl-v">this</span>.stepValue)).toFixed(stepDecimalPlaces)}));</div><div class='line js-file-line' id='LC1560'>			}</div><div class='line js-file-line' id='LC1561'>			<span class="pl-v">this</span>.yLabelWidth <span class="pl-k">=</span> (<span class="pl-v">this</span>.<span class="pl-c1">display</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>.showLabels) <span class="pl-k">?</span> longestText(<span class="pl-v">this</span>.ctx,<span class="pl-v">this</span>.font,<span class="pl-v">this</span>.yLabels) <span class="pl-k">+</span> <span class="pl-c1">10</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC1562'>		},</div><div class='line js-file-line' id='LC1563'>		<span class="pl-en">addXLabel</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">label</span>){</div><div class='line js-file-line' id='LC1564'>			<span class="pl-v">this</span>.xLabels.<span class="pl-c1">push</span>(label);</div><div class='line js-file-line' id='LC1565'>			<span class="pl-v">this</span>.valuesCount<span class="pl-k">++</span>;</div><div class='line js-file-line' id='LC1566'>			<span class="pl-v">this</span>.fit();</div><div class='line js-file-line' id='LC1567'>		},</div><div class='line js-file-line' id='LC1568'>		<span class="pl-en">removeXLabel</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1569'>			<span class="pl-v">this</span>.xLabels.<span class="pl-c1">shift</span>();</div><div class='line js-file-line' id='LC1570'>			<span class="pl-v">this</span>.valuesCount<span class="pl-k">--</span>;</div><div class='line js-file-line' id='LC1571'>			<span class="pl-v">this</span>.fit();</div><div class='line js-file-line' id='LC1572'>		},</div><div class='line js-file-line' id='LC1573'>		<span class="pl-c">// Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use</span></div><div class='line js-file-line' id='LC1574'>		<span class="pl-en">fit</span><span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1575'>			<span class="pl-c">// First we need the width of the yLabels, assuming the xLabels aren&#39;t rotated</span></div><div class='line js-file-line' id='LC1576'><br></div><div class='line js-file-line' id='LC1577'>			<span class="pl-c">// To do that we need the base line at the top and base of the chart, assuming there is no x label rotation</span></div><div class='line js-file-line' id='LC1578'>			<span class="pl-v">this</span>.startPoint <span class="pl-k">=</span> (<span class="pl-v">this</span>.<span class="pl-c1">display</span>) <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC1579'>			<span class="pl-v">this</span>.endPoint <span class="pl-k">=</span> (<span class="pl-v">this</span>.<span class="pl-c1">display</span>) <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-c1">height</span> <span class="pl-k">-</span> (<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span> <span class="pl-k">*</span> <span class="pl-c1">1.5</span>) <span class="pl-k">-</span> <span class="pl-c1">5</span> <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">height</span>; <span class="pl-c">// -5 to pad labels</span></div><div class='line js-file-line' id='LC1580'><br></div><div class='line js-file-line' id='LC1581'>			<span class="pl-c">// Apply padding settings to the start and end point.</span></div><div class='line js-file-line' id='LC1582'>			<span class="pl-v">this</span>.startPoint <span class="pl-k">+=</span> <span class="pl-v">this</span>.padding;</div><div class='line js-file-line' id='LC1583'>			<span class="pl-v">this</span>.endPoint <span class="pl-k">-=</span> <span class="pl-v">this</span>.padding;</div><div class='line js-file-line' id='LC1584'><br></div><div class='line js-file-line' id='LC1585'>			<span class="pl-c">// Cache the starting endpoint, excluding the space for x labels</span></div><div class='line js-file-line' id='LC1586'>			<span class="pl-k">var</span> cachedEndPoint <span class="pl-k">=</span> <span class="pl-v">this</span>.endPoint;</div><div class='line js-file-line' id='LC1587'><br></div><div class='line js-file-line' id='LC1588'>			<span class="pl-c">// Cache the starting height, so can determine if we need to recalculate the scale yAxis</span></div><div class='line js-file-line' id='LC1589'>			<span class="pl-k">var</span> cachedHeight <span class="pl-k">=</span> <span class="pl-v">this</span>.endPoint <span class="pl-k">-</span> <span class="pl-v">this</span>.startPoint,</div><div class='line js-file-line' id='LC1590'>				cachedYLabelWidth;</div><div class='line js-file-line' id='LC1591'><br></div><div class='line js-file-line' id='LC1592'>			<span class="pl-c">// Build the current yLabels so we have an idea of what size they&#39;ll be to start</span></div><div class='line js-file-line' id='LC1593'>			<span class="pl-c">/*</span></div><div class='line js-file-line' id='LC1594'><span class="pl-c">			 *	This sets what is returned from calculateScaleRange as static properties of this class:</span></div><div class='line js-file-line' id='LC1595'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1596'><span class="pl-c">				this.steps;</span></div><div class='line js-file-line' id='LC1597'><span class="pl-c">				this.stepValue;</span></div><div class='line js-file-line' id='LC1598'><span class="pl-c">				this.min;</span></div><div class='line js-file-line' id='LC1599'><span class="pl-c">				this.max;</span></div><div class='line js-file-line' id='LC1600'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1601'><span class="pl-c">			 */</span></div><div class='line js-file-line' id='LC1602'>			<span class="pl-v">this</span>.calculateYRange(cachedHeight);</div><div class='line js-file-line' id='LC1603'><br></div><div class='line js-file-line' id='LC1604'>			<span class="pl-c">// With these properties set we can now build the array of yLabels</span></div><div class='line js-file-line' id='LC1605'>			<span class="pl-c">// and also the width of the largest yLabel</span></div><div class='line js-file-line' id='LC1606'>			<span class="pl-v">this</span>.buildYLabels();</div><div class='line js-file-line' id='LC1607'><br></div><div class='line js-file-line' id='LC1608'>			<span class="pl-v">this</span>.calculateXLabelRotation();</div><div class='line js-file-line' id='LC1609'><br></div><div class='line js-file-line' id='LC1610'>			<span class="pl-k">while</span>((cachedHeight <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.endPoint <span class="pl-k">-</span> <span class="pl-v">this</span>.startPoint)){</div><div class='line js-file-line' id='LC1611'>				cachedHeight <span class="pl-k">=</span> <span class="pl-v">this</span>.endPoint <span class="pl-k">-</span> <span class="pl-v">this</span>.startPoint;</div><div class='line js-file-line' id='LC1612'>				cachedYLabelWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.yLabelWidth;</div><div class='line js-file-line' id='LC1613'><br></div><div class='line js-file-line' id='LC1614'>				<span class="pl-v">this</span>.calculateYRange(cachedHeight);</div><div class='line js-file-line' id='LC1615'>				<span class="pl-v">this</span>.buildYLabels();</div><div class='line js-file-line' id='LC1616'><br></div><div class='line js-file-line' id='LC1617'>				<span class="pl-c">// Only go through the xLabel loop again if the yLabel width has changed</span></div><div class='line js-file-line' id='LC1618'>				<span class="pl-k">if</span> (cachedYLabelWidth <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.yLabelWidth){</div><div class='line js-file-line' id='LC1619'>					<span class="pl-v">this</span>.endPoint <span class="pl-k">=</span> cachedEndPoint;</div><div class='line js-file-line' id='LC1620'>					<span class="pl-v">this</span>.calculateXLabelRotation();</div><div class='line js-file-line' id='LC1621'>				}</div><div class='line js-file-line' id='LC1622'>			}</div><div class='line js-file-line' id='LC1623'><br></div><div class='line js-file-line' id='LC1624'>		},</div><div class='line js-file-line' id='LC1625'>		<span class="pl-en">calculateXLabelRotation</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1626'>			<span class="pl-c">//Get the width of each grid by calculating the difference</span></div><div class='line js-file-line' id='LC1627'>			<span class="pl-c">//between x offsets between 0 and 1.</span></div><div class='line js-file-line' id='LC1628'><br></div><div class='line js-file-line' id='LC1629'>			<span class="pl-v">this</span>.ctx.font <span class="pl-k">=</span> <span class="pl-v">this</span>.font;</div><div class='line js-file-line' id='LC1630'><br></div><div class='line js-file-line' id='LC1631'>			<span class="pl-k">var</span> firstWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.ctx.measureText(<span class="pl-v">this</span>.xLabels[<span class="pl-c1">0</span>]).<span class="pl-c1">width</span>,</div><div class='line js-file-line' id='LC1632'>				lastWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.ctx.measureText(<span class="pl-v">this</span>.xLabels[<span class="pl-v">this</span>.xLabels.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>]).<span class="pl-c1">width</span>,</div><div class='line js-file-line' id='LC1633'>				firstRotated,</div><div class='line js-file-line' id='LC1634'>				lastRotated;</div><div class='line js-file-line' id='LC1635'><br></div><div class='line js-file-line' id='LC1636'><br></div><div class='line js-file-line' id='LC1637'>			<span class="pl-v">this</span>.xScalePaddingRight <span class="pl-k">=</span> lastWidth/<span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-c1">3</span>;</div><div class='line js-file-line' id='LC1638'>			<span class="pl-v">this</span>.xScalePaddingLeft <span class="pl-k">=</span> (firstWidth/<span class="pl-c1">2</span> <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.yLabelWidth) <span class="pl-k">?</span> firstWidth/<span class="pl-c1">2</span> <span class="pl-k">:</span> <span class="pl-v">this</span>.yLabelWidth;</div><div class='line js-file-line' id='LC1639'><br></div><div class='line js-file-line' id='LC1640'>			<span class="pl-v">this</span>.xLabelRotation <span class="pl-k">=</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC1641'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">display</span>){</div><div class='line js-file-line' id='LC1642'>				<span class="pl-k">var</span> originalLabelWidth <span class="pl-k">=</span> longestText(<span class="pl-v">this</span>.ctx,<span class="pl-v">this</span>.font,<span class="pl-v">this</span>.xLabels),</div><div class='line js-file-line' id='LC1643'>					cosRotation,</div><div class='line js-file-line' id='LC1644'>					firstRotatedWidth;</div><div class='line js-file-line' id='LC1645'>				<span class="pl-v">this</span>.xLabelWidth <span class="pl-k">=</span> originalLabelWidth;</div><div class='line js-file-line' id='LC1646'>				<span class="pl-c">//Allow 3 pixels x2 padding either side for label readability</span></div><div class='line js-file-line' id='LC1647'>				<span class="pl-k">var</span> xGridWidth <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-v">this</span>.calculateX(<span class="pl-c1">1</span>) <span class="pl-k">-</span> <span class="pl-v">this</span>.calculateX(<span class="pl-c1">0</span>)) <span class="pl-k">-</span> <span class="pl-c1">6</span>;</div><div class='line js-file-line' id='LC1648'><br></div><div class='line js-file-line' id='LC1649'>				<span class="pl-c">//Max label rotate should be 90 - also act as a loop counter</span></div><div class='line js-file-line' id='LC1650'>				<span class="pl-k">while</span> ((<span class="pl-v">this</span>.xLabelWidth <span class="pl-k">&gt;</span> xGridWidth <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>.xLabelRotation <span class="pl-k">===</span> <span class="pl-c1">0</span>) <span class="pl-k">||</span> (<span class="pl-v">this</span>.xLabelWidth <span class="pl-k">&gt;</span> xGridWidth <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>.xLabelRotation <span class="pl-k">&lt;=</span> <span class="pl-c1">90</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-v">this</span>.xLabelRotation <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>)){</div><div class='line js-file-line' id='LC1651'>					cosRotation <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(toRadians(<span class="pl-v">this</span>.xLabelRotation));</div><div class='line js-file-line' id='LC1652'><br></div><div class='line js-file-line' id='LC1653'>					firstRotated <span class="pl-k">=</span> cosRotation <span class="pl-k">*</span> firstWidth;</div><div class='line js-file-line' id='LC1654'>					lastRotated <span class="pl-k">=</span> cosRotation <span class="pl-k">*</span> lastWidth;</div><div class='line js-file-line' id='LC1655'><br></div><div class='line js-file-line' id='LC1656'>					<span class="pl-c">// We&#39;re right aligning the text now.</span></div><div class='line js-file-line' id='LC1657'>					<span class="pl-k">if</span> (firstRotated <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span> / <span class="pl-c1">2</span> <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.yLabelWidth){</div><div class='line js-file-line' id='LC1658'>						<span class="pl-v">this</span>.xScalePaddingLeft <span class="pl-k">=</span> firstRotated <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span> / <span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC1659'>					}</div><div class='line js-file-line' id='LC1660'>					<span class="pl-v">this</span>.xScalePaddingRight <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>/<span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC1661'><br></div><div class='line js-file-line' id='LC1662'><br></div><div class='line js-file-line' id='LC1663'>					<span class="pl-v">this</span>.xLabelRotation<span class="pl-k">++</span>;</div><div class='line js-file-line' id='LC1664'>					<span class="pl-v">this</span>.xLabelWidth <span class="pl-k">=</span> cosRotation <span class="pl-k">*</span> originalLabelWidth;</div><div class='line js-file-line' id='LC1665'><br></div><div class='line js-file-line' id='LC1666'>				}</div><div class='line js-file-line' id='LC1667'>				<span class="pl-k">if</span> (<span class="pl-v">this</span>.xLabelRotation <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC1668'>					<span class="pl-v">this</span>.endPoint <span class="pl-k">-=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(toRadians(<span class="pl-v">this</span>.xLabelRotation))<span class="pl-k">*</span>originalLabelWidth <span class="pl-k">+</span> <span class="pl-c1">3</span>;</div><div class='line js-file-line' id='LC1669'>				}</div><div class='line js-file-line' id='LC1670'>			}</div><div class='line js-file-line' id='LC1671'>			<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC1672'>				<span class="pl-v">this</span>.xLabelWidth <span class="pl-k">=</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC1673'>				<span class="pl-v">this</span>.xScalePaddingRight <span class="pl-k">=</span> <span class="pl-v">this</span>.padding;</div><div class='line js-file-line' id='LC1674'>				<span class="pl-v">this</span>.xScalePaddingLeft <span class="pl-k">=</span> <span class="pl-v">this</span>.padding;</div><div class='line js-file-line' id='LC1675'>			}</div><div class='line js-file-line' id='LC1676'><br></div><div class='line js-file-line' id='LC1677'>		},</div><div class='line js-file-line' id='LC1678'>		<span class="pl-c">// Needs to be overidden in each Chart type</span></div><div class='line js-file-line' id='LC1679'>		<span class="pl-c">// Otherwise we need to pass all the data into the scale class</span></div><div class='line js-file-line' id='LC1680'>		calculateYRange<span class="pl-k">:</span> noop,</div><div class='line js-file-line' id='LC1681'>		<span class="pl-en">drawingArea</span><span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1682'>			<span class="pl-k">return</span> <span class="pl-v">this</span>.startPoint <span class="pl-k">-</span> <span class="pl-v">this</span>.endPoint;</div><div class='line js-file-line' id='LC1683'>		},</div><div class='line js-file-line' id='LC1684'>		<span class="pl-en">calculateY</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>){</div><div class='line js-file-line' id='LC1685'>			<span class="pl-k">var</span> scalingFactor <span class="pl-k">=</span> <span class="pl-v">this</span>.drawingArea() / (<span class="pl-v">this</span>.min <span class="pl-k">-</span> <span class="pl-v">this</span>.max);</div><div class='line js-file-line' id='LC1686'>			<span class="pl-k">return</span> <span class="pl-v">this</span>.endPoint <span class="pl-k">-</span> (scalingFactor <span class="pl-k">*</span> (value <span class="pl-k">-</span> <span class="pl-v">this</span>.min));</div><div class='line js-file-line' id='LC1687'>		},</div><div class='line js-file-line' id='LC1688'>		<span class="pl-en">calculateX</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC1689'>			<span class="pl-k">var</span> isRotated <span class="pl-k">=</span> (<span class="pl-v">this</span>.xLabelRotation <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>),</div><div class='line js-file-line' id='LC1690'>				<span class="pl-c">// innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,</span></div><div class='line js-file-line' id='LC1691'>				innerWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span> <span class="pl-k">-</span> (<span class="pl-v">this</span>.xScalePaddingLeft <span class="pl-k">+</span> <span class="pl-v">this</span>.xScalePaddingRight),</div><div class='line js-file-line' id='LC1692'>				valueWidth <span class="pl-k">=</span> innerWidth/<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>((<span class="pl-v">this</span>.valuesCount <span class="pl-k">-</span> ((<span class="pl-v">this</span>.offsetGridLines) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>)), <span class="pl-c1">1</span>),</div><div class='line js-file-line' id='LC1693'>				valueOffset <span class="pl-k">=</span> (valueWidth <span class="pl-k">*</span> index) <span class="pl-k">+</span> <span class="pl-v">this</span>.xScalePaddingLeft;</div><div class='line js-file-line' id='LC1694'><br></div><div class='line js-file-line' id='LC1695'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.offsetGridLines){</div><div class='line js-file-line' id='LC1696'>				valueOffset <span class="pl-k">+=</span> (valueWidth/<span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1697'>			}</div><div class='line js-file-line' id='LC1698'><br></div><div class='line js-file-line' id='LC1699'>			<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(valueOffset);</div><div class='line js-file-line' id='LC1700'>		},</div><div class='line js-file-line' id='LC1701'>		<span class="pl-en">update</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">newProps</span>){</div><div class='line js-file-line' id='LC1702'>			helpers.extend(<span class="pl-v">this</span>, newProps);</div><div class='line js-file-line' id='LC1703'>			<span class="pl-v">this</span>.fit();</div><div class='line js-file-line' id='LC1704'>		},</div><div class='line js-file-line' id='LC1705'>		<span class="pl-en">draw</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1706'>			<span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-v">this</span>.ctx,</div><div class='line js-file-line' id='LC1707'>				yLabelGap <span class="pl-k">=</span> (<span class="pl-v">this</span>.endPoint <span class="pl-k">-</span> <span class="pl-v">this</span>.startPoint) / <span class="pl-v">this</span>.steps,</div><div class='line js-file-line' id='LC1708'>				xStart <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-v">this</span>.xScalePaddingLeft);</div><div class='line js-file-line' id='LC1709'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">display</span>){</div><div class='line js-file-line' id='LC1710'>				ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.textColor;</div><div class='line js-file-line' id='LC1711'>				ctx.font <span class="pl-k">=</span> <span class="pl-v">this</span>.font;</div><div class='line js-file-line' id='LC1712'>				each(<span class="pl-v">this</span>.yLabels,<span class="pl-k">function</span>(<span class="pl-smi">labelString</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC1713'>					<span class="pl-k">var</span> yLabelCenter <span class="pl-k">=</span> <span class="pl-v">this</span>.endPoint <span class="pl-k">-</span> (yLabelGap <span class="pl-k">*</span> index),</div><div class='line js-file-line' id='LC1714'>						linePositionY <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(yLabelCenter),</div><div class='line js-file-line' id='LC1715'>						drawHorizontalLine <span class="pl-k">=</span> <span class="pl-v">this</span>.showHorizontalLines;</div><div class='line js-file-line' id='LC1716'><br></div><div class='line js-file-line' id='LC1717'>					ctx.<span class="pl-c1">textAlign</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1718'>					ctx.textBaseline <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1719'>					<span class="pl-k">if</span> (<span class="pl-v">this</span>.showLabels){</div><div class='line js-file-line' id='LC1720'>						ctx.fillText(labelString,xStart <span class="pl-k">-</span> <span class="pl-c1">10</span>,yLabelCenter);</div><div class='line js-file-line' id='LC1721'>					}</div><div class='line js-file-line' id='LC1722'><br></div><div class='line js-file-line' id='LC1723'>					<span class="pl-c">// This is X axis, so draw it</span></div><div class='line js-file-line' id='LC1724'>					<span class="pl-k">if</span> (index <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>drawHorizontalLine){</div><div class='line js-file-line' id='LC1725'>						drawHorizontalLine <span class="pl-k">=</span> <span class="pl-c1">true</span>;</div><div class='line js-file-line' id='LC1726'>					}</div><div class='line js-file-line' id='LC1727'><br></div><div class='line js-file-line' id='LC1728'>					<span class="pl-k">if</span> (drawHorizontalLine){</div><div class='line js-file-line' id='LC1729'>						ctx.beginPath();</div><div class='line js-file-line' id='LC1730'>					}</div><div class='line js-file-line' id='LC1731'><br></div><div class='line js-file-line' id='LC1732'>					<span class="pl-k">if</span> (index <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC1733'>						<span class="pl-c">// This is a grid line in the centre, so drop that</span></div><div class='line js-file-line' id='LC1734'>						ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.gridLineWidth;</div><div class='line js-file-line' id='LC1735'>						ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.gridLineColor;</div><div class='line js-file-line' id='LC1736'>					} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC1737'>						<span class="pl-c">// This is the first line on the scale</span></div><div class='line js-file-line' id='LC1738'>						ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.lineWidth;</div><div class='line js-file-line' id='LC1739'>						ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.lineColor;</div><div class='line js-file-line' id='LC1740'>					}</div><div class='line js-file-line' id='LC1741'><br></div><div class='line js-file-line' id='LC1742'>					linePositionY <span class="pl-k">+=</span> helpers.aliasPixel(ctx.lineWidth);</div><div class='line js-file-line' id='LC1743'><br></div><div class='line js-file-line' id='LC1744'>					<span class="pl-k">if</span>(drawHorizontalLine){</div><div class='line js-file-line' id='LC1745'>						ctx.<span class="pl-c1">moveTo</span>(xStart, linePositionY);</div><div class='line js-file-line' id='LC1746'>						ctx.lineTo(<span class="pl-v">this</span>.<span class="pl-c1">width</span>, linePositionY);</div><div class='line js-file-line' id='LC1747'>						ctx.stroke();</div><div class='line js-file-line' id='LC1748'>						ctx.closePath();</div><div class='line js-file-line' id='LC1749'>					}</div><div class='line js-file-line' id='LC1750'><br></div><div class='line js-file-line' id='LC1751'>					ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.lineWidth;</div><div class='line js-file-line' id='LC1752'>					ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.lineColor;</div><div class='line js-file-line' id='LC1753'>					ctx.beginPath();</div><div class='line js-file-line' id='LC1754'>					ctx.<span class="pl-c1">moveTo</span>(xStart <span class="pl-k">-</span> <span class="pl-c1">5</span>, linePositionY);</div><div class='line js-file-line' id='LC1755'>					ctx.lineTo(xStart, linePositionY);</div><div class='line js-file-line' id='LC1756'>					ctx.stroke();</div><div class='line js-file-line' id='LC1757'>					ctx.closePath();</div><div class='line js-file-line' id='LC1758'><br></div><div class='line js-file-line' id='LC1759'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1760'><br></div><div class='line js-file-line' id='LC1761'>				each(<span class="pl-v">this</span>.xLabels,<span class="pl-k">function</span>(<span class="pl-smi">label</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC1762'>					<span class="pl-k">var</span> xPos <span class="pl-k">=</span> <span class="pl-v">this</span>.calculateX(index) <span class="pl-k">+</span> aliasPixel(<span class="pl-v">this</span>.lineWidth),</div><div class='line js-file-line' id='LC1763'>						<span class="pl-c">// Check to see if line/bar here and decide where to place the line</span></div><div class='line js-file-line' id='LC1764'>						linePos <span class="pl-k">=</span> <span class="pl-v">this</span>.calculateX(index <span class="pl-k">-</span> (<span class="pl-v">this</span>.offsetGridLines <span class="pl-k">?</span> <span class="pl-c1">0.5</span> <span class="pl-k">:</span> <span class="pl-c1">0</span>)) <span class="pl-k">+</span> aliasPixel(<span class="pl-v">this</span>.lineWidth),</div><div class='line js-file-line' id='LC1765'>						isRotated <span class="pl-k">=</span> (<span class="pl-v">this</span>.xLabelRotation <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>),</div><div class='line js-file-line' id='LC1766'>						drawVerticalLine <span class="pl-k">=</span> <span class="pl-v">this</span>.showVerticalLines;</div><div class='line js-file-line' id='LC1767'><br></div><div class='line js-file-line' id='LC1768'>					<span class="pl-c">// This is Y axis, so draw it</span></div><div class='line js-file-line' id='LC1769'>					<span class="pl-k">if</span> (index <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>drawVerticalLine){</div><div class='line js-file-line' id='LC1770'>						drawVerticalLine <span class="pl-k">=</span> <span class="pl-c1">true</span>;</div><div class='line js-file-line' id='LC1771'>					}</div><div class='line js-file-line' id='LC1772'><br></div><div class='line js-file-line' id='LC1773'>					<span class="pl-k">if</span> (drawVerticalLine){</div><div class='line js-file-line' id='LC1774'>						ctx.beginPath();</div><div class='line js-file-line' id='LC1775'>					}</div><div class='line js-file-line' id='LC1776'><br></div><div class='line js-file-line' id='LC1777'>					<span class="pl-k">if</span> (index <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC1778'>						<span class="pl-c">// This is a grid line in the centre, so drop that</span></div><div class='line js-file-line' id='LC1779'>						ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.gridLineWidth;</div><div class='line js-file-line' id='LC1780'>						ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.gridLineColor;</div><div class='line js-file-line' id='LC1781'>					} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC1782'>						<span class="pl-c">// This is the first line on the scale</span></div><div class='line js-file-line' id='LC1783'>						ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.lineWidth;</div><div class='line js-file-line' id='LC1784'>						ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.lineColor;</div><div class='line js-file-line' id='LC1785'>					}</div><div class='line js-file-line' id='LC1786'><br></div><div class='line js-file-line' id='LC1787'>					<span class="pl-k">if</span> (drawVerticalLine){</div><div class='line js-file-line' id='LC1788'>						ctx.<span class="pl-c1">moveTo</span>(linePos,<span class="pl-v">this</span>.endPoint);</div><div class='line js-file-line' id='LC1789'>						ctx.lineTo(linePos,<span class="pl-v">this</span>.startPoint <span class="pl-k">-</span> <span class="pl-c1">3</span>);</div><div class='line js-file-line' id='LC1790'>						ctx.stroke();</div><div class='line js-file-line' id='LC1791'>						ctx.closePath();</div><div class='line js-file-line' id='LC1792'>					}</div><div class='line js-file-line' id='LC1793'><br></div><div class='line js-file-line' id='LC1794'><br></div><div class='line js-file-line' id='LC1795'>					ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.lineWidth;</div><div class='line js-file-line' id='LC1796'>					ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.lineColor;</div><div class='line js-file-line' id='LC1797'><br></div><div class='line js-file-line' id='LC1798'><br></div><div class='line js-file-line' id='LC1799'>					<span class="pl-c">// Small lines at the bottom of the base grid line</span></div><div class='line js-file-line' id='LC1800'>					ctx.beginPath();</div><div class='line js-file-line' id='LC1801'>					ctx.<span class="pl-c1">moveTo</span>(linePos,<span class="pl-v">this</span>.endPoint);</div><div class='line js-file-line' id='LC1802'>					ctx.lineTo(linePos,<span class="pl-v">this</span>.endPoint <span class="pl-k">+</span> <span class="pl-c1">5</span>);</div><div class='line js-file-line' id='LC1803'>					ctx.stroke();</div><div class='line js-file-line' id='LC1804'>					ctx.closePath();</div><div class='line js-file-line' id='LC1805'><br></div><div class='line js-file-line' id='LC1806'>					ctx.save();</div><div class='line js-file-line' id='LC1807'>					ctx.translate(xPos,(isRotated) <span class="pl-k">?</span> <span class="pl-v">this</span>.endPoint <span class="pl-k">+</span> <span class="pl-c1">12</span> <span class="pl-k">:</span> <span class="pl-v">this</span>.endPoint <span class="pl-k">+</span> <span class="pl-c1">8</span>);</div><div class='line js-file-line' id='LC1808'>					ctx.rotate(toRadians(<span class="pl-v">this</span>.xLabelRotation)<span class="pl-k">*-</span><span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC1809'>					ctx.font <span class="pl-k">=</span> <span class="pl-v">this</span>.font;</div><div class='line js-file-line' id='LC1810'>					ctx.<span class="pl-c1">textAlign</span> <span class="pl-k">=</span> (isRotated) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>right<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>center<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1811'>					ctx.textBaseline <span class="pl-k">=</span> (isRotated) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC1812'>					ctx.fillText(label, <span class="pl-c1">0</span>, <span class="pl-c1">0</span>);</div><div class='line js-file-line' id='LC1813'>					ctx.restore();</div><div class='line js-file-line' id='LC1814'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC1815'><br></div><div class='line js-file-line' id='LC1816'>			}</div><div class='line js-file-line' id='LC1817'>		}</div><div class='line js-file-line' id='LC1818'><br></div><div class='line js-file-line' id='LC1819'>	});</div><div class='line js-file-line' id='LC1820'><br></div><div class='line js-file-line' id='LC1821'>	Chart.RadialScale <span class="pl-k">=</span> Chart.Element.extend({</div><div class='line js-file-line' id='LC1822'>		<span class="pl-en">initialize</span><span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1823'>			<span class="pl-v">this</span>.<span class="pl-c1">size</span> <span class="pl-k">=</span> <span class="pl-c1">min</span>([<span class="pl-v">this</span>.<span class="pl-c1">height</span>, <span class="pl-v">this</span>.<span class="pl-c1">width</span>]);</div><div class='line js-file-line' id='LC1824'>			<span class="pl-v">this</span>.drawingArea <span class="pl-k">=</span> (<span class="pl-v">this</span>.<span class="pl-c1">display</span>) <span class="pl-k">?</span> (<span class="pl-v">this</span>.<span class="pl-c1">size</span>/<span class="pl-c1">2</span>) <span class="pl-k">-</span> (<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>/<span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.backdropPaddingY) <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">size</span>/<span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1825'>		},</div><div class='line js-file-line' id='LC1826'>		<span class="pl-en">calculateCenterOffset</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>){</div><div class='line js-file-line' id='LC1827'>			<span class="pl-c">// Take into account half font size + the yPadding of the top value</span></div><div class='line js-file-line' id='LC1828'>			<span class="pl-k">var</span> scalingFactor <span class="pl-k">=</span> <span class="pl-v">this</span>.drawingArea / (<span class="pl-v">this</span>.max <span class="pl-k">-</span> <span class="pl-v">this</span>.min);</div><div class='line js-file-line' id='LC1829'><br></div><div class='line js-file-line' id='LC1830'>			<span class="pl-k">return</span> (value <span class="pl-k">-</span> <span class="pl-v">this</span>.min) <span class="pl-k">*</span> scalingFactor;</div><div class='line js-file-line' id='LC1831'>		},</div><div class='line js-file-line' id='LC1832'>		<span class="pl-en">update</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1833'>			<span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-v">this</span>.lineArc){</div><div class='line js-file-line' id='LC1834'>				<span class="pl-v">this</span>.setScaleSize();</div><div class='line js-file-line' id='LC1835'>			} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC1836'>				<span class="pl-v">this</span>.drawingArea <span class="pl-k">=</span> (<span class="pl-v">this</span>.<span class="pl-c1">display</span>) <span class="pl-k">?</span> (<span class="pl-v">this</span>.<span class="pl-c1">size</span>/<span class="pl-c1">2</span>) <span class="pl-k">-</span> (<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>/<span class="pl-c1">2</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.backdropPaddingY) <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">size</span>/<span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1837'>			}</div><div class='line js-file-line' id='LC1838'>			<span class="pl-v">this</span>.buildYLabels();</div><div class='line js-file-line' id='LC1839'>		},</div><div class='line js-file-line' id='LC1840'>		<span class="pl-en">buildYLabels</span><span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1841'>			<span class="pl-v">this</span>.yLabels <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC1842'><br></div><div class='line js-file-line' id='LC1843'>			<span class="pl-k">var</span> stepDecimalPlaces <span class="pl-k">=</span> getDecimalPlaces(<span class="pl-v">this</span>.stepValue);</div><div class='line js-file-line' id='LC1844'><br></div><div class='line js-file-line' id='LC1845'>			<span class="pl-k">for</span> (<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>; i<span class="pl-k">&lt;=</span><span class="pl-v">this</span>.steps; i<span class="pl-k">++</span>){</div><div class='line js-file-line' id='LC1846'>				<span class="pl-v">this</span>.yLabels.<span class="pl-c1">push</span>(template(<span class="pl-v">this</span>.templateString,{value<span class="pl-k">:</span>(<span class="pl-v">this</span>.min <span class="pl-k">+</span> (i <span class="pl-k">*</span> <span class="pl-v">this</span>.stepValue)).toFixed(stepDecimalPlaces)}));</div><div class='line js-file-line' id='LC1847'>			}</div><div class='line js-file-line' id='LC1848'>		},</div><div class='line js-file-line' id='LC1849'>		<span class="pl-en">getCircumference</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1850'>			<span class="pl-k">return</span> ((<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">*</span><span class="pl-c1">2</span>) / <span class="pl-v">this</span>.valuesCount);</div><div class='line js-file-line' id='LC1851'>		},</div><div class='line js-file-line' id='LC1852'>		<span class="pl-en">setScaleSize</span><span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1853'>			<span class="pl-c">/*</span></div><div class='line js-file-line' id='LC1854'><span class="pl-c">			 * Right, this is really confusing and there is a lot of maths going on here</span></div><div class='line js-file-line' id='LC1855'><span class="pl-c">			 * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9</span></div><div class='line js-file-line' id='LC1856'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1857'><span class="pl-c">			 * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif</span></div><div class='line js-file-line' id='LC1858'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1859'><span class="pl-c">			 * Solution:</span></div><div class='line js-file-line' id='LC1860'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1861'><span class="pl-c">			 * We assume the radius of the polygon is half the size of the canvas at first</span></div><div class='line js-file-line' id='LC1862'><span class="pl-c">			 * at each index we check if the text overlaps.</span></div><div class='line js-file-line' id='LC1863'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1864'><span class="pl-c">			 * Where it does, we store that angle and that index.</span></div><div class='line js-file-line' id='LC1865'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1866'><span class="pl-c">			 * After finding the largest index and angle we calculate how much we need to remove</span></div><div class='line js-file-line' id='LC1867'><span class="pl-c">			 * from the shape radius to move the point inwards by that x.</span></div><div class='line js-file-line' id='LC1868'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1869'><span class="pl-c">			 * We average the left and right distances to get the maximum shape radius that can fit in the box</span></div><div class='line js-file-line' id='LC1870'><span class="pl-c">			 * along with labels.</span></div><div class='line js-file-line' id='LC1871'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1872'><span class="pl-c">			 * Once we have that, we can find the centre point for the chart, by taking the x text protrusion</span></div><div class='line js-file-line' id='LC1873'><span class="pl-c">			 * on each side, removing that from the size, halving it and adding the left x protrusion width.</span></div><div class='line js-file-line' id='LC1874'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1875'><span class="pl-c">			 * This will mean we have a shape fitted to the canvas, as large as it can be with the labels</span></div><div class='line js-file-line' id='LC1876'><span class="pl-c">			 * and position it in the most space efficient manner</span></div><div class='line js-file-line' id='LC1877'><span class="pl-c">			 *</span></div><div class='line js-file-line' id='LC1878'><span class="pl-c">			 * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif</span></div><div class='line js-file-line' id='LC1879'><span class="pl-c">			 */</span></div><div class='line js-file-line' id='LC1880'><br></div><div class='line js-file-line' id='LC1881'><br></div><div class='line js-file-line' id='LC1882'>			<span class="pl-c">// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.</span></div><div class='line js-file-line' id='LC1883'>			<span class="pl-c">// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points</span></div><div class='line js-file-line' id='LC1884'>			<span class="pl-k">var</span> largestPossibleRadius <span class="pl-k">=</span> <span class="pl-c1">min</span>([(<span class="pl-v">this</span>.<span class="pl-c1">height</span>/<span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-v">this</span>.pointLabelFontSize <span class="pl-k">-</span> <span class="pl-c1">5</span>), <span class="pl-v">this</span>.<span class="pl-c1">width</span>/<span class="pl-c1">2</span>]),</div><div class='line js-file-line' id='LC1885'>				pointPosition,</div><div class='line js-file-line' id='LC1886'>				i,</div><div class='line js-file-line' id='LC1887'>				textWidth,</div><div class='line js-file-line' id='LC1888'>				halfTextWidth,</div><div class='line js-file-line' id='LC1889'>				furthestRight <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span>,</div><div class='line js-file-line' id='LC1890'>				furthestRightIndex,</div><div class='line js-file-line' id='LC1891'>				furthestRightAngle,</div><div class='line js-file-line' id='LC1892'>				furthestLeft <span class="pl-k">=</span> <span class="pl-c1">0</span>,</div><div class='line js-file-line' id='LC1893'>				furthestLeftIndex,</div><div class='line js-file-line' id='LC1894'>				furthestLeftAngle,</div><div class='line js-file-line' id='LC1895'>				xProtrusionLeft,</div><div class='line js-file-line' id='LC1896'>				xProtrusionRight,</div><div class='line js-file-line' id='LC1897'>				radiusReductionRight,</div><div class='line js-file-line' id='LC1898'>				radiusReductionLeft,</div><div class='line js-file-line' id='LC1899'>				maxWidthRadius;</div><div class='line js-file-line' id='LC1900'>			<span class="pl-v">this</span>.ctx.font <span class="pl-k">=</span> fontString(<span class="pl-v">this</span>.pointLabelFontSize,<span class="pl-v">this</span>.pointLabelFontStyle,<span class="pl-v">this</span>.pointLabelFontFamily);</div><div class='line js-file-line' id='LC1901'>			<span class="pl-k">for</span> (i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-v">this</span>.valuesCount;i<span class="pl-k">++</span>){</div><div class='line js-file-line' id='LC1902'>				<span class="pl-c">// 5px to space the text slightly out - similar to what we do in the draw function.</span></div><div class='line js-file-line' id='LC1903'>				pointPosition <span class="pl-k">=</span> <span class="pl-v">this</span>.getPointPosition(i, largestPossibleRadius);</div><div class='line js-file-line' id='LC1904'>				textWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.ctx.measureText(template(<span class="pl-v">this</span>.templateString, { value<span class="pl-k">:</span> <span class="pl-v">this</span>.labels[i] })).<span class="pl-c1">width</span> <span class="pl-k">+</span> <span class="pl-c1">5</span>;</div><div class='line js-file-line' id='LC1905'>				<span class="pl-k">if</span> (i <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> i <span class="pl-k">===</span> <span class="pl-v">this</span>.valuesCount/<span class="pl-c1">2</span>){</div><div class='line js-file-line' id='LC1906'>					<span class="pl-c">// If we&#39;re at index zero, or exactly the middle, we&#39;re at exactly the top/bottom</span></div><div class='line js-file-line' id='LC1907'>					<span class="pl-c">// of the radar chart, so text will be aligned centrally, so we&#39;ll half it and compare</span></div><div class='line js-file-line' id='LC1908'>					<span class="pl-c">// w/left and right text sizes</span></div><div class='line js-file-line' id='LC1909'>					halfTextWidth <span class="pl-k">=</span> textWidth/<span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC1910'>					<span class="pl-k">if</span> (pointPosition.<span class="pl-c1">x</span> <span class="pl-k">+</span> halfTextWidth <span class="pl-k">&gt;</span> furthestRight) {</div><div class='line js-file-line' id='LC1911'>						furthestRight <span class="pl-k">=</span> pointPosition.<span class="pl-c1">x</span> <span class="pl-k">+</span> halfTextWidth;</div><div class='line js-file-line' id='LC1912'>						furthestRightIndex <span class="pl-k">=</span> i;</div><div class='line js-file-line' id='LC1913'>					}</div><div class='line js-file-line' id='LC1914'>					<span class="pl-k">if</span> (pointPosition.<span class="pl-c1">x</span> <span class="pl-k">-</span> halfTextWidth <span class="pl-k">&lt;</span> furthestLeft) {</div><div class='line js-file-line' id='LC1915'>						furthestLeft <span class="pl-k">=</span> pointPosition.<span class="pl-c1">x</span> <span class="pl-k">-</span> halfTextWidth;</div><div class='line js-file-line' id='LC1916'>						furthestLeftIndex <span class="pl-k">=</span> i;</div><div class='line js-file-line' id='LC1917'>					}</div><div class='line js-file-line' id='LC1918'>				}</div><div class='line js-file-line' id='LC1919'>				<span class="pl-k">else</span> <span class="pl-k">if</span> (i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.valuesCount/<span class="pl-c1">2</span>) {</div><div class='line js-file-line' id='LC1920'>					<span class="pl-c">// Less than half the values means we&#39;ll left align the text</span></div><div class='line js-file-line' id='LC1921'>					<span class="pl-k">if</span> (pointPosition.<span class="pl-c1">x</span> <span class="pl-k">+</span> textWidth <span class="pl-k">&gt;</span> furthestRight) {</div><div class='line js-file-line' id='LC1922'>						furthestRight <span class="pl-k">=</span> pointPosition.<span class="pl-c1">x</span> <span class="pl-k">+</span> textWidth;</div><div class='line js-file-line' id='LC1923'>						furthestRightIndex <span class="pl-k">=</span> i;</div><div class='line js-file-line' id='LC1924'>					}</div><div class='line js-file-line' id='LC1925'>				}</div><div class='line js-file-line' id='LC1926'>				<span class="pl-k">else</span> <span class="pl-k">if</span> (i <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.valuesCount/<span class="pl-c1">2</span>){</div><div class='line js-file-line' id='LC1927'>					<span class="pl-c">// More than half the values means we&#39;ll right align the text</span></div><div class='line js-file-line' id='LC1928'>					<span class="pl-k">if</span> (pointPosition.<span class="pl-c1">x</span> <span class="pl-k">-</span> textWidth <span class="pl-k">&lt;</span> furthestLeft) {</div><div class='line js-file-line' id='LC1929'>						furthestLeft <span class="pl-k">=</span> pointPosition.<span class="pl-c1">x</span> <span class="pl-k">-</span> textWidth;</div><div class='line js-file-line' id='LC1930'>						furthestLeftIndex <span class="pl-k">=</span> i;</div><div class='line js-file-line' id='LC1931'>					}</div><div class='line js-file-line' id='LC1932'>				}</div><div class='line js-file-line' id='LC1933'>			}</div><div class='line js-file-line' id='LC1934'><br></div><div class='line js-file-line' id='LC1935'>			xProtrusionLeft <span class="pl-k">=</span> furthestLeft;</div><div class='line js-file-line' id='LC1936'><br></div><div class='line js-file-line' id='LC1937'>			xProtrusionRight <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(furthestRight <span class="pl-k">-</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span>);</div><div class='line js-file-line' id='LC1938'><br></div><div class='line js-file-line' id='LC1939'>			furthestRightAngle <span class="pl-k">=</span> <span class="pl-v">this</span>.getIndexAngle(furthestRightIndex);</div><div class='line js-file-line' id='LC1940'><br></div><div class='line js-file-line' id='LC1941'>			furthestLeftAngle <span class="pl-k">=</span> <span class="pl-v">this</span>.getIndexAngle(furthestLeftIndex);</div><div class='line js-file-line' id='LC1942'><br></div><div class='line js-file-line' id='LC1943'>			radiusReductionRight <span class="pl-k">=</span> xProtrusionRight / <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(furthestRightAngle <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>/<span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1944'><br></div><div class='line js-file-line' id='LC1945'>			radiusReductionLeft <span class="pl-k">=</span> xProtrusionLeft / <span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(furthestLeftAngle <span class="pl-k">+</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>/<span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1946'><br></div><div class='line js-file-line' id='LC1947'>			<span class="pl-c">// Ensure we actually need to reduce the size of the chart</span></div><div class='line js-file-line' id='LC1948'>			radiusReductionRight <span class="pl-k">=</span> (isNumber(radiusReductionRight)) <span class="pl-k">?</span> radiusReductionRight <span class="pl-k">:</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC1949'>			radiusReductionLeft <span class="pl-k">=</span> (isNumber(radiusReductionLeft)) <span class="pl-k">?</span> radiusReductionLeft <span class="pl-k">:</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC1950'><br></div><div class='line js-file-line' id='LC1951'>			<span class="pl-v">this</span>.drawingArea <span class="pl-k">=</span> largestPossibleRadius <span class="pl-k">-</span> (radiusReductionLeft <span class="pl-k">+</span> radiusReductionRight)/<span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC1952'><br></div><div class='line js-file-line' id='LC1953'>			<span class="pl-c">//this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])</span></div><div class='line js-file-line' id='LC1954'>			<span class="pl-v">this</span>.setCenterPoint(radiusReductionLeft, radiusReductionRight);</div><div class='line js-file-line' id='LC1955'><br></div><div class='line js-file-line' id='LC1956'>		},</div><div class='line js-file-line' id='LC1957'>		<span class="pl-en">setCenterPoint</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">leftMovement</span>, <span class="pl-smi">rightMovement</span>){</div><div class='line js-file-line' id='LC1958'><br></div><div class='line js-file-line' id='LC1959'>			<span class="pl-k">var</span> maxRight <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">width</span> <span class="pl-k">-</span> rightMovement <span class="pl-k">-</span> <span class="pl-v">this</span>.drawingArea,</div><div class='line js-file-line' id='LC1960'>				maxLeft <span class="pl-k">=</span> leftMovement <span class="pl-k">+</span> <span class="pl-v">this</span>.drawingArea;</div><div class='line js-file-line' id='LC1961'><br></div><div class='line js-file-line' id='LC1962'>			<span class="pl-v">this</span>.xCenter <span class="pl-k">=</span> (maxLeft <span class="pl-k">+</span> maxRight)/<span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC1963'>			<span class="pl-c">// Always vertically in the centre as the text height doesn&#39;t change</span></div><div class='line js-file-line' id='LC1964'>			<span class="pl-v">this</span>.yCenter <span class="pl-k">=</span> (<span class="pl-v">this</span>.<span class="pl-c1">height</span>/<span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1965'>		},</div><div class='line js-file-line' id='LC1966'><br></div><div class='line js-file-line' id='LC1967'>		<span class="pl-en">getIndexAngle</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC1968'>			<span class="pl-k">var</span> angleMultiplier <span class="pl-k">=</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> <span class="pl-k">*</span> <span class="pl-c1">2</span>) / <span class="pl-v">this</span>.valuesCount;</div><div class='line js-file-line' id='LC1969'>			<span class="pl-c">// Start from the top instead of right, so remove a quarter of the circle</span></div><div class='line js-file-line' id='LC1970'><br></div><div class='line js-file-line' id='LC1971'>			<span class="pl-k">return</span> index <span class="pl-k">*</span> angleMultiplier <span class="pl-k">-</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span>/<span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1972'>		},</div><div class='line js-file-line' id='LC1973'>		<span class="pl-en">getPointPosition</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">index</span>, <span class="pl-smi">distanceFromCenter</span>){</div><div class='line js-file-line' id='LC1974'>			<span class="pl-k">var</span> thisAngle <span class="pl-k">=</span> <span class="pl-v">this</span>.getIndexAngle(index);</div><div class='line js-file-line' id='LC1975'>			<span class="pl-k">return</span> {</div><div class='line js-file-line' id='LC1976'>				x <span class="pl-k">:</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(thisAngle) <span class="pl-k">*</span> distanceFromCenter) <span class="pl-k">+</span> <span class="pl-v">this</span>.xCenter,</div><div class='line js-file-line' id='LC1977'>				y <span class="pl-k">:</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(thisAngle) <span class="pl-k">*</span> distanceFromCenter) <span class="pl-k">+</span> <span class="pl-v">this</span>.yCenter</div><div class='line js-file-line' id='LC1978'>			};</div><div class='line js-file-line' id='LC1979'>		},</div><div class='line js-file-line' id='LC1980'>		<span class="pl-en">draw</span><span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC1981'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">display</span>){</div><div class='line js-file-line' id='LC1982'>				<span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-v">this</span>.ctx;</div><div class='line js-file-line' id='LC1983'>				each(<span class="pl-v">this</span>.yLabels, <span class="pl-k">function</span>(<span class="pl-smi">label</span>, <span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC1984'>					<span class="pl-c">// Don&#39;t draw a centre value</span></div><div class='line js-file-line' id='LC1985'>					<span class="pl-k">if</span> (index <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC1986'>						<span class="pl-k">var</span> yCenterOffset <span class="pl-k">=</span> index <span class="pl-k">*</span> (<span class="pl-v">this</span>.drawingArea/<span class="pl-v">this</span>.steps),</div><div class='line js-file-line' id='LC1987'>							yHeight <span class="pl-k">=</span> <span class="pl-v">this</span>.yCenter <span class="pl-k">-</span> yCenterOffset,</div><div class='line js-file-line' id='LC1988'>							pointPosition;</div><div class='line js-file-line' id='LC1989'><br></div><div class='line js-file-line' id='LC1990'>						<span class="pl-c">// Draw circular lines around the scale</span></div><div class='line js-file-line' id='LC1991'>						<span class="pl-k">if</span> (<span class="pl-v">this</span>.lineWidth <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC1992'>							ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.lineColor;</div><div class='line js-file-line' id='LC1993'>							ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.lineWidth;</div><div class='line js-file-line' id='LC1994'><br></div><div class='line js-file-line' id='LC1995'>							<span class="pl-k">if</span>(<span class="pl-v">this</span>.lineArc){</div><div class='line js-file-line' id='LC1996'>								ctx.beginPath();</div><div class='line js-file-line' id='LC1997'>								ctx.arc(<span class="pl-v">this</span>.xCenter, <span class="pl-v">this</span>.yCenter, yCenterOffset, <span class="pl-c1">0</span>, <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">*</span><span class="pl-c1">2</span>);</div><div class='line js-file-line' id='LC1998'>								ctx.closePath();</div><div class='line js-file-line' id='LC1999'>								ctx.stroke();</div><div class='line js-file-line' id='LC2000'>							} <span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC2001'>								ctx.beginPath();</div><div class='line js-file-line' id='LC2002'>								<span class="pl-k">for</span> (<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>;i<span class="pl-k">&lt;</span><span class="pl-v">this</span>.valuesCount;i<span class="pl-k">++</span>)</div><div class='line js-file-line' id='LC2003'>								{</div><div class='line js-file-line' id='LC2004'>									pointPosition <span class="pl-k">=</span> <span class="pl-v">this</span>.getPointPosition(i, <span class="pl-v">this</span>.calculateCenterOffset(<span class="pl-v">this</span>.min <span class="pl-k">+</span> (index <span class="pl-k">*</span> <span class="pl-v">this</span>.stepValue)));</div><div class='line js-file-line' id='LC2005'>									<span class="pl-k">if</span> (i <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC2006'>										ctx.<span class="pl-c1">moveTo</span>(pointPosition.<span class="pl-c1">x</span>, pointPosition.<span class="pl-c1">y</span>);</div><div class='line js-file-line' id='LC2007'>									} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC2008'>										ctx.lineTo(pointPosition.<span class="pl-c1">x</span>, pointPosition.<span class="pl-c1">y</span>);</div><div class='line js-file-line' id='LC2009'>									}</div><div class='line js-file-line' id='LC2010'>								}</div><div class='line js-file-line' id='LC2011'>								ctx.closePath();</div><div class='line js-file-line' id='LC2012'>								ctx.stroke();</div><div class='line js-file-line' id='LC2013'>							}</div><div class='line js-file-line' id='LC2014'>						}</div><div class='line js-file-line' id='LC2015'>						<span class="pl-k">if</span>(<span class="pl-v">this</span>.showLabels){</div><div class='line js-file-line' id='LC2016'>							ctx.font <span class="pl-k">=</span> fontString(<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>,<span class="pl-v">this</span>.fontStyle,<span class="pl-v">this</span>.<span class="pl-c1">fontFamily</span>);</div><div class='line js-file-line' id='LC2017'>							<span class="pl-k">if</span> (<span class="pl-v">this</span>.showLabelBackdrop){</div><div class='line js-file-line' id='LC2018'>								<span class="pl-k">var</span> labelWidth <span class="pl-k">=</span> ctx.measureText(label).<span class="pl-c1">width</span>;</div><div class='line js-file-line' id='LC2019'>								ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.backdropColor;</div><div class='line js-file-line' id='LC2020'>								ctx.fillRect(</div><div class='line js-file-line' id='LC2021'>									<span class="pl-v">this</span>.xCenter <span class="pl-k">-</span> labelWidth/<span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-v">this</span>.backdropPaddingX,</div><div class='line js-file-line' id='LC2022'>									yHeight <span class="pl-k">-</span> <span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>/<span class="pl-c1">2</span> <span class="pl-k">-</span> <span class="pl-v">this</span>.backdropPaddingY,</div><div class='line js-file-line' id='LC2023'>									labelWidth <span class="pl-k">+</span> <span class="pl-v">this</span>.backdropPaddingX<span class="pl-k">*</span><span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC2024'>									<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span> <span class="pl-k">+</span> <span class="pl-v">this</span>.backdropPaddingY<span class="pl-k">*</span><span class="pl-c1">2</span></div><div class='line js-file-line' id='LC2025'>								);</div><div class='line js-file-line' id='LC2026'>							}</div><div class='line js-file-line' id='LC2027'>							ctx.<span class="pl-c1">textAlign</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>center<span class="pl-pds">&#39;</span></span>;</div><div class='line js-file-line' id='LC2028'>							ctx.textBaseline <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span>middle<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC2029'>							ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.fontColor;</div><div class='line js-file-line' id='LC2030'>							ctx.fillText(label, <span class="pl-v">this</span>.xCenter, yHeight);</div><div class='line js-file-line' id='LC2031'>						}</div><div class='line js-file-line' id='LC2032'>					}</div><div class='line js-file-line' id='LC2033'>				}, <span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC2034'><br></div><div class='line js-file-line' id='LC2035'>				<span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-v">this</span>.lineArc){</div><div class='line js-file-line' id='LC2036'>					ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.angleLineWidth;</div><div class='line js-file-line' id='LC2037'>					ctx.strokeStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.angleLineColor;</div><div class='line js-file-line' id='LC2038'>					<span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-v">this</span>.valuesCount <span class="pl-k">-</span> <span class="pl-c1">1</span>; i <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>; i<span class="pl-k">--</span>) {</div><div class='line js-file-line' id='LC2039'>						<span class="pl-k">if</span> (<span class="pl-v">this</span>.angleLineWidth <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC2040'>							<span class="pl-k">var</span> outerPosition <span class="pl-k">=</span> <span class="pl-v">this</span>.getPointPosition(i, <span class="pl-v">this</span>.calculateCenterOffset(<span class="pl-v">this</span>.max));</div><div class='line js-file-line' id='LC2041'>							ctx.beginPath();</div><div class='line js-file-line' id='LC2042'>							ctx.<span class="pl-c1">moveTo</span>(<span class="pl-v">this</span>.xCenter, <span class="pl-v">this</span>.yCenter);</div><div class='line js-file-line' id='LC2043'>							ctx.lineTo(outerPosition.<span class="pl-c1">x</span>, outerPosition.<span class="pl-c1">y</span>);</div><div class='line js-file-line' id='LC2044'>							ctx.stroke();</div><div class='line js-file-line' id='LC2045'>							ctx.closePath();</div><div class='line js-file-line' id='LC2046'>						}</div><div class='line js-file-line' id='LC2047'>						<span class="pl-c">// Extra 3px out for some label spacing</span></div><div class='line js-file-line' id='LC2048'>						<span class="pl-k">var</span> pointLabelPosition <span class="pl-k">=</span> <span class="pl-v">this</span>.getPointPosition(i, <span class="pl-v">this</span>.calculateCenterOffset(<span class="pl-v">this</span>.max) <span class="pl-k">+</span> <span class="pl-c1">5</span>);</div><div class='line js-file-line' id='LC2049'>						ctx.font <span class="pl-k">=</span> fontString(<span class="pl-v">this</span>.pointLabelFontSize,<span class="pl-v">this</span>.pointLabelFontStyle,<span class="pl-v">this</span>.pointLabelFontFamily);</div><div class='line js-file-line' id='LC2050'>						ctx.fillStyle <span class="pl-k">=</span> <span class="pl-v">this</span>.pointLabelFontColor;</div><div class='line js-file-line' id='LC2051'><br></div><div class='line js-file-line' id='LC2052'>						<span class="pl-k">var</span> labelsCount <span class="pl-k">=</span> <span class="pl-v">this</span>.labels.<span class="pl-c1">length</span>,</div><div class='line js-file-line' id='LC2053'>							halfLabelsCount <span class="pl-k">=</span> <span class="pl-v">this</span>.labels.<span class="pl-c1">length</span>/<span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC2054'>							quarterLabelsCount <span class="pl-k">=</span> halfLabelsCount/<span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC2055'>							upperHalf <span class="pl-k">=</span> (i <span class="pl-k">&lt;</span> quarterLabelsCount <span class="pl-k">||</span> i <span class="pl-k">&gt;</span> labelsCount <span class="pl-k">-</span> quarterLabelsCount),</div><div class='line js-file-line' id='LC2056'>							exactQuarter <span class="pl-k">=</span> (i <span class="pl-k">===</span> quarterLabelsCount <span class="pl-k">||</span> i <span class="pl-k">===</span> labelsCount <span class="pl-k">-</span> quarterLabelsCount);</div><div class='line js-file-line' id='LC2057'>						<span class="pl-k">if</span> (i <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC2058'>							ctx.<span class="pl-c1">textAlign</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>center<span class="pl-pds">&#39;</span></span>;</div><div class='line js-file-line' id='LC2059'>						} <span class="pl-k">else</span> <span class="pl-k">if</span>(i <span class="pl-k">===</span> halfLabelsCount){</div><div class='line js-file-line' id='LC2060'>							ctx.<span class="pl-c1">textAlign</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>center<span class="pl-pds">&#39;</span></span>;</div><div class='line js-file-line' id='LC2061'>						} <span class="pl-k">else</span> <span class="pl-k">if</span> (i <span class="pl-k">&lt;</span> halfLabelsCount){</div><div class='line js-file-line' id='LC2062'>							ctx.<span class="pl-c1">textAlign</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>left<span class="pl-pds">&#39;</span></span>;</div><div class='line js-file-line' id='LC2063'>						} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC2064'>							ctx.<span class="pl-c1">textAlign</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>right<span class="pl-pds">&#39;</span></span>;</div><div class='line js-file-line' id='LC2065'>						}</div><div class='line js-file-line' id='LC2066'><br></div><div class='line js-file-line' id='LC2067'>						<span class="pl-c">// Set the correct text baseline based on outer positioning</span></div><div class='line js-file-line' id='LC2068'>						<span class="pl-k">if</span> (exactQuarter){</div><div class='line js-file-line' id='LC2069'>							ctx.textBaseline <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>middle<span class="pl-pds">&#39;</span></span>;</div><div class='line js-file-line' id='LC2070'>						} <span class="pl-k">else</span> <span class="pl-k">if</span> (upperHalf){</div><div class='line js-file-line' id='LC2071'>							ctx.textBaseline <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>bottom<span class="pl-pds">&#39;</span></span>;</div><div class='line js-file-line' id='LC2072'>						} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC2073'>							ctx.textBaseline <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>top<span class="pl-pds">&#39;</span></span>;</div><div class='line js-file-line' id='LC2074'>						}</div><div class='line js-file-line' id='LC2075'><br></div><div class='line js-file-line' id='LC2076'>						ctx.fillText(<span class="pl-v">this</span>.labels[i], pointLabelPosition.<span class="pl-c1">x</span>, pointLabelPosition.<span class="pl-c1">y</span>);</div><div class='line js-file-line' id='LC2077'>					}</div><div class='line js-file-line' id='LC2078'>				}</div><div class='line js-file-line' id='LC2079'>			}</div><div class='line js-file-line' id='LC2080'>		}</div><div class='line js-file-line' id='LC2081'>	});</div><div class='line js-file-line' id='LC2082'><br></div><div class='line js-file-line' id='LC2083'>	Chart.animationService <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC2084'>		frameDuration<span class="pl-k">:</span> <span class="pl-c1">17</span>,</div><div class='line js-file-line' id='LC2085'>		animations<span class="pl-k">:</span> [],</div><div class='line js-file-line' id='LC2086'>		dropFrames<span class="pl-k">:</span> <span class="pl-c1">0</span>,</div><div class='line js-file-line' id='LC2087'>		<span class="pl-en">addAnimation</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">chartInstance</span>, <span class="pl-smi">animationObject</span>) {</div><div class='line js-file-line' id='LC2088'>			<span class="pl-k">for</span> (<span class="pl-k">var</span> index <span class="pl-k">=</span> <span class="pl-c1">0</span>; index <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.animations.<span class="pl-c1">length</span>; <span class="pl-k">++</span> index){</div><div class='line js-file-line' id='LC2089'>				<span class="pl-k">if</span> (<span class="pl-v">this</span>.animations[index].chartInstance <span class="pl-k">===</span> chartInstance){</div><div class='line js-file-line' id='LC2090'>					<span class="pl-c">// replacing an in progress animation</span></div><div class='line js-file-line' id='LC2091'>					<span class="pl-v">this</span>.animations[index].animationObject <span class="pl-k">=</span> animationObject;</div><div class='line js-file-line' id='LC2092'>					<span class="pl-k">return</span>;</div><div class='line js-file-line' id='LC2093'>				}</div><div class='line js-file-line' id='LC2094'>			}</div><div class='line js-file-line' id='LC2095'><br></div><div class='line js-file-line' id='LC2096'>			<span class="pl-v">this</span>.animations.<span class="pl-c1">push</span>({</div><div class='line js-file-line' id='LC2097'>				chartInstance<span class="pl-k">:</span> chartInstance,</div><div class='line js-file-line' id='LC2098'>				animationObject<span class="pl-k">:</span> animationObject</div><div class='line js-file-line' id='LC2099'>			});</div><div class='line js-file-line' id='LC2100'><br></div><div class='line js-file-line' id='LC2101'>			<span class="pl-c">// If there are no animations queued, manually kickstart a digest, for lack of a better word</span></div><div class='line js-file-line' id='LC2102'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.animations.<span class="pl-c1">length</span> <span class="pl-k">==</span> <span class="pl-c1">1</span>) {</div><div class='line js-file-line' id='LC2103'>				helpers.requestAnimFrame.<span class="pl-c1">call</span>(<span class="pl-c1">window</span>, <span class="pl-v">this</span>.digestWrapper);</div><div class='line js-file-line' id='LC2104'>			}</div><div class='line js-file-line' id='LC2105'>		},</div><div class='line js-file-line' id='LC2106'>		<span class="pl-c">// Cancel the animation for a given chart instance</span></div><div class='line js-file-line' id='LC2107'>		<span class="pl-en">cancelAnimation</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">chartInstance</span>) {</div><div class='line js-file-line' id='LC2108'>			<span class="pl-k">var</span> index <span class="pl-k">=</span> helpers.findNextWhere(<span class="pl-v">this</span>.animations, <span class="pl-k">function</span>(<span class="pl-smi">animationWrapper</span>) {</div><div class='line js-file-line' id='LC2109'>				<span class="pl-k">return</span> animationWrapper.chartInstance <span class="pl-k">===</span> chartInstance;</div><div class='line js-file-line' id='LC2110'>			});</div><div class='line js-file-line' id='LC2111'><br></div><div class='line js-file-line' id='LC2112'>			<span class="pl-k">if</span> (index)</div><div class='line js-file-line' id='LC2113'>			{</div><div class='line js-file-line' id='LC2114'>				<span class="pl-v">this</span>.animations.<span class="pl-c1">splice</span>(index, <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC2115'>			}</div><div class='line js-file-line' id='LC2116'>		},</div><div class='line js-file-line' id='LC2117'>		<span class="pl-c">// calls startDigest with the proper context</span></div><div class='line js-file-line' id='LC2118'>		<span class="pl-en">digestWrapper</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</div><div class='line js-file-line' id='LC2119'>			Chart.animationService.startDigest.<span class="pl-c1">call</span>(Chart.animationService);</div><div class='line js-file-line' id='LC2120'>		},</div><div class='line js-file-line' id='LC2121'>		<span class="pl-en">startDigest</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</div><div class='line js-file-line' id='LC2122'><br></div><div class='line js-file-line' id='LC2123'>			<span class="pl-k">var</span> startTime <span class="pl-k">=</span> <span class="pl-c1">Date</span>.now();</div><div class='line js-file-line' id='LC2124'>			<span class="pl-k">var</span> framesToDrop <span class="pl-k">=</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC2125'><br></div><div class='line js-file-line' id='LC2126'>			<span class="pl-k">if</span>(<span class="pl-v">this</span>.dropFrames <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC2127'>				framesToDrop <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-v">this</span>.dropFrames);</div><div class='line js-file-line' id='LC2128'>				<span class="pl-v">this</span>.dropFrames <span class="pl-k">-=</span> framesToDrop;</div><div class='line js-file-line' id='LC2129'>			}</div><div class='line js-file-line' id='LC2130'><br></div><div class='line js-file-line' id='LC2131'>			<span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.animations.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</div><div class='line js-file-line' id='LC2132'><br></div><div class='line js-file-line' id='LC2133'>				<span class="pl-k">if</span> (<span class="pl-v">this</span>.animations[i].animationObject.currentStep <span class="pl-k">===</span> <span class="pl-c1">null</span>){</div><div class='line js-file-line' id='LC2134'>					<span class="pl-v">this</span>.animations[i].animationObject.currentStep <span class="pl-k">=</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC2135'>				}</div><div class='line js-file-line' id='LC2136'><br></div><div class='line js-file-line' id='LC2137'>				<span class="pl-v">this</span>.animations[i].animationObject.currentStep <span class="pl-k">+=</span> <span class="pl-c1">1</span> <span class="pl-k">+</span> framesToDrop;</div><div class='line js-file-line' id='LC2138'>				<span class="pl-k">if</span>(<span class="pl-v">this</span>.animations[i].animationObject.currentStep <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.animations[i].animationObject.numSteps){</div><div class='line js-file-line' id='LC2139'>					<span class="pl-v">this</span>.animations[i].animationObject.currentStep <span class="pl-k">=</span> <span class="pl-v">this</span>.animations[i].animationObject.numSteps;</div><div class='line js-file-line' id='LC2140'>				}</div><div class='line js-file-line' id='LC2141'><br></div><div class='line js-file-line' id='LC2142'>				<span class="pl-v">this</span>.animations[i].animationObject.render(<span class="pl-v">this</span>.animations[i].chartInstance, <span class="pl-v">this</span>.animations[i].animationObject);</div><div class='line js-file-line' id='LC2143'><br></div><div class='line js-file-line' id='LC2144'>				<span class="pl-k">if</span> (<span class="pl-v">this</span>.animations[i].animationObject.currentStep <span class="pl-k">==</span> <span class="pl-v">this</span>.animations[i].animationObject.numSteps){</div><div class='line js-file-line' id='LC2145'>					<span class="pl-c">// executed the last frame. Remove the animation.</span></div><div class='line js-file-line' id='LC2146'>					<span class="pl-v">this</span>.animations.<span class="pl-c1">splice</span>(i, <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC2147'>					<span class="pl-c">// Keep the index in place to offset the splice</span></div><div class='line js-file-line' id='LC2148'>					i<span class="pl-k">--</span>;</div><div class='line js-file-line' id='LC2149'>				}</div><div class='line js-file-line' id='LC2150'>			}</div><div class='line js-file-line' id='LC2151'><br></div><div class='line js-file-line' id='LC2152'>			<span class="pl-k">var</span> endTime <span class="pl-k">=</span> <span class="pl-c1">Date</span>.now();</div><div class='line js-file-line' id='LC2153'>			<span class="pl-k">var</span> delay <span class="pl-k">=</span> endTime <span class="pl-k">-</span> startTime <span class="pl-k">-</span> <span class="pl-v">this</span>.frameDuration;</div><div class='line js-file-line' id='LC2154'>			<span class="pl-k">var</span> frameDelay <span class="pl-k">=</span> delay / <span class="pl-v">this</span>.frameDuration;</div><div class='line js-file-line' id='LC2155'><br></div><div class='line js-file-line' id='LC2156'>			<span class="pl-k">if</span>(frameDelay <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC2157'>				<span class="pl-v">this</span>.dropFrames <span class="pl-k">+=</span> frameDelay;</div><div class='line js-file-line' id='LC2158'>			}</div><div class='line js-file-line' id='LC2159'><br></div><div class='line js-file-line' id='LC2160'>			<span class="pl-c">// Do we have more stuff to animate?</span></div><div class='line js-file-line' id='LC2161'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.animations.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC2162'>				helpers.requestAnimFrame.<span class="pl-c1">call</span>(<span class="pl-c1">window</span>, <span class="pl-v">this</span>.digestWrapper);</div><div class='line js-file-line' id='LC2163'>			}</div><div class='line js-file-line' id='LC2164'>		}</div><div class='line js-file-line' id='LC2165'>	};</div><div class='line js-file-line' id='LC2166'><br></div><div class='line js-file-line' id='LC2167'>	<span class="pl-c">// Attach global event to resize each chart instance when the browser resizes</span></div><div class='line js-file-line' id='LC2168'>	helpers.addEvent(<span class="pl-c1">window</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>resize<span class="pl-pds">&quot;</span></span>, (<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC2169'>		<span class="pl-c">// Basic debounce of resize function so it doesn&#39;t hurt performance when resizing browser.</span></div><div class='line js-file-line' id='LC2170'>		<span class="pl-k">var</span> timeout;</div><div class='line js-file-line' id='LC2171'>		<span class="pl-k">return</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC2172'>			<span class="pl-c1">clearTimeout</span>(timeout);</div><div class='line js-file-line' id='LC2173'>			timeout <span class="pl-k">=</span> <span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC2174'>				each(Chart.instances,<span class="pl-k">function</span>(<span class="pl-smi">instance</span>){</div><div class='line js-file-line' id='LC2175'>					<span class="pl-c">// If the responsive flag is set in the chart instance config</span></div><div class='line js-file-line' id='LC2176'>					<span class="pl-c">// Cascade the resize event down to the chart.</span></div><div class='line js-file-line' id='LC2177'>					<span class="pl-k">if</span> (instance.<span class="pl-c1">options</span>.responsive){</div><div class='line js-file-line' id='LC2178'>						instance.<span class="pl-c1">resize</span>(instance.render, <span class="pl-c1">true</span>);</div><div class='line js-file-line' id='LC2179'>					}</div><div class='line js-file-line' id='LC2180'>				});</div><div class='line js-file-line' id='LC2181'>			}, <span class="pl-c1">50</span>);</div><div class='line js-file-line' id='LC2182'>		};</div><div class='line js-file-line' id='LC2183'>	})());</div><div class='line js-file-line' id='LC2184'><br></div><div class='line js-file-line' id='LC2185'><br></div><div class='line js-file-line' id='LC2186'>	<span class="pl-k">if</span> (amd) {</div><div class='line js-file-line' id='LC2187'>		define(<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC2188'>			<span class="pl-k">return</span> Chart;</div><div class='line js-file-line' id='LC2189'>		});</div><div class='line js-file-line' id='LC2190'>	} <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">typeof</span> <span class="pl-c1">module</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">module</span>.exports) {</div><div class='line js-file-line' id='LC2191'>		<span class="pl-c1">module</span>.exports <span class="pl-k">=</span> Chart;</div><div class='line js-file-line' id='LC2192'>	}</div><div class='line js-file-line' id='LC2193'><br></div><div class='line js-file-line' id='LC2194'>	root.Chart <span class="pl-k">=</span> Chart;</div><div class='line js-file-line' id='LC2195'><br></div><div class='line js-file-line' id='LC2196'>	<span class="pl-c1">Chart</span>.<span class="pl-en">noConflict</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC2197'>		root.Chart <span class="pl-k">=</span> previous;</div><div class='line js-file-line' id='LC2198'>		<span class="pl-k">return</span> Chart;</div><div class='line js-file-line' id='LC2199'>	};</div><div class='line js-file-line' id='LC2200'><br></div><div class='line js-file-line' id='LC2201'>}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</div></pre></div></div>
  </div>



  <footer class="clearfix">
    <div class="container">
      <a href="#"><span class="mega-octicon octicon-mark-github"></span></a>

      <ul class="clearfix">
        <li>
          <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/site/mobile_preference" class="js-mobile-preference-form" data-form-nonce="8b41a82aad02ec38c10a36ecb249a6ef31da82b3" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Xf+ecaS+2+aXEGm+ciUQxCr+ZGFy7n9D2m67BI6flv/DFR9bQrsWGox+FNc3IyTdXGaIQrGNkUy+9c3YU8naRQ==" /></div>
            <input type="hidden" name="mobile" value="false">
            <input type="hidden" name="anchor" class="js-mobile-preference-anchor-field">

            <button type="submit" class="switch-to-desktop" data-ga-click="Mobile, switch to desktop, switch button">
              Desktop version
            </button>
</form>        </li>

      </ul>
    </div>
  </footer>
  
</body>
</html>






<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1" media="(device-height: 568px)">
  <meta http-equiv="Content-Language" content="en">
  <link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-precomposed.png">
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="/apple-touch-icon-114-precomposed.png">
      <meta name="google-analytics" content="UA-3769691-2">
    <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
  <meta name="theme-color" content="#f5f5f5">

  
  <meta content="Rails, view, blob#show" data-pjax-transient="true" name="analytics-event" />
  <meta class="js-ga-set" name="dimension1" content="Logged Out">
    <meta class="js-ga-set" name="dimension3" content="mobile">

  <!-- </textarea> --><!-- '"` --><meta content="authenticity_token" name="csrf-param" />
<meta content="c8W1LPgqIGk5c1Mfxyh685q2dD4cadYrQ/TTxODx86fTh+/wZmkOjlNnhgneRi/NeyLePsUF/w57kJfU0TqCSA==" name="csrf-token" />

  <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="0575EF2B:6D91:B58A972:55C6ED29" name="octolytics-dimension-request_id" />
  <meta content="mobile" name="octolytics-dimension-device" />
  <meta content="1458051" name="octolytics-dimension-user_id" /><meta content="nnnick" name="octolytics-dimension-user_login" /><meta content="8843683" name="octolytics-dimension-repository_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="8843683" name="octolytics-dimension-repository_network_root_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_network_root_nwo" />
  

  <title>GitHub Â· Build software better, together.</title>

  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/mobile/index-2925272909e6f36816412cdb6d8a151ed00201f3c8ed4104dda4250b06630146.css" media="all" rel="stylesheet" />
  <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/mobile/index-c612fa633714ea237b8f720b5fea970980ef59fdfe134bec23b43831f1d98f14.js"></script>
</head>
<body class="">
  <header class="nav-bar">
    <div class="nav-bar-inner">
      

      <button class="header-button header-nav-button touchable js-show-global-nav">
        <span class="octicon octicon-three-bars"></span>

      </button>

      <div class="nav-bar-title-text">
              <span class="octicon octicon-repo"></span>

    <strong><a href="/nnnick">nnnick</a></strong>
    /
    <strong><a href="/nnnick/Chart.js">Chart.js</a></strong>

      </div>
    </div>


    <nav class="nav-bar-tabs repo-nav-bar-tabs">
      <ul>
          <li>
            <a href="/explore">
              <span class="octicon octicon-telescope"></span>
              Explore
            </a>
          </li>
        <li>
            <a href="/login?return_to=%2Fnnnick%2FChart.js%2Fblob%2Fmaster%2Fsrc%2FChart.Radar.js">
              <span class="octicon octicon-sign-in"></span>
              Sign in
            </a>
        </li>
            <li class="section-title">This repository</li>
    <li><a href="/nnnick/Chart.js?files=1"><span class="octicon octicon-code"></span> Code</a></li>
      <li><a href="/nnnick/Chart.js/issues"><span class="octicon octicon-issue-opened"></span> Issues</a></li>
    <li><a href="/nnnick/Chart.js/pulls"><span class="octicon octicon-git-pull-request"></span> Pull Requests</a></li>
    <li><a href="/nnnick/Chart.js/pulse"><span class="octicon octicon-pulse"></span> Pulse</a></li>

      </ul>
    </nav>
  </header>


  

        

<div class="breadcrumb blob-breadcrumb">
  <label for="blob-history-checkbox" class="blob-history-label">
    <span class="octicon octicon-history"></span>
  </label>
  <span class="filetype-icon"><span class="octicon octicon-file-text"></span></span>
  <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nnnick/Chart.js/tree/master/src" class="" data-branch="master" data-pjax="true" itemscope="url"><span itemprop="title">src</span></a></span><span class="separator">/</span><strong class="final-path">Chart.Radar.js</strong>
</div>

<input id="blob-history-checkbox"
       class="js-blob-history-checkbox"
       type="checkbox"
       data-url="/nnnick/Chart.js/latest_commit/master/src/Chart.Radar.js">

<div class="blob-history">
  <a href="/nnnick/Chart.js/commits/master/src/Chart.Radar.js" class="js-blob-history-link">
    Loading latest commit...
</a></div>

  <div class="blob-file-content js-file-line-container">
    <div class="highlighted-blob tab-size" data-tab-size="8"><div class="code-body highlight"><pre><div class='line js-file-line' id='LC1'>(<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC2'>	<span class="pl-s"><span class="pl-pds">&quot;</span>use strict<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC3'><br></div><div class='line js-file-line' id='LC4'>	<span class="pl-k">var</span> root <span class="pl-k">=</span> <span class="pl-v">this</span>,</div><div class='line js-file-line' id='LC5'>		Chart <span class="pl-k">=</span> root.Chart,</div><div class='line js-file-line' id='LC6'>		helpers <span class="pl-k">=</span> Chart.helpers;</div><div class='line js-file-line' id='LC7'><br></div><div class='line js-file-line' id='LC8'><br></div><div class='line js-file-line' id='LC9'><br></div><div class='line js-file-line' id='LC10'>	Chart.Type.extend({</div><div class='line js-file-line' id='LC11'>		name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Radar<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC12'>		defaults<span class="pl-k">:</span>{</div><div class='line js-file-line' id='LC13'>			<span class="pl-c">//Boolean - Whether to show lines for each scale point</span></div><div class='line js-file-line' id='LC14'>			scaleShowLine <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC15'><br></div><div class='line js-file-line' id='LC16'>			<span class="pl-c">//Boolean - Whether we show the angle lines out of the radar</span></div><div class='line js-file-line' id='LC17'>			angleShowLineOut <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC18'><br></div><div class='line js-file-line' id='LC19'>			<span class="pl-c">//Boolean - Whether to show labels on the scale</span></div><div class='line js-file-line' id='LC20'>			scaleShowLabels <span class="pl-k">:</span> <span class="pl-c1">false</span>,</div><div class='line js-file-line' id='LC21'><br></div><div class='line js-file-line' id='LC22'>			<span class="pl-c">// Boolean - Whether the scale should begin at zero</span></div><div class='line js-file-line' id='LC23'>			scaleBeginAtZero <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC24'><br></div><div class='line js-file-line' id='LC25'>			<span class="pl-c">//String - Colour of the angle line</span></div><div class='line js-file-line' id='LC26'>			angleLineColor <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,.1)<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC27'><br></div><div class='line js-file-line' id='LC28'>			<span class="pl-c">//Number - Pixel width of the angle line</span></div><div class='line js-file-line' id='LC29'>			angleLineWidth <span class="pl-k">:</span> <span class="pl-c1">1</span>,</div><div class='line js-file-line' id='LC30'><br></div><div class='line js-file-line' id='LC31'>			<span class="pl-c">//String - Point label font declaration</span></div><div class='line js-file-line' id='LC32'>			pointLabelFontFamily <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;Arial&#39;<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC33'><br></div><div class='line js-file-line' id='LC34'>			<span class="pl-c">//String - Point label font weight</span></div><div class='line js-file-line' id='LC35'>			pointLabelFontStyle <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>normal<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC36'><br></div><div class='line js-file-line' id='LC37'>			<span class="pl-c">//Number - Point label font size in pixels</span></div><div class='line js-file-line' id='LC38'>			pointLabelFontSize <span class="pl-k">:</span> <span class="pl-c1">10</span>,</div><div class='line js-file-line' id='LC39'><br></div><div class='line js-file-line' id='LC40'>			<span class="pl-c">//String - Point label font colour</span></div><div class='line js-file-line' id='LC41'>			pointLabelFontColor <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>#666<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC42'><br></div><div class='line js-file-line' id='LC43'>			<span class="pl-c">//Boolean - Whether to show a dot for each point</span></div><div class='line js-file-line' id='LC44'>			pointDot <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC45'><br></div><div class='line js-file-line' id='LC46'>			<span class="pl-c">//Number - Radius of each point dot in pixels</span></div><div class='line js-file-line' id='LC47'>			pointDotRadius <span class="pl-k">:</span> <span class="pl-c1">3</span>,</div><div class='line js-file-line' id='LC48'><br></div><div class='line js-file-line' id='LC49'>			<span class="pl-c">//Number - Pixel width of point dot stroke</span></div><div class='line js-file-line' id='LC50'>			pointDotStrokeWidth <span class="pl-k">:</span> <span class="pl-c1">1</span>,</div><div class='line js-file-line' id='LC51'><br></div><div class='line js-file-line' id='LC52'>			<span class="pl-c">//Number - amount extra to add to the radius to cater for hit detection outside the drawn point</span></div><div class='line js-file-line' id='LC53'>			pointHitDetectionRadius <span class="pl-k">:</span> <span class="pl-c1">20</span>,</div><div class='line js-file-line' id='LC54'><br></div><div class='line js-file-line' id='LC55'>			<span class="pl-c">//Boolean - Whether to show a stroke for datasets</span></div><div class='line js-file-line' id='LC56'>			datasetStroke <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC57'><br></div><div class='line js-file-line' id='LC58'>			<span class="pl-c">//Number - Pixel width of dataset stroke</span></div><div class='line js-file-line' id='LC59'>			datasetStrokeWidth <span class="pl-k">:</span> <span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC60'><br></div><div class='line js-file-line' id='LC61'>			<span class="pl-c">//Boolean - Whether to fill the dataset with a colour</span></div><div class='line js-file-line' id='LC62'>			datasetFill <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC63'><br></div><div class='line js-file-line' id='LC64'>			<span class="pl-c">//String - A legend template</span></div><div class='line js-file-line' id='LC65'>			legendTemplate <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;ul class=<span class="pl-cce">\&quot;</span>&lt;%=name.toLowerCase()%&gt;-legend<span class="pl-cce">\&quot;</span>&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=<span class="pl-cce">\&quot;</span>background-color:&lt;%=datasets[i].strokeColor%&gt;<span class="pl-cce">\&quot;</span>&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/span&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;<span class="pl-pds">&quot;</span></span></div><div class='line js-file-line' id='LC66'><br></div><div class='line js-file-line' id='LC67'>		},</div><div class='line js-file-line' id='LC68'><br></div><div class='line js-file-line' id='LC69'>		<span class="pl-en">initialize</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">data</span>){</div><div class='line js-file-line' id='LC70'>			<span class="pl-v">this</span>.PointClass <span class="pl-k">=</span> Chart.Point.extend({</div><div class='line js-file-line' id='LC71'>				strokeWidth <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointDotStrokeWidth,</div><div class='line js-file-line' id='LC72'>				radius <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointDotRadius,</div><div class='line js-file-line' id='LC73'>				display<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointDot,</div><div class='line js-file-line' id='LC74'>				hitDetectionRadius <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointHitDetectionRadius,</div><div class='line js-file-line' id='LC75'>				ctx <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.ctx</div><div class='line js-file-line' id='LC76'>			});</div><div class='line js-file-line' id='LC77'><br></div><div class='line js-file-line' id='LC78'>			<span class="pl-v">this</span>.datasets <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC79'><br></div><div class='line js-file-line' id='LC80'>			<span class="pl-v">this</span>.buildScale(data);</div><div class='line js-file-line' id='LC81'><br></div><div class='line js-file-line' id='LC82'>			<span class="pl-c">//Set up tooltip events on the chart</span></div><div class='line js-file-line' id='LC83'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.showTooltips){</div><div class='line js-file-line' id='LC84'>				helpers.bindEvents(<span class="pl-v">this</span>, <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipEvents, <span class="pl-k">function</span>(<span class="pl-smi">evt</span>){</div><div class='line js-file-line' id='LC85'>					<span class="pl-k">var</span> activePointsCollection <span class="pl-k">=</span> (evt.<span class="pl-c1">type</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>mouseout<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-v">this</span>.getPointsAtEvent(evt) <span class="pl-k">:</span> [];</div><div class='line js-file-line' id='LC86'><br></div><div class='line js-file-line' id='LC87'>					<span class="pl-v">this</span>.eachPoints(<span class="pl-k">function</span>(<span class="pl-smi">point</span>){</div><div class='line js-file-line' id='LC88'>						point.restore([<span class="pl-s"><span class="pl-pds">&#39;</span>fillColor<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>strokeColor<span class="pl-pds">&#39;</span></span>]);</div><div class='line js-file-line' id='LC89'>					});</div><div class='line js-file-line' id='LC90'>					helpers.each(activePointsCollection, <span class="pl-k">function</span>(<span class="pl-smi">activePoint</span>){</div><div class='line js-file-line' id='LC91'>						activePoint.fillColor <span class="pl-k">=</span> activePoint.highlightFill;</div><div class='line js-file-line' id='LC92'>						activePoint.strokeColor <span class="pl-k">=</span> activePoint.highlightStroke;</div><div class='line js-file-line' id='LC93'>					});</div><div class='line js-file-line' id='LC94'><br></div><div class='line js-file-line' id='LC95'>					<span class="pl-v">this</span>.showTooltip(activePointsCollection);</div><div class='line js-file-line' id='LC96'>				});</div><div class='line js-file-line' id='LC97'>			}</div><div class='line js-file-line' id='LC98'><br></div><div class='line js-file-line' id='LC99'>			<span class="pl-c">//Iterate through each of the datasets, and build this into a property of the chart</span></div><div class='line js-file-line' id='LC100'>			helpers.each(data.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC101'><br></div><div class='line js-file-line' id='LC102'>				<span class="pl-k">var</span> datasetObject <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC103'>					label<span class="pl-k">:</span> dataset.<span class="pl-c1">label</span> <span class="pl-k">||</span> <span class="pl-c1">null</span>,</div><div class='line js-file-line' id='LC104'>					fillColor <span class="pl-k">:</span> dataset.fillColor,</div><div class='line js-file-line' id='LC105'>					strokeColor <span class="pl-k">:</span> dataset.strokeColor,</div><div class='line js-file-line' id='LC106'>					pointColor <span class="pl-k">:</span> dataset.pointColor,</div><div class='line js-file-line' id='LC107'>					pointStrokeColor <span class="pl-k">:</span> dataset.pointStrokeColor,</div><div class='line js-file-line' id='LC108'>					points <span class="pl-k">:</span> []</div><div class='line js-file-line' id='LC109'>				};</div><div class='line js-file-line' id='LC110'><br></div><div class='line js-file-line' id='LC111'>				<span class="pl-v">this</span>.datasets.<span class="pl-c1">push</span>(datasetObject);</div><div class='line js-file-line' id='LC112'><br></div><div class='line js-file-line' id='LC113'>				helpers.each(dataset.<span class="pl-c1">data</span>,<span class="pl-k">function</span>(<span class="pl-smi">dataPoint</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC114'>					<span class="pl-c">//Add a new point for each piece of data, passing any required data to draw.</span></div><div class='line js-file-line' id='LC115'>					<span class="pl-k">var</span> pointPosition;</div><div class='line js-file-line' id='LC116'>					<span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-v">this</span>.scale.animation){</div><div class='line js-file-line' id='LC117'>						pointPosition <span class="pl-k">=</span> <span class="pl-v">this</span>.scale.getPointPosition(index, <span class="pl-v">this</span>.scale.calculateCenterOffset(dataPoint));</div><div class='line js-file-line' id='LC118'>					}</div><div class='line js-file-line' id='LC119'>					datasetObject.points.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">this.PointClass</span>({</div><div class='line js-file-line' id='LC120'>						value <span class="pl-k">:</span> dataPoint,</div><div class='line js-file-line' id='LC121'>						label <span class="pl-k">:</span> data.labels[index],</div><div class='line js-file-line' id='LC122'>						datasetLabel<span class="pl-k">:</span> dataset.<span class="pl-c1">label</span>,</div><div class='line js-file-line' id='LC123'>						x<span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.animation) <span class="pl-k">?</span> <span class="pl-v">this</span>.scale.xCenter <span class="pl-k">:</span> pointPosition.<span class="pl-c1">x</span>,</div><div class='line js-file-line' id='LC124'>						y<span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.animation) <span class="pl-k">?</span> <span class="pl-v">this</span>.scale.yCenter <span class="pl-k">:</span> pointPosition.<span class="pl-c1">y</span>,</div><div class='line js-file-line' id='LC125'>						strokeColor <span class="pl-k">:</span> dataset.pointStrokeColor,</div><div class='line js-file-line' id='LC126'>						fillColor <span class="pl-k">:</span> dataset.pointColor,</div><div class='line js-file-line' id='LC127'>						highlightFill <span class="pl-k">:</span> dataset.pointHighlightFill <span class="pl-k">||</span> dataset.pointColor,</div><div class='line js-file-line' id='LC128'>						highlightStroke <span class="pl-k">:</span> dataset.pointHighlightStroke <span class="pl-k">||</span> dataset.pointStrokeColor</div><div class='line js-file-line' id='LC129'>					}));</div><div class='line js-file-line' id='LC130'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC131'><br></div><div class='line js-file-line' id='LC132'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC133'><br></div><div class='line js-file-line' id='LC134'>			<span class="pl-v">this</span>.render();</div><div class='line js-file-line' id='LC135'>		},</div><div class='line js-file-line' id='LC136'>		<span class="pl-en">eachPoints</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>){</div><div class='line js-file-line' id='LC137'>			helpers.each(<span class="pl-v">this</span>.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC138'>				helpers.each(dataset.points,callback,<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC139'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC140'>		},</div><div class='line js-file-line' id='LC141'><br></div><div class='line js-file-line' id='LC142'>		<span class="pl-en">getPointsAtEvent</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">evt</span>){</div><div class='line js-file-line' id='LC143'>			<span class="pl-k">var</span> mousePosition <span class="pl-k">=</span> helpers.getRelativePosition(evt),</div><div class='line js-file-line' id='LC144'>				fromCenter <span class="pl-k">=</span> helpers.getAngleFromPoint({</div><div class='line js-file-line' id='LC145'>					x<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.xCenter,</div><div class='line js-file-line' id='LC146'>					y<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.yCenter</div><div class='line js-file-line' id='LC147'>				}, mousePosition);</div><div class='line js-file-line' id='LC148'><br></div><div class='line js-file-line' id='LC149'>			<span class="pl-k">var</span> anglePerIndex <span class="pl-k">=</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> <span class="pl-k">*</span> <span class="pl-c1">2</span>) /<span class="pl-v">this</span>.scale.valuesCount,</div><div class='line js-file-line' id='LC150'>				pointIndex <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>((fromCenter.angle <span class="pl-k">-</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> <span class="pl-k">*</span> <span class="pl-c1">1.5</span>) / anglePerIndex),</div><div class='line js-file-line' id='LC151'>				activePointsCollection <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC152'><br></div><div class='line js-file-line' id='LC153'>			<span class="pl-c">// If we&#39;re at the top, make the pointIndex 0 to get the first of the array.</span></div><div class='line js-file-line' id='LC154'>			<span class="pl-k">if</span> (pointIndex <span class="pl-k">&gt;=</span> <span class="pl-v">this</span>.scale.valuesCount <span class="pl-k">||</span> pointIndex <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC155'>				pointIndex <span class="pl-k">=</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC156'>			}</div><div class='line js-file-line' id='LC157'><br></div><div class='line js-file-line' id='LC158'>			<span class="pl-k">if</span> (fromCenter.distance <span class="pl-k">&lt;=</span> <span class="pl-v">this</span>.scale.drawingArea){</div><div class='line js-file-line' id='LC159'>				helpers.each(<span class="pl-v">this</span>.datasets, <span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC160'>					activePointsCollection.<span class="pl-c1">push</span>(dataset.points[pointIndex]);</div><div class='line js-file-line' id='LC161'>				});</div><div class='line js-file-line' id='LC162'>			}</div><div class='line js-file-line' id='LC163'><br></div><div class='line js-file-line' id='LC164'>			<span class="pl-k">return</span> activePointsCollection;</div><div class='line js-file-line' id='LC165'>		},</div><div class='line js-file-line' id='LC166'><br></div><div class='line js-file-line' id='LC167'>		<span class="pl-en">buildScale</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">data</span>){</div><div class='line js-file-line' id='LC168'>			<span class="pl-v">this</span>.scale <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Chart.RadialScale</span>({</div><div class='line js-file-line' id='LC169'>				display<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.showScale,</div><div class='line js-file-line' id='LC170'>				fontStyle<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontStyle,</div><div class='line js-file-line' id='LC171'>				fontSize<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontSize,</div><div class='line js-file-line' id='LC172'>				fontFamily<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontFamily,</div><div class='line js-file-line' id='LC173'>				fontColor<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontColor,</div><div class='line js-file-line' id='LC174'>				showLabels<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowLabels,</div><div class='line js-file-line' id='LC175'>				showLabelBackdrop<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowLabelBackdrop,</div><div class='line js-file-line' id='LC176'>				backdropColor<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleBackdropColor,</div><div class='line js-file-line' id='LC177'>				backdropPaddingY <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleBackdropPaddingY,</div><div class='line js-file-line' id='LC178'>				backdropPaddingX<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleBackdropPaddingX,</div><div class='line js-file-line' id='LC179'>				lineWidth<span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowLine) <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleLineWidth <span class="pl-k">:</span> <span class="pl-c1">0</span>,</div><div class='line js-file-line' id='LC180'>				lineColor<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleLineColor,</div><div class='line js-file-line' id='LC181'>				angleLineColor <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.angleLineColor,</div><div class='line js-file-line' id='LC182'>				angleLineWidth <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.angleShowLineOut) <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.angleLineWidth <span class="pl-k">:</span> <span class="pl-c1">0</span>,</div><div class='line js-file-line' id='LC183'>				<span class="pl-c">// Point labels at the edge of each line</span></div><div class='line js-file-line' id='LC184'>				pointLabelFontColor <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointLabelFontColor,</div><div class='line js-file-line' id='LC185'>				pointLabelFontSize <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointLabelFontSize,</div><div class='line js-file-line' id='LC186'>				pointLabelFontFamily <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointLabelFontFamily,</div><div class='line js-file-line' id='LC187'>				pointLabelFontStyle <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointLabelFontStyle,</div><div class='line js-file-line' id='LC188'>				height <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>,</div><div class='line js-file-line' id='LC189'>				width<span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>,</div><div class='line js-file-line' id='LC190'>				xCenter<span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>/<span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC191'>				yCenter<span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>/<span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC192'>				ctx <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.ctx,</div><div class='line js-file-line' id='LC193'>				templateString<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleLabel,</div><div class='line js-file-line' id='LC194'>				labels<span class="pl-k">:</span> data.labels,</div><div class='line js-file-line' id='LC195'>				valuesCount<span class="pl-k">:</span> data.datasets[<span class="pl-c1">0</span>].<span class="pl-c1">data</span>.<span class="pl-c1">length</span></div><div class='line js-file-line' id='LC196'>			});</div><div class='line js-file-line' id='LC197'><br></div><div class='line js-file-line' id='LC198'>			<span class="pl-v">this</span>.scale.setScaleSize();</div><div class='line js-file-line' id='LC199'>			<span class="pl-v">this</span>.updateScaleRange(data.datasets);</div><div class='line js-file-line' id='LC200'>			<span class="pl-v">this</span>.scale.buildYLabels();</div><div class='line js-file-line' id='LC201'>		},</div><div class='line js-file-line' id='LC202'>		<span class="pl-en">updateScaleRange</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">datasets</span>){</div><div class='line js-file-line' id='LC203'>			<span class="pl-k">var</span> valuesArray <span class="pl-k">=</span> (<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC204'>				<span class="pl-k">var</span> totalDataArray <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC205'>				helpers.each(datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC206'>					<span class="pl-k">if</span> (dataset.<span class="pl-c1">data</span>){</div><div class='line js-file-line' id='LC207'>						totalDataArray <span class="pl-k">=</span> totalDataArray.<span class="pl-c1">concat</span>(dataset.<span class="pl-c1">data</span>);</div><div class='line js-file-line' id='LC208'>					}</div><div class='line js-file-line' id='LC209'>					<span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC210'>						helpers.each(dataset.points, <span class="pl-k">function</span>(<span class="pl-smi">point</span>){</div><div class='line js-file-line' id='LC211'>							totalDataArray.<span class="pl-c1">push</span>(point.<span class="pl-c1">value</span>);</div><div class='line js-file-line' id='LC212'>						});</div><div class='line js-file-line' id='LC213'>					}</div><div class='line js-file-line' id='LC214'>				});</div><div class='line js-file-line' id='LC215'>				<span class="pl-k">return</span> totalDataArray;</div><div class='line js-file-line' id='LC216'>			})();</div><div class='line js-file-line' id='LC217'><br></div><div class='line js-file-line' id='LC218'><br></div><div class='line js-file-line' id='LC219'>			<span class="pl-k">var</span> scaleSizes <span class="pl-k">=</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleOverride) <span class="pl-k">?</span></div><div class='line js-file-line' id='LC220'>				{</div><div class='line js-file-line' id='LC221'>					steps<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleSteps,</div><div class='line js-file-line' id='LC222'>					stepValue<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStepWidth,</div><div class='line js-file-line' id='LC223'>					min<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStartValue,</div><div class='line js-file-line' id='LC224'>					max<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStartValue <span class="pl-k">+</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleSteps <span class="pl-k">*</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStepWidth)</div><div class='line js-file-line' id='LC225'>				} <span class="pl-k">:</span></div><div class='line js-file-line' id='LC226'>				helpers.calculateScaleRange(</div><div class='line js-file-line' id='LC227'>					valuesArray,</div><div class='line js-file-line' id='LC228'>					helpers.<span class="pl-c1">min</span>([<span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>, <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>])/<span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC229'>					<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontSize,</div><div class='line js-file-line' id='LC230'>					<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleBeginAtZero,</div><div class='line js-file-line' id='LC231'>					<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleIntegersOnly</div><div class='line js-file-line' id='LC232'>				);</div><div class='line js-file-line' id='LC233'><br></div><div class='line js-file-line' id='LC234'>			helpers.extend(</div><div class='line js-file-line' id='LC235'>				<span class="pl-v">this</span>.scale,</div><div class='line js-file-line' id='LC236'>				scaleSizes</div><div class='line js-file-line' id='LC237'>			);</div><div class='line js-file-line' id='LC238'><br></div><div class='line js-file-line' id='LC239'>		},</div><div class='line js-file-line' id='LC240'>		<span class="pl-en">addData</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">valuesArray</span>,<span class="pl-smi">label</span>){</div><div class='line js-file-line' id='LC241'>			<span class="pl-c">//Map the values array for each of the datasets</span></div><div class='line js-file-line' id='LC242'>			<span class="pl-v">this</span>.scale.valuesCount<span class="pl-k">++</span>;</div><div class='line js-file-line' id='LC243'>			helpers.each(valuesArray,<span class="pl-k">function</span>(<span class="pl-smi">value</span>,<span class="pl-smi">datasetIndex</span>){</div><div class='line js-file-line' id='LC244'>				<span class="pl-k">var</span> pointPosition <span class="pl-k">=</span> <span class="pl-v">this</span>.scale.getPointPosition(<span class="pl-v">this</span>.scale.valuesCount, <span class="pl-v">this</span>.scale.calculateCenterOffset(value));</div><div class='line js-file-line' id='LC245'>				<span class="pl-v">this</span>.datasets[datasetIndex].points.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">this.PointClass</span>({</div><div class='line js-file-line' id='LC246'>					value <span class="pl-k">:</span> value,</div><div class='line js-file-line' id='LC247'>					label <span class="pl-k">:</span> label,</div><div class='line js-file-line' id='LC248'>					datasetLabel<span class="pl-k">:</span> <span class="pl-v">this</span>.datasets[datasetIndex].<span class="pl-c1">label</span>,</div><div class='line js-file-line' id='LC249'>					x<span class="pl-k">:</span> pointPosition.<span class="pl-c1">x</span>,</div><div class='line js-file-line' id='LC250'>					y<span class="pl-k">:</span> pointPosition.<span class="pl-c1">y</span>,</div><div class='line js-file-line' id='LC251'>					strokeColor <span class="pl-k">:</span> <span class="pl-v">this</span>.datasets[datasetIndex].pointStrokeColor,</div><div class='line js-file-line' id='LC252'>					fillColor <span class="pl-k">:</span> <span class="pl-v">this</span>.datasets[datasetIndex].pointColor</div><div class='line js-file-line' id='LC253'>				}));</div><div class='line js-file-line' id='LC254'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC255'><br></div><div class='line js-file-line' id='LC256'>			<span class="pl-v">this</span>.scale.labels.<span class="pl-c1">push</span>(label);</div><div class='line js-file-line' id='LC257'><br></div><div class='line js-file-line' id='LC258'>			<span class="pl-v">this</span>.reflow();</div><div class='line js-file-line' id='LC259'><br></div><div class='line js-file-line' id='LC260'>			<span class="pl-v">this</span>.update();</div><div class='line js-file-line' id='LC261'>		},</div><div class='line js-file-line' id='LC262'>		<span class="pl-en">removeData</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC263'>			<span class="pl-v">this</span>.scale.valuesCount<span class="pl-k">--</span>;</div><div class='line js-file-line' id='LC264'>			<span class="pl-v">this</span>.scale.labels.<span class="pl-c1">shift</span>();</div><div class='line js-file-line' id='LC265'>			helpers.each(<span class="pl-v">this</span>.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC266'>				dataset.points.<span class="pl-c1">shift</span>();</div><div class='line js-file-line' id='LC267'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC268'>			<span class="pl-v">this</span>.reflow();</div><div class='line js-file-line' id='LC269'>			<span class="pl-v">this</span>.update();</div><div class='line js-file-line' id='LC270'>		},</div><div class='line js-file-line' id='LC271'>		<span class="pl-en">update</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC272'>			<span class="pl-v">this</span>.eachPoints(<span class="pl-k">function</span>(<span class="pl-smi">point</span>){</div><div class='line js-file-line' id='LC273'>				point.save();</div><div class='line js-file-line' id='LC274'>			});</div><div class='line js-file-line' id='LC275'>			<span class="pl-v">this</span>.reflow();</div><div class='line js-file-line' id='LC276'>			<span class="pl-v">this</span>.render();</div><div class='line js-file-line' id='LC277'>		},</div><div class='line js-file-line' id='LC278'>		<span class="pl-en">reflow</span><span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC279'>			helpers.extend(<span class="pl-v">this</span>.scale, {</div><div class='line js-file-line' id='LC280'>				width <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>,</div><div class='line js-file-line' id='LC281'>				height<span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>,</div><div class='line js-file-line' id='LC282'>				size <span class="pl-k">:</span> helpers.<span class="pl-c1">min</span>([<span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>, <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>]),</div><div class='line js-file-line' id='LC283'>				xCenter<span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>/<span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC284'>				yCenter<span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>/<span class="pl-c1">2</span></div><div class='line js-file-line' id='LC285'>			});</div><div class='line js-file-line' id='LC286'>			<span class="pl-v">this</span>.updateScaleRange(<span class="pl-v">this</span>.datasets);</div><div class='line js-file-line' id='LC287'>			<span class="pl-v">this</span>.scale.setScaleSize();</div><div class='line js-file-line' id='LC288'>			<span class="pl-v">this</span>.scale.buildYLabels();</div><div class='line js-file-line' id='LC289'>		},</div><div class='line js-file-line' id='LC290'>		<span class="pl-en">draw</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">ease</span>){</div><div class='line js-file-line' id='LC291'>			<span class="pl-k">var</span> easeDecimal <span class="pl-k">=</span> ease <span class="pl-k">||</span> <span class="pl-c1">1</span>,</div><div class='line js-file-line' id='LC292'>				ctx <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.ctx;</div><div class='line js-file-line' id='LC293'>			<span class="pl-v">this</span>.<span class="pl-c1">clear</span>();</div><div class='line js-file-line' id='LC294'>			<span class="pl-v">this</span>.scale.draw();</div><div class='line js-file-line' id='LC295'><br></div><div class='line js-file-line' id='LC296'>			helpers.each(<span class="pl-v">this</span>.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC297'><br></div><div class='line js-file-line' id='LC298'>				<span class="pl-c">//Transition each point first so that the line and point drawing isn&#39;t out of sync</span></div><div class='line js-file-line' id='LC299'>				helpers.each(dataset.points,<span class="pl-k">function</span>(<span class="pl-smi">point</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC300'>					<span class="pl-k">if</span> (point.hasValue()){</div><div class='line js-file-line' id='LC301'>						point.transition(<span class="pl-v">this</span>.scale.getPointPosition(index, <span class="pl-v">this</span>.scale.calculateCenterOffset(point.<span class="pl-c1">value</span>)), easeDecimal);</div><div class='line js-file-line' id='LC302'>					}</div><div class='line js-file-line' id='LC303'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC304'><br></div><div class='line js-file-line' id='LC305'><br></div><div class='line js-file-line' id='LC306'><br></div><div class='line js-file-line' id='LC307'>				<span class="pl-c">//Draw the line between all the points</span></div><div class='line js-file-line' id='LC308'>				ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.datasetStrokeWidth;</div><div class='line js-file-line' id='LC309'>				ctx.strokeStyle <span class="pl-k">=</span> dataset.strokeColor;</div><div class='line js-file-line' id='LC310'>				ctx.beginPath();</div><div class='line js-file-line' id='LC311'>				helpers.each(dataset.points,<span class="pl-k">function</span>(<span class="pl-smi">point</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC312'>					<span class="pl-k">if</span> (index <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC313'>						ctx.<span class="pl-c1">moveTo</span>(point.<span class="pl-c1">x</span>,point.<span class="pl-c1">y</span>);</div><div class='line js-file-line' id='LC314'>					}</div><div class='line js-file-line' id='LC315'>					<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC316'>						ctx.lineTo(point.<span class="pl-c1">x</span>,point.<span class="pl-c1">y</span>);</div><div class='line js-file-line' id='LC317'>					}</div><div class='line js-file-line' id='LC318'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC319'>				ctx.closePath();</div><div class='line js-file-line' id='LC320'>				ctx.stroke();</div><div class='line js-file-line' id='LC321'><br></div><div class='line js-file-line' id='LC322'>				ctx.fillStyle <span class="pl-k">=</span> dataset.fillColor;</div><div class='line js-file-line' id='LC323'>				<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.datasetFill){</div><div class='line js-file-line' id='LC324'>					ctx.fill();</div><div class='line js-file-line' id='LC325'>				}</div><div class='line js-file-line' id='LC326'>				<span class="pl-c">//Now draw the points over the line</span></div><div class='line js-file-line' id='LC327'>				<span class="pl-c">//A little inefficient double looping, but better than the line</span></div><div class='line js-file-line' id='LC328'>				<span class="pl-c">//lagging behind the point positions</span></div><div class='line js-file-line' id='LC329'>				helpers.each(dataset.points,<span class="pl-k">function</span>(<span class="pl-smi">point</span>){</div><div class='line js-file-line' id='LC330'>					<span class="pl-k">if</span> (point.hasValue()){</div><div class='line js-file-line' id='LC331'>						point.draw();</div><div class='line js-file-line' id='LC332'>					}</div><div class='line js-file-line' id='LC333'>				});</div><div class='line js-file-line' id='LC334'><br></div><div class='line js-file-line' id='LC335'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC336'><br></div><div class='line js-file-line' id='LC337'>		}</div><div class='line js-file-line' id='LC338'><br></div><div class='line js-file-line' id='LC339'>	});</div><div class='line js-file-line' id='LC340'><br></div><div class='line js-file-line' id='LC341'><br></div><div class='line js-file-line' id='LC342'><br></div><div class='line js-file-line' id='LC343'><br></div><div class='line js-file-line' id='LC344'><br></div><div class='line js-file-line' id='LC345'>}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</div></pre></div></div>
  </div>



  <footer class="clearfix">
    <div class="container">
      <a href="#"><span class="mega-octicon octicon-mark-github"></span></a>

      <ul class="clearfix">
        <li>
          <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/site/mobile_preference" class="js-mobile-preference-form" data-form-nonce="8b41a82aad02ec38c10a36ecb249a6ef31da82b3" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="RstTjaIXH6S5Yez4cSeioTL+Hia1BoKiEAxWOKWsG+w9PhA1jCWdXwEfWd7RFYXey2uyfoKsdo0TImLUjLQLXQ==" /></div>
            <input type="hidden" name="mobile" value="false">
            <input type="hidden" name="anchor" class="js-mobile-preference-anchor-field">

            <button type="submit" class="switch-to-desktop" data-ga-click="Mobile, switch to desktop, switch button">
              Desktop version
            </button>
</form>        </li>

      </ul>
    </div>
  </footer>
  
</body>
</html>


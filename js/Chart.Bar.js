



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1" media="(device-height: 568px)">
  <meta http-equiv="Content-Language" content="en">
  <link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-precomposed.png">
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="/apple-touch-icon-114-precomposed.png">
      <meta name="google-analytics" content="UA-3769691-2">
    <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
  <meta name="theme-color" content="#f5f5f5">

  
  <meta content="Rails, view, blob#show" data-pjax-transient="true" name="analytics-event" />
  <meta class="js-ga-set" name="dimension1" content="Logged Out">
    <meta class="js-ga-set" name="dimension3" content="mobile">

  <!-- </textarea> --><!-- '"` --><meta content="authenticity_token" name="csrf-param" />
<meta content="aANKYIl5/YcxZPd40f954nHFptGVZR5qlyBkFCLBVPNcUVcAIbv7b3wwQuFsfgzJSgxILRSFV59tzhTm9sDt1A==" name="csrf-token" />

  <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="0575EF2B:6D91:B5898E2:55C6ED12" name="octolytics-dimension-request_id" />
  <meta content="mobile" name="octolytics-dimension-device" />
  <meta content="1458051" name="octolytics-dimension-user_id" /><meta content="nnnick" name="octolytics-dimension-user_login" /><meta content="8843683" name="octolytics-dimension-repository_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="8843683" name="octolytics-dimension-repository_network_root_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_network_root_nwo" />
  

  <title>GitHub Â· Build software better, together.</title>

  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/mobile/index-2925272909e6f36816412cdb6d8a151ed00201f3c8ed4104dda4250b06630146.css" media="all" rel="stylesheet" />
  <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/mobile/index-c612fa633714ea237b8f720b5fea970980ef59fdfe134bec23b43831f1d98f14.js"></script>
</head>
<body class="">
  <header class="nav-bar">
    <div class="nav-bar-inner">
      

      <button class="header-button header-nav-button touchable js-show-global-nav">
        <span class="octicon octicon-three-bars"></span>

      </button>

      <div class="nav-bar-title-text">
              <span class="octicon octicon-repo"></span>

    <strong><a href="/nnnick">nnnick</a></strong>
    /
    <strong><a href="/nnnick/Chart.js">Chart.js</a></strong>

      </div>
    </div>


    <nav class="nav-bar-tabs repo-nav-bar-tabs">
      <ul>
          <li>
            <a href="/explore">
              <span class="octicon octicon-telescope"></span>
              Explore
            </a>
          </li>
        <li>
            <a href="/login?return_to=%2Fnnnick%2FChart.js%2Fblob%2Fmaster%2Fsrc%2FChart.Bar.js">
              <span class="octicon octicon-sign-in"></span>
              Sign in
            </a>
        </li>
            <li class="section-title">This repository</li>
    <li><a href="/nnnick/Chart.js?files=1"><span class="octicon octicon-code"></span> Code</a></li>
      <li><a href="/nnnick/Chart.js/issues"><span class="octicon octicon-issue-opened"></span> Issues</a></li>
    <li><a href="/nnnick/Chart.js/pulls"><span class="octicon octicon-git-pull-request"></span> Pull Requests</a></li>
    <li><a href="/nnnick/Chart.js/pulse"><span class="octicon octicon-pulse"></span> Pulse</a></li>

      </ul>
    </nav>
  </header>


  

        

<div class="breadcrumb blob-breadcrumb">
  <label for="blob-history-checkbox" class="blob-history-label">
    <span class="octicon octicon-history"></span>
  </label>
  <span class="filetype-icon"><span class="octicon octicon-file-text"></span></span>
  <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nnnick/Chart.js/tree/master/src" class="" data-branch="master" data-pjax="true" itemscope="url"><span itemprop="title">src</span></a></span><span class="separator">/</span><strong class="final-path">Chart.Bar.js</strong>
</div>

<input id="blob-history-checkbox"
       class="js-blob-history-checkbox"
       type="checkbox"
       data-url="/nnnick/Chart.js/latest_commit/master/src/Chart.Bar.js">

<div class="blob-history">
  <a href="/nnnick/Chart.js/commits/master/src/Chart.Bar.js" class="js-blob-history-link">
    Loading latest commit...
</a></div>

  <div class="blob-file-content js-file-line-container">
    <div class="highlighted-blob tab-size" data-tab-size="8"><div class="code-body highlight"><pre><div class='line js-file-line' id='LC1'>(<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC2'>	<span class="pl-s"><span class="pl-pds">&quot;</span>use strict<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC3'><br></div><div class='line js-file-line' id='LC4'>	<span class="pl-k">var</span> root <span class="pl-k">=</span> <span class="pl-v">this</span>,</div><div class='line js-file-line' id='LC5'>		Chart <span class="pl-k">=</span> root.Chart,</div><div class='line js-file-line' id='LC6'>		helpers <span class="pl-k">=</span> Chart.helpers;</div><div class='line js-file-line' id='LC7'><br></div><div class='line js-file-line' id='LC8'><br></div><div class='line js-file-line' id='LC9'>	<span class="pl-k">var</span> defaultConfig <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC10'>		<span class="pl-c">//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value</span></div><div class='line js-file-line' id='LC11'>		scaleBeginAtZero <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC12'><br></div><div class='line js-file-line' id='LC13'>		<span class="pl-c">//Boolean - Whether grid lines are shown across the chart</span></div><div class='line js-file-line' id='LC14'>		scaleShowGridLines <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC15'><br></div><div class='line js-file-line' id='LC16'>		<span class="pl-c">//String - Colour of the grid lines</span></div><div class='line js-file-line' id='LC17'>		scaleGridLineColor <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,.05)<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC18'><br></div><div class='line js-file-line' id='LC19'>		<span class="pl-c">//Number - Width of the grid lines</span></div><div class='line js-file-line' id='LC20'>		scaleGridLineWidth <span class="pl-k">:</span> <span class="pl-c1">1</span>,</div><div class='line js-file-line' id='LC21'><br></div><div class='line js-file-line' id='LC22'>		<span class="pl-c">//Boolean - Whether to show horizontal lines (except X axis)</span></div><div class='line js-file-line' id='LC23'>		scaleShowHorizontalLines<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC24'><br></div><div class='line js-file-line' id='LC25'>		<span class="pl-c">//Boolean - Whether to show vertical lines (except Y axis)</span></div><div class='line js-file-line' id='LC26'>		scaleShowVerticalLines<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC27'><br></div><div class='line js-file-line' id='LC28'>		<span class="pl-c">//Boolean - If there is a stroke on each bar</span></div><div class='line js-file-line' id='LC29'>		barShowStroke <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC30'><br></div><div class='line js-file-line' id='LC31'>		<span class="pl-c">//Number - Pixel width of the bar stroke</span></div><div class='line js-file-line' id='LC32'>		barStrokeWidth <span class="pl-k">:</span> <span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC33'><br></div><div class='line js-file-line' id='LC34'>		<span class="pl-c">//Number - Spacing between each of the X value sets</span></div><div class='line js-file-line' id='LC35'>		barValueSpacing <span class="pl-k">:</span> <span class="pl-c1">5</span>,</div><div class='line js-file-line' id='LC36'><br></div><div class='line js-file-line' id='LC37'>		<span class="pl-c">//Number - Spacing between data sets within X values</span></div><div class='line js-file-line' id='LC38'>		barDatasetSpacing <span class="pl-k">:</span> <span class="pl-c1">1</span>,</div><div class='line js-file-line' id='LC39'><br></div><div class='line js-file-line' id='LC40'>		<span class="pl-c">//String - A legend template</span></div><div class='line js-file-line' id='LC41'>		legendTemplate <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;ul class=<span class="pl-cce">\&quot;</span>&lt;%=name.toLowerCase()%&gt;-legend<span class="pl-cce">\&quot;</span>&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=<span class="pl-cce">\&quot;</span>background-color:&lt;%=datasets[i].fillColor%&gt;<span class="pl-cce">\&quot;</span>&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/span&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;<span class="pl-pds">&quot;</span></span></div><div class='line js-file-line' id='LC42'><br></div><div class='line js-file-line' id='LC43'>	};</div><div class='line js-file-line' id='LC44'><br></div><div class='line js-file-line' id='LC45'><br></div><div class='line js-file-line' id='LC46'>	Chart.Type.extend({</div><div class='line js-file-line' id='LC47'>		name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Bar<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC48'>		defaults <span class="pl-k">:</span> defaultConfig,</div><div class='line js-file-line' id='LC49'>		<span class="pl-en">initialize</span><span class="pl-k">:</span>  <span class="pl-k">function</span>(<span class="pl-smi">data</span>){</div><div class='line js-file-line' id='LC50'><br></div><div class='line js-file-line' id='LC51'>			<span class="pl-c">//Expose options as a scope variable here so we can access it in the ScaleClass</span></div><div class='line js-file-line' id='LC52'>			<span class="pl-k">var</span> options <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>;</div><div class='line js-file-line' id='LC53'><br></div><div class='line js-file-line' id='LC54'>			<span class="pl-v">this</span>.ScaleClass <span class="pl-k">=</span> Chart.Scale.extend({</div><div class='line js-file-line' id='LC55'>				offsetGridLines <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC56'>				<span class="pl-en">calculateBarX</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">datasetCount</span>, <span class="pl-smi">datasetIndex</span>, <span class="pl-smi">barIndex</span>){</div><div class='line js-file-line' id='LC57'>					<span class="pl-c">//Reusable method for calculating the xPosition of a given bar based on datasetIndex &amp; width of the bar</span></div><div class='line js-file-line' id='LC58'>					<span class="pl-k">var</span> xWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.calculateBaseWidth(),</div><div class='line js-file-line' id='LC59'>						xAbsolute <span class="pl-k">=</span> <span class="pl-v">this</span>.calculateX(barIndex) <span class="pl-k">-</span> (xWidth/<span class="pl-c1">2</span>),</div><div class='line js-file-line' id='LC60'>						barWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.calculateBarWidth(datasetCount);</div><div class='line js-file-line' id='LC61'><br></div><div class='line js-file-line' id='LC62'>					<span class="pl-k">return</span> xAbsolute <span class="pl-k">+</span> (barWidth <span class="pl-k">*</span> datasetIndex) <span class="pl-k">+</span> (datasetIndex <span class="pl-k">*</span> options.barDatasetSpacing) <span class="pl-k">+</span> barWidth/<span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC63'>				},</div><div class='line js-file-line' id='LC64'>				<span class="pl-en">calculateBaseWidth</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC65'>					<span class="pl-k">return</span> (<span class="pl-v">this</span>.calculateX(<span class="pl-c1">1</span>) <span class="pl-k">-</span> <span class="pl-v">this</span>.calculateX(<span class="pl-c1">0</span>)) <span class="pl-k">-</span> (<span class="pl-c1">2</span><span class="pl-k">*</span>options.barValueSpacing);</div><div class='line js-file-line' id='LC66'>				},</div><div class='line js-file-line' id='LC67'>				<span class="pl-en">calculateBarWidth</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">datasetCount</span>){</div><div class='line js-file-line' id='LC68'>					<span class="pl-c">//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset</span></div><div class='line js-file-line' id='LC69'>					<span class="pl-k">var</span> baseWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.calculateBaseWidth() <span class="pl-k">-</span> ((datasetCount <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">*</span> options.barDatasetSpacing);</div><div class='line js-file-line' id='LC70'><br></div><div class='line js-file-line' id='LC71'>					<span class="pl-k">return</span> (baseWidth / datasetCount);</div><div class='line js-file-line' id='LC72'>				}</div><div class='line js-file-line' id='LC73'>			});</div><div class='line js-file-line' id='LC74'><br></div><div class='line js-file-line' id='LC75'>			<span class="pl-v">this</span>.datasets <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC76'><br></div><div class='line js-file-line' id='LC77'>			<span class="pl-c">//Set up tooltip events on the chart</span></div><div class='line js-file-line' id='LC78'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.showTooltips){</div><div class='line js-file-line' id='LC79'>				helpers.bindEvents(<span class="pl-v">this</span>, <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipEvents, <span class="pl-k">function</span>(<span class="pl-smi">evt</span>){</div><div class='line js-file-line' id='LC80'>					<span class="pl-k">var</span> activeBars <span class="pl-k">=</span> (evt.<span class="pl-c1">type</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>mouseout<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-v">this</span>.getBarsAtEvent(evt) <span class="pl-k">:</span> [];</div><div class='line js-file-line' id='LC81'><br></div><div class='line js-file-line' id='LC82'>					<span class="pl-v">this</span>.eachBars(<span class="pl-k">function</span>(<span class="pl-smi">bar</span>){</div><div class='line js-file-line' id='LC83'>						bar.restore([<span class="pl-s"><span class="pl-pds">&#39;</span>fillColor<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>strokeColor<span class="pl-pds">&#39;</span></span>]);</div><div class='line js-file-line' id='LC84'>					});</div><div class='line js-file-line' id='LC85'>					helpers.each(activeBars, <span class="pl-k">function</span>(<span class="pl-smi">activeBar</span>){</div><div class='line js-file-line' id='LC86'>						activeBar.fillColor <span class="pl-k">=</span> activeBar.highlightFill;</div><div class='line js-file-line' id='LC87'>						activeBar.strokeColor <span class="pl-k">=</span> activeBar.highlightStroke;</div><div class='line js-file-line' id='LC88'>					});</div><div class='line js-file-line' id='LC89'>					<span class="pl-v">this</span>.showTooltip(activeBars);</div><div class='line js-file-line' id='LC90'>				});</div><div class='line js-file-line' id='LC91'>			}</div><div class='line js-file-line' id='LC92'><br></div><div class='line js-file-line' id='LC93'>			<span class="pl-c">//Declare the extension of the default point, to cater for the options passed in to the constructor</span></div><div class='line js-file-line' id='LC94'>			<span class="pl-v">this</span>.BarClass <span class="pl-k">=</span> Chart.Rectangle.extend({</div><div class='line js-file-line' id='LC95'>				strokeWidth <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.barStrokeWidth,</div><div class='line js-file-line' id='LC96'>				showStroke <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.barShowStroke,</div><div class='line js-file-line' id='LC97'>				ctx <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.ctx</div><div class='line js-file-line' id='LC98'>			});</div><div class='line js-file-line' id='LC99'><br></div><div class='line js-file-line' id='LC100'>			<span class="pl-c">//Iterate through each of the datasets, and build this into a property of the chart</span></div><div class='line js-file-line' id='LC101'>			helpers.each(data.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>,<span class="pl-smi">datasetIndex</span>){</div><div class='line js-file-line' id='LC102'><br></div><div class='line js-file-line' id='LC103'>				<span class="pl-k">var</span> datasetObject <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC104'>					label <span class="pl-k">:</span> dataset.<span class="pl-c1">label</span> <span class="pl-k">||</span> <span class="pl-c1">null</span>,</div><div class='line js-file-line' id='LC105'>					fillColor <span class="pl-k">:</span> dataset.fillColor,</div><div class='line js-file-line' id='LC106'>					strokeColor <span class="pl-k">:</span> dataset.strokeColor,</div><div class='line js-file-line' id='LC107'>					bars <span class="pl-k">:</span> []</div><div class='line js-file-line' id='LC108'>				};</div><div class='line js-file-line' id='LC109'><br></div><div class='line js-file-line' id='LC110'>				<span class="pl-v">this</span>.datasets.<span class="pl-c1">push</span>(datasetObject);</div><div class='line js-file-line' id='LC111'><br></div><div class='line js-file-line' id='LC112'>				helpers.each(dataset.<span class="pl-c1">data</span>,<span class="pl-k">function</span>(<span class="pl-smi">dataPoint</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC113'>					<span class="pl-c">//Add a new point for each piece of data, passing any required data to draw.</span></div><div class='line js-file-line' id='LC114'>					datasetObject.bars.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">this.BarClass</span>({</div><div class='line js-file-line' id='LC115'>						value <span class="pl-k">:</span> dataPoint,</div><div class='line js-file-line' id='LC116'>						label <span class="pl-k">:</span> data.labels[index],</div><div class='line js-file-line' id='LC117'>						datasetLabel<span class="pl-k">:</span> dataset.<span class="pl-c1">label</span>,</div><div class='line js-file-line' id='LC118'>						strokeColor <span class="pl-k">:</span> dataset.strokeColor,</div><div class='line js-file-line' id='LC119'>						fillColor <span class="pl-k">:</span> dataset.fillColor,</div><div class='line js-file-line' id='LC120'>						highlightFill <span class="pl-k">:</span> dataset.highlightFill <span class="pl-k">||</span> dataset.fillColor,</div><div class='line js-file-line' id='LC121'>						highlightStroke <span class="pl-k">:</span> dataset.highlightStroke <span class="pl-k">||</span> dataset.strokeColor</div><div class='line js-file-line' id='LC122'>					}));</div><div class='line js-file-line' id='LC123'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC124'><br></div><div class='line js-file-line' id='LC125'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC126'><br></div><div class='line js-file-line' id='LC127'>			<span class="pl-v">this</span>.buildScale(data.labels);</div><div class='line js-file-line' id='LC128'><br></div><div class='line js-file-line' id='LC129'>			<span class="pl-c1">this.BarClass</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">base</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.scale.endPoint;</div><div class='line js-file-line' id='LC130'><br></div><div class='line js-file-line' id='LC131'>			<span class="pl-v">this</span>.eachBars(<span class="pl-k">function</span>(<span class="pl-smi">bar</span>, <span class="pl-smi">index</span>, <span class="pl-smi">datasetIndex</span>){</div><div class='line js-file-line' id='LC132'>				helpers.extend(bar, {</div><div class='line js-file-line' id='LC133'>					width <span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateBarWidth(<span class="pl-v">this</span>.datasets.<span class="pl-c1">length</span>),</div><div class='line js-file-line' id='LC134'>					x<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateBarX(<span class="pl-v">this</span>.datasets.<span class="pl-c1">length</span>, datasetIndex, index),</div><div class='line js-file-line' id='LC135'>					y<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.endPoint</div><div class='line js-file-line' id='LC136'>				});</div><div class='line js-file-line' id='LC137'>				bar.save();</div><div class='line js-file-line' id='LC138'>			}, <span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC139'><br></div><div class='line js-file-line' id='LC140'>			<span class="pl-v">this</span>.render();</div><div class='line js-file-line' id='LC141'>		},</div><div class='line js-file-line' id='LC142'>		<span class="pl-en">update</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC143'>			<span class="pl-v">this</span>.scale.update();</div><div class='line js-file-line' id='LC144'>			<span class="pl-c">// Reset any highlight colours before updating.</span></div><div class='line js-file-line' id='LC145'>			helpers.each(<span class="pl-v">this</span>.activeElements, <span class="pl-k">function</span>(<span class="pl-smi">activeElement</span>){</div><div class='line js-file-line' id='LC146'>				activeElement.restore([<span class="pl-s"><span class="pl-pds">&#39;</span>fillColor<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>strokeColor<span class="pl-pds">&#39;</span></span>]);</div><div class='line js-file-line' id='LC147'>			});</div><div class='line js-file-line' id='LC148'><br></div><div class='line js-file-line' id='LC149'>			<span class="pl-v">this</span>.eachBars(<span class="pl-k">function</span>(<span class="pl-smi">bar</span>){</div><div class='line js-file-line' id='LC150'>				bar.save();</div><div class='line js-file-line' id='LC151'>			});</div><div class='line js-file-line' id='LC152'>			<span class="pl-v">this</span>.render();</div><div class='line js-file-line' id='LC153'>		},</div><div class='line js-file-line' id='LC154'>		<span class="pl-en">eachBars</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>){</div><div class='line js-file-line' id='LC155'>			helpers.each(<span class="pl-v">this</span>.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>, <span class="pl-smi">datasetIndex</span>){</div><div class='line js-file-line' id='LC156'>				helpers.each(dataset.bars, callback, <span class="pl-v">this</span>, datasetIndex);</div><div class='line js-file-line' id='LC157'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC158'>		},</div><div class='line js-file-line' id='LC159'>		<span class="pl-en">getBarsAtEvent</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>){</div><div class='line js-file-line' id='LC160'>			<span class="pl-k">var</span> barsArray <span class="pl-k">=</span> [],</div><div class='line js-file-line' id='LC161'>				eventPosition <span class="pl-k">=</span> helpers.getRelativePosition(e),</div><div class='line js-file-line' id='LC162'>				<span class="pl-en">datasetIterator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC163'>					barsArray.<span class="pl-c1">push</span>(dataset.bars[barIndex]);</div><div class='line js-file-line' id='LC164'>				},</div><div class='line js-file-line' id='LC165'>				barIndex;</div><div class='line js-file-line' id='LC166'><br></div><div class='line js-file-line' id='LC167'>			<span class="pl-k">for</span> (<span class="pl-k">var</span> datasetIndex <span class="pl-k">=</span> <span class="pl-c1">0</span>; datasetIndex <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.datasets.<span class="pl-c1">length</span>; datasetIndex<span class="pl-k">++</span>) {</div><div class='line js-file-line' id='LC168'>				<span class="pl-k">for</span> (barIndex <span class="pl-k">=</span> <span class="pl-c1">0</span>; barIndex <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.datasets[datasetIndex].bars.<span class="pl-c1">length</span>; barIndex<span class="pl-k">++</span>) {</div><div class='line js-file-line' id='LC169'>					<span class="pl-k">if</span> (<span class="pl-v">this</span>.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.<span class="pl-c1">x</span>,eventPosition.<span class="pl-c1">y</span>)){</div><div class='line js-file-line' id='LC170'>						helpers.each(<span class="pl-v">this</span>.datasets, datasetIterator);</div><div class='line js-file-line' id='LC171'>						<span class="pl-k">return</span> barsArray;</div><div class='line js-file-line' id='LC172'>					}</div><div class='line js-file-line' id='LC173'>				}</div><div class='line js-file-line' id='LC174'>			}</div><div class='line js-file-line' id='LC175'><br></div><div class='line js-file-line' id='LC176'>			<span class="pl-k">return</span> barsArray;</div><div class='line js-file-line' id='LC177'>		},</div><div class='line js-file-line' id='LC178'>		<span class="pl-en">buildScale</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">labels</span>){</div><div class='line js-file-line' id='LC179'>			<span class="pl-k">var</span> self <span class="pl-k">=</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC180'><br></div><div class='line js-file-line' id='LC181'>			<span class="pl-k">var</span> <span class="pl-en">dataTotal</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC182'>				<span class="pl-k">var</span> values <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC183'>				self.eachBars(<span class="pl-k">function</span>(<span class="pl-smi">bar</span>){</div><div class='line js-file-line' id='LC184'>					values.<span class="pl-c1">push</span>(bar.<span class="pl-c1">value</span>);</div><div class='line js-file-line' id='LC185'>				});</div><div class='line js-file-line' id='LC186'>				<span class="pl-k">return</span> values;</div><div class='line js-file-line' id='LC187'>			};</div><div class='line js-file-line' id='LC188'><br></div><div class='line js-file-line' id='LC189'>			<span class="pl-k">var</span> scaleOptions <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC190'>				templateString <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleLabel,</div><div class='line js-file-line' id='LC191'>				height <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>,</div><div class='line js-file-line' id='LC192'>				width <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>,</div><div class='line js-file-line' id='LC193'>				ctx <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.ctx,</div><div class='line js-file-line' id='LC194'>				textColor <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontColor,</div><div class='line js-file-line' id='LC195'>				fontSize <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontSize,</div><div class='line js-file-line' id='LC196'>				fontStyle <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontStyle,</div><div class='line js-file-line' id='LC197'>				fontFamily <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontFamily,</div><div class='line js-file-line' id='LC198'>				valuesCount <span class="pl-k">:</span> labels.<span class="pl-c1">length</span>,</div><div class='line js-file-line' id='LC199'>				beginAtZero <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleBeginAtZero,</div><div class='line js-file-line' id='LC200'>				integersOnly <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleIntegersOnly,</div><div class='line js-file-line' id='LC201'>				<span class="pl-en">calculateYRange</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">currentHeight</span>){</div><div class='line js-file-line' id='LC202'>					<span class="pl-k">var</span> updatedRanges <span class="pl-k">=</span> helpers.calculateScaleRange(</div><div class='line js-file-line' id='LC203'>						dataTotal(),</div><div class='line js-file-line' id='LC204'>						currentHeight,</div><div class='line js-file-line' id='LC205'>						<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>,</div><div class='line js-file-line' id='LC206'>						<span class="pl-v">this</span>.beginAtZero,</div><div class='line js-file-line' id='LC207'>						<span class="pl-v">this</span>.integersOnly</div><div class='line js-file-line' id='LC208'>					);</div><div class='line js-file-line' id='LC209'>					helpers.extend(<span class="pl-v">this</span>, updatedRanges);</div><div class='line js-file-line' id='LC210'>				},</div><div class='line js-file-line' id='LC211'>				xLabels <span class="pl-k">:</span> labels,</div><div class='line js-file-line' id='LC212'>				font <span class="pl-k">:</span> helpers.fontString(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontSize, <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontStyle, <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontFamily),</div><div class='line js-file-line' id='LC213'>				lineWidth <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleLineWidth,</div><div class='line js-file-line' id='LC214'>				lineColor <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleLineColor,</div><div class='line js-file-line' id='LC215'>				showHorizontalLines <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowHorizontalLines,</div><div class='line js-file-line' id='LC216'>				showVerticalLines <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowVerticalLines,</div><div class='line js-file-line' id='LC217'>				gridLineWidth <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowGridLines) <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleGridLineWidth <span class="pl-k">:</span> <span class="pl-c1">0</span>,</div><div class='line js-file-line' id='LC218'>				gridLineColor <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowGridLines) <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleGridLineColor <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,0)<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC219'>				padding <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.showScale) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.barShowStroke) <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.barStrokeWidth <span class="pl-k">:</span> <span class="pl-c1">0</span>,</div><div class='line js-file-line' id='LC220'>				showLabels <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowLabels,</div><div class='line js-file-line' id='LC221'>				display <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.showScale</div><div class='line js-file-line' id='LC222'>			};</div><div class='line js-file-line' id='LC223'><br></div><div class='line js-file-line' id='LC224'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleOverride){</div><div class='line js-file-line' id='LC225'>				helpers.extend(scaleOptions, {</div><div class='line js-file-line' id='LC226'>					calculateYRange<span class="pl-k">:</span> helpers.noop,</div><div class='line js-file-line' id='LC227'>					steps<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleSteps,</div><div class='line js-file-line' id='LC228'>					stepValue<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStepWidth,</div><div class='line js-file-line' id='LC229'>					min<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStartValue,</div><div class='line js-file-line' id='LC230'>					max<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStartValue <span class="pl-k">+</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleSteps <span class="pl-k">*</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStepWidth)</div><div class='line js-file-line' id='LC231'>				});</div><div class='line js-file-line' id='LC232'>			}</div><div class='line js-file-line' id='LC233'><br></div><div class='line js-file-line' id='LC234'>			<span class="pl-v">this</span>.scale <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">this.ScaleClass</span>(scaleOptions);</div><div class='line js-file-line' id='LC235'>		},</div><div class='line js-file-line' id='LC236'>		<span class="pl-en">addData</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">valuesArray</span>,<span class="pl-smi">label</span>){</div><div class='line js-file-line' id='LC237'>			<span class="pl-c">//Map the values array for each of the datasets</span></div><div class='line js-file-line' id='LC238'>			helpers.each(valuesArray,<span class="pl-k">function</span>(<span class="pl-smi">value</span>,<span class="pl-smi">datasetIndex</span>){</div><div class='line js-file-line' id='LC239'>				<span class="pl-c">//Add a new point for each piece of data, passing any required data to draw.</span></div><div class='line js-file-line' id='LC240'>				<span class="pl-v">this</span>.datasets[datasetIndex].bars.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">this.BarClass</span>({</div><div class='line js-file-line' id='LC241'>					value <span class="pl-k">:</span> value,</div><div class='line js-file-line' id='LC242'>					label <span class="pl-k">:</span> label,</div><div class='line js-file-line' id='LC243'>					datasetLabel<span class="pl-k">:</span> <span class="pl-v">this</span>.datasets[datasetIndex].<span class="pl-c1">label</span>,</div><div class='line js-file-line' id='LC244'>					x<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateBarX(<span class="pl-v">this</span>.datasets.<span class="pl-c1">length</span>, datasetIndex, <span class="pl-v">this</span>.scale.valuesCount<span class="pl-k">+</span><span class="pl-c1">1</span>),</div><div class='line js-file-line' id='LC245'>					y<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.endPoint,</div><div class='line js-file-line' id='LC246'>					width <span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateBarWidth(<span class="pl-v">this</span>.datasets.<span class="pl-c1">length</span>),</div><div class='line js-file-line' id='LC247'>					base <span class="pl-k">:</span> <span class="pl-v">this</span>.scale.endPoint,</div><div class='line js-file-line' id='LC248'>					strokeColor <span class="pl-k">:</span> <span class="pl-v">this</span>.datasets[datasetIndex].strokeColor,</div><div class='line js-file-line' id='LC249'>					fillColor <span class="pl-k">:</span> <span class="pl-v">this</span>.datasets[datasetIndex].fillColor</div><div class='line js-file-line' id='LC250'>				}));</div><div class='line js-file-line' id='LC251'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC252'><br></div><div class='line js-file-line' id='LC253'>			<span class="pl-v">this</span>.scale.addXLabel(label);</div><div class='line js-file-line' id='LC254'>			<span class="pl-c">//Then re-render the chart.</span></div><div class='line js-file-line' id='LC255'>			<span class="pl-v">this</span>.update();</div><div class='line js-file-line' id='LC256'>		},</div><div class='line js-file-line' id='LC257'>		<span class="pl-en">removeData</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC258'>			<span class="pl-v">this</span>.scale.removeXLabel();</div><div class='line js-file-line' id='LC259'>			<span class="pl-c">//Then re-render the chart.</span></div><div class='line js-file-line' id='LC260'>			helpers.each(<span class="pl-v">this</span>.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC261'>				dataset.bars.<span class="pl-c1">shift</span>();</div><div class='line js-file-line' id='LC262'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC263'>			<span class="pl-v">this</span>.update();</div><div class='line js-file-line' id='LC264'>		},</div><div class='line js-file-line' id='LC265'>		<span class="pl-en">reflow</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC266'>			helpers.extend(<span class="pl-v">this</span>.BarClass.<span class="pl-c1">prototype</span>,{</div><div class='line js-file-line' id='LC267'>				y<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.endPoint,</div><div class='line js-file-line' id='LC268'>				base <span class="pl-k">:</span> <span class="pl-v">this</span>.scale.endPoint</div><div class='line js-file-line' id='LC269'>			});</div><div class='line js-file-line' id='LC270'>			<span class="pl-k">var</span> newScaleProps <span class="pl-k">=</span> helpers.extend({</div><div class='line js-file-line' id='LC271'>				height <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>,</div><div class='line js-file-line' id='LC272'>				width <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span></div><div class='line js-file-line' id='LC273'>			});</div><div class='line js-file-line' id='LC274'>			<span class="pl-v">this</span>.scale.update(newScaleProps);</div><div class='line js-file-line' id='LC275'>		},</div><div class='line js-file-line' id='LC276'>		<span class="pl-en">draw</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">ease</span>){</div><div class='line js-file-line' id='LC277'>			<span class="pl-k">var</span> easingDecimal <span class="pl-k">=</span> ease <span class="pl-k">||</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC278'>			<span class="pl-v">this</span>.<span class="pl-c1">clear</span>();</div><div class='line js-file-line' id='LC279'><br></div><div class='line js-file-line' id='LC280'>			<span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.ctx;</div><div class='line js-file-line' id='LC281'><br></div><div class='line js-file-line' id='LC282'>			<span class="pl-v">this</span>.scale.draw(easingDecimal);</div><div class='line js-file-line' id='LC283'><br></div><div class='line js-file-line' id='LC284'>			<span class="pl-c">//Draw all the bars for each dataset</span></div><div class='line js-file-line' id='LC285'>			helpers.each(<span class="pl-v">this</span>.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>,<span class="pl-smi">datasetIndex</span>){</div><div class='line js-file-line' id='LC286'>				helpers.each(dataset.bars,<span class="pl-k">function</span>(<span class="pl-smi">bar</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC287'>					<span class="pl-k">if</span> (bar.hasValue()){</div><div class='line js-file-line' id='LC288'>						bar.base <span class="pl-k">=</span> <span class="pl-v">this</span>.scale.endPoint;</div><div class='line js-file-line' id='LC289'>						<span class="pl-c">//Transition then draw</span></div><div class='line js-file-line' id='LC290'>						bar.transition({</div><div class='line js-file-line' id='LC291'>							x <span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateBarX(<span class="pl-v">this</span>.datasets.<span class="pl-c1">length</span>, datasetIndex, index),</div><div class='line js-file-line' id='LC292'>							y <span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateY(bar.<span class="pl-c1">value</span>),</div><div class='line js-file-line' id='LC293'>							width <span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateBarWidth(<span class="pl-v">this</span>.datasets.<span class="pl-c1">length</span>)</div><div class='line js-file-line' id='LC294'>						}, easingDecimal).draw();</div><div class='line js-file-line' id='LC295'>					}</div><div class='line js-file-line' id='LC296'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC297'><br></div><div class='line js-file-line' id='LC298'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC299'>		}</div><div class='line js-file-line' id='LC300'>	});</div><div class='line js-file-line' id='LC301'><br></div><div class='line js-file-line' id='LC302'><br></div><div class='line js-file-line' id='LC303'>}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</div></pre></div></div>
  </div>



  <footer class="clearfix">
    <div class="container">
      <a href="#"><span class="mega-octicon octicon-mark-github"></span></a>

      <ul class="clearfix">
        <li>
          <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/site/mobile_preference" class="js-mobile-preference-form" data-form-nonce="8b41a82aad02ec38c10a36ecb249a6ef31da82b3" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="b8xVHVnzPyBiq9grYAyPTPItAZ31aqqKvzNT5FOYXaV7jRA3qV4SW1FT7bbaw176rmSuh1ifLzSNlHJ/UZul7A==" /></div>
            <input type="hidden" name="mobile" value="false">
            <input type="hidden" name="anchor" class="js-mobile-preference-anchor-field">

            <button type="submit" class="switch-to-desktop" data-ga-click="Mobile, switch to desktop, switch button">
              Desktop version
            </button>
</form>        </li>

      </ul>
    </div>
  </footer>
  
</body>
</html>


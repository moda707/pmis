



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1" media="(device-height: 568px)">
  <meta http-equiv="Content-Language" content="en">
  <link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-precomposed.png">
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="/apple-touch-icon-114-precomposed.png">
      <meta name="google-analytics" content="UA-3769691-2">
    <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
  <meta name="theme-color" content="#f5f5f5">

  
  <meta content="Rails, view, blob#show" data-pjax-transient="true" name="analytics-event" />
  <meta class="js-ga-set" name="dimension1" content="Logged Out">
    <meta class="js-ga-set" name="dimension3" content="mobile">

  <!-- </textarea> --><!-- '"` --><meta content="authenticity_token" name="csrf-param" />
<meta content="S5HXu4h1dc6ksEGbYyP5KXmNI5VQT7tV7Riuw9ZmrfdABbt6z5fzdX8ZsEkc4hT/+1KXra2ofEmgdRG5f5zI5w==" name="csrf-token" />

  <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="0575EF2B:6D91:B58A43C:55C6ED21" name="octolytics-dimension-request_id" />
  <meta content="mobile" name="octolytics-dimension-device" />
  <meta content="1458051" name="octolytics-dimension-user_id" /><meta content="nnnick" name="octolytics-dimension-user_login" /><meta content="8843683" name="octolytics-dimension-repository_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="8843683" name="octolytics-dimension-repository_network_root_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_network_root_nwo" />
  

  <title>GitHub Â· Build software better, together.</title>

  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/mobile/index-2925272909e6f36816412cdb6d8a151ed00201f3c8ed4104dda4250b06630146.css" media="all" rel="stylesheet" />
  <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/mobile/index-c612fa633714ea237b8f720b5fea970980ef59fdfe134bec23b43831f1d98f14.js"></script>
</head>
<body class="">
  <header class="nav-bar">
    <div class="nav-bar-inner">
      

      <button class="header-button header-nav-button touchable js-show-global-nav">
        <span class="octicon octicon-three-bars"></span>

      </button>

      <div class="nav-bar-title-text">
              <span class="octicon octicon-repo"></span>

    <strong><a href="/nnnick">nnnick</a></strong>
    /
    <strong><a href="/nnnick/Chart.js">Chart.js</a></strong>

      </div>
    </div>


    <nav class="nav-bar-tabs repo-nav-bar-tabs">
      <ul>
          <li>
            <a href="/explore">
              <span class="octicon octicon-telescope"></span>
              Explore
            </a>
          </li>
        <li>
            <a href="/login?return_to=%2Fnnnick%2FChart.js%2Fblob%2Fmaster%2Fsrc%2FChart.Doughnut.js">
              <span class="octicon octicon-sign-in"></span>
              Sign in
            </a>
        </li>
            <li class="section-title">This repository</li>
    <li><a href="/nnnick/Chart.js?files=1"><span class="octicon octicon-code"></span> Code</a></li>
      <li><a href="/nnnick/Chart.js/issues"><span class="octicon octicon-issue-opened"></span> Issues</a></li>
    <li><a href="/nnnick/Chart.js/pulls"><span class="octicon octicon-git-pull-request"></span> Pull Requests</a></li>
    <li><a href="/nnnick/Chart.js/pulse"><span class="octicon octicon-pulse"></span> Pulse</a></li>

      </ul>
    </nav>
  </header>


  

        

<div class="breadcrumb blob-breadcrumb">
  <label for="blob-history-checkbox" class="blob-history-label">
    <span class="octicon octicon-history"></span>
  </label>
  <span class="filetype-icon"><span class="octicon octicon-file-text"></span></span>
  <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nnnick/Chart.js/tree/master/src" class="" data-branch="master" data-pjax="true" itemscope="url"><span itemprop="title">src</span></a></span><span class="separator">/</span><strong class="final-path">Chart.Doughnut.js</strong>
</div>

<input id="blob-history-checkbox"
       class="js-blob-history-checkbox"
       type="checkbox"
       data-url="/nnnick/Chart.js/latest_commit/master/src/Chart.Doughnut.js">

<div class="blob-history">
  <a href="/nnnick/Chart.js/commits/master/src/Chart.Doughnut.js" class="js-blob-history-link">
    Loading latest commit...
</a></div>

  <div class="blob-file-content js-file-line-container">
    <div class="highlighted-blob tab-size" data-tab-size="8"><div class="code-body highlight"><pre><div class='line js-file-line' id='LC1'>(<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC2'>	<span class="pl-s"><span class="pl-pds">&quot;</span>use strict<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC3'><br></div><div class='line js-file-line' id='LC4'>	<span class="pl-k">var</span> root <span class="pl-k">=</span> <span class="pl-v">this</span>,</div><div class='line js-file-line' id='LC5'>		Chart <span class="pl-k">=</span> root.Chart,</div><div class='line js-file-line' id='LC6'>		<span class="pl-c">//Cache a local reference to Chart.helpers</span></div><div class='line js-file-line' id='LC7'>		helpers <span class="pl-k">=</span> Chart.helpers;</div><div class='line js-file-line' id='LC8'><br></div><div class='line js-file-line' id='LC9'>	<span class="pl-k">var</span> defaultConfig <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC10'>		<span class="pl-c">//Boolean - Whether we should show a stroke on each segment</span></div><div class='line js-file-line' id='LC11'>		segmentShowStroke <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC12'><br></div><div class='line js-file-line' id='LC13'>		<span class="pl-c">//String - The colour of each segment stroke</span></div><div class='line js-file-line' id='LC14'>		segmentStrokeColor <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>#fff<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC15'><br></div><div class='line js-file-line' id='LC16'>		<span class="pl-c">//Number - The width of each segment stroke</span></div><div class='line js-file-line' id='LC17'>		segmentStrokeWidth <span class="pl-k">:</span> <span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC18'><br></div><div class='line js-file-line' id='LC19'>		<span class="pl-c">//The percentage of the chart that we cut out of the middle.</span></div><div class='line js-file-line' id='LC20'>		percentageInnerCutout <span class="pl-k">:</span> <span class="pl-c1">50</span>,</div><div class='line js-file-line' id='LC21'><br></div><div class='line js-file-line' id='LC22'>		<span class="pl-c">//Number - Amount of animation steps</span></div><div class='line js-file-line' id='LC23'>		animationSteps <span class="pl-k">:</span> <span class="pl-c1">100</span>,</div><div class='line js-file-line' id='LC24'><br></div><div class='line js-file-line' id='LC25'>		<span class="pl-c">//String - Animation easing effect</span></div><div class='line js-file-line' id='LC26'>		animationEasing <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>easeOutBounce<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC27'><br></div><div class='line js-file-line' id='LC28'>		<span class="pl-c">//Boolean - Whether we animate the rotation of the Doughnut</span></div><div class='line js-file-line' id='LC29'>		animateRotate <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC30'><br></div><div class='line js-file-line' id='LC31'>		<span class="pl-c">//Boolean - Whether we animate scaling the Doughnut from the centre</span></div><div class='line js-file-line' id='LC32'>		animateScale <span class="pl-k">:</span> <span class="pl-c1">false</span>,</div><div class='line js-file-line' id='LC33'><br></div><div class='line js-file-line' id='LC34'>		<span class="pl-c">//String - A legend template</span></div><div class='line js-file-line' id='LC35'>		legendTemplate <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;ul class=<span class="pl-cce">\&quot;</span>&lt;%=name.toLowerCase()%&gt;-legend<span class="pl-cce">\&quot;</span>&gt;&lt;% for (var i=0; i&lt;segments.length; i++){%&gt;&lt;li&gt;&lt;span style=<span class="pl-cce">\&quot;</span>background-color:&lt;%=segments[i].fillColor%&gt;<span class="pl-cce">\&quot;</span>&gt;&lt;%if(segments[i].label){%&gt;&lt;%=segments[i].label%&gt;&lt;%}%&gt;&lt;/span&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;<span class="pl-pds">&quot;</span></span></div><div class='line js-file-line' id='LC36'><br></div><div class='line js-file-line' id='LC37'>	};</div><div class='line js-file-line' id='LC38'><br></div><div class='line js-file-line' id='LC39'>	Chart.Type.extend({</div><div class='line js-file-line' id='LC40'>		<span class="pl-c">//Passing in a name registers this chart in the Chart namespace</span></div><div class='line js-file-line' id='LC41'>		name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Doughnut<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC42'>		<span class="pl-c">//Providing a defaults will also register the deafults in the chart namespace</span></div><div class='line js-file-line' id='LC43'>		defaults <span class="pl-k">:</span> defaultConfig,</div><div class='line js-file-line' id='LC44'>		<span class="pl-c">//Initialize is fired when the chart is initialized - Data is passed in as a parameter</span></div><div class='line js-file-line' id='LC45'>		<span class="pl-c">//Config is automatically merged by the core of Chart.js, and is available at this.options</span></div><div class='line js-file-line' id='LC46'>		<span class="pl-en">initialize</span><span class="pl-k">:</span>  <span class="pl-k">function</span>(<span class="pl-smi">data</span>){</div><div class='line js-file-line' id='LC47'><br></div><div class='line js-file-line' id='LC48'>			<span class="pl-c">//Declare segments as a static property to prevent inheriting across the Chart type prototype</span></div><div class='line js-file-line' id='LC49'>			<span class="pl-v">this</span>.segments <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC50'>			<span class="pl-v">this</span>.outerRadius <span class="pl-k">=</span> (helpers.<span class="pl-c1">min</span>([<span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>,<span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>]) <span class="pl-k">-</span>	<span class="pl-v">this</span>.<span class="pl-c1">options</span>.segmentStrokeWidth/<span class="pl-c1">2</span>)/<span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC51'><br></div><div class='line js-file-line' id='LC52'>			<span class="pl-v">this</span>.SegmentArc <span class="pl-k">=</span> Chart.Arc.extend({</div><div class='line js-file-line' id='LC53'>				ctx <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.ctx,</div><div class='line js-file-line' id='LC54'>				x <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>/<span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC55'>				y <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>/<span class="pl-c1">2</span></div><div class='line js-file-line' id='LC56'>			});</div><div class='line js-file-line' id='LC57'><br></div><div class='line js-file-line' id='LC58'>			<span class="pl-c">//Set up tooltip events on the chart</span></div><div class='line js-file-line' id='LC59'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.showTooltips){</div><div class='line js-file-line' id='LC60'>				helpers.bindEvents(<span class="pl-v">this</span>, <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipEvents, <span class="pl-k">function</span>(<span class="pl-smi">evt</span>){</div><div class='line js-file-line' id='LC61'>					<span class="pl-k">var</span> activeSegments <span class="pl-k">=</span> (evt.<span class="pl-c1">type</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>mouseout<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-v">this</span>.getSegmentsAtEvent(evt) <span class="pl-k">:</span> [];</div><div class='line js-file-line' id='LC62'><br></div><div class='line js-file-line' id='LC63'>					helpers.each(<span class="pl-v">this</span>.segments,<span class="pl-k">function</span>(<span class="pl-smi">segment</span>){</div><div class='line js-file-line' id='LC64'>						segment.restore([<span class="pl-s"><span class="pl-pds">&quot;</span>fillColor<span class="pl-pds">&quot;</span></span>]);</div><div class='line js-file-line' id='LC65'>					});</div><div class='line js-file-line' id='LC66'>					helpers.each(activeSegments,<span class="pl-k">function</span>(<span class="pl-smi">activeSegment</span>){</div><div class='line js-file-line' id='LC67'>						activeSegment.fillColor <span class="pl-k">=</span> activeSegment.highlightColor;</div><div class='line js-file-line' id='LC68'>					});</div><div class='line js-file-line' id='LC69'>					<span class="pl-v">this</span>.showTooltip(activeSegments);</div><div class='line js-file-line' id='LC70'>				});</div><div class='line js-file-line' id='LC71'>			}</div><div class='line js-file-line' id='LC72'>			<span class="pl-v">this</span>.calculateTotal(data);</div><div class='line js-file-line' id='LC73'><br></div><div class='line js-file-line' id='LC74'>			helpers.each(data,<span class="pl-k">function</span>(<span class="pl-smi">datapoint</span>, <span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC75'>				<span class="pl-k">if</span> (<span class="pl-k">!</span>datapoint.<span class="pl-c1">color</span>) {</div><div class='line js-file-line' id='LC76'>					datapoint.<span class="pl-c1">color</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>hsl(<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> (<span class="pl-c1">360</span> <span class="pl-k">*</span> index / data.<span class="pl-c1">length</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>, 100%, 50%)<span class="pl-pds">&#39;</span></span>;</div><div class='line js-file-line' id='LC77'>				}</div><div class='line js-file-line' id='LC78'>				<span class="pl-v">this</span>.addData(datapoint, index, <span class="pl-c1">true</span>);</div><div class='line js-file-line' id='LC79'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC80'><br></div><div class='line js-file-line' id='LC81'>			<span class="pl-v">this</span>.render();</div><div class='line js-file-line' id='LC82'>		},</div><div class='line js-file-line' id='LC83'>		<span class="pl-en">getSegmentsAtEvent</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>){</div><div class='line js-file-line' id='LC84'>			<span class="pl-k">var</span> segmentsArray <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC85'><br></div><div class='line js-file-line' id='LC86'>			<span class="pl-k">var</span> location <span class="pl-k">=</span> helpers.getRelativePosition(e);</div><div class='line js-file-line' id='LC87'><br></div><div class='line js-file-line' id='LC88'>			helpers.each(<span class="pl-v">this</span>.segments,<span class="pl-k">function</span>(<span class="pl-smi">segment</span>){</div><div class='line js-file-line' id='LC89'>				<span class="pl-k">if</span> (segment.inRange(location.<span class="pl-c1">x</span>,location.<span class="pl-c1">y</span>)) segmentsArray.<span class="pl-c1">push</span>(segment);</div><div class='line js-file-line' id='LC90'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC91'>			<span class="pl-k">return</span> segmentsArray;</div><div class='line js-file-line' id='LC92'>		},</div><div class='line js-file-line' id='LC93'>		<span class="pl-en">addData</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">segment</span>, <span class="pl-smi">atIndex</span>, <span class="pl-smi">silent</span>){</div><div class='line js-file-line' id='LC94'>			<span class="pl-k">var</span> index <span class="pl-k">=</span> atIndex <span class="pl-k">||</span> <span class="pl-v">this</span>.segments.<span class="pl-c1">length</span>;</div><div class='line js-file-line' id='LC95'>			<span class="pl-v">this</span>.segments.<span class="pl-c1">splice</span>(index, <span class="pl-c1">0</span>, <span class="pl-k">new</span> <span class="pl-en">this.SegmentArc</span>({</div><div class='line js-file-line' id='LC96'>				value <span class="pl-k">:</span> segment.<span class="pl-c1">value</span>,</div><div class='line js-file-line' id='LC97'>				outerRadius <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.animateScale) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-v">this</span>.outerRadius,</div><div class='line js-file-line' id='LC98'>				innerRadius <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.animateScale) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> (<span class="pl-v">this</span>.outerRadius/<span class="pl-c1">100</span>) <span class="pl-k">*</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.percentageInnerCutout,</div><div class='line js-file-line' id='LC99'>				fillColor <span class="pl-k">:</span> segment.<span class="pl-c1">color</span>,</div><div class='line js-file-line' id='LC100'>				highlightColor <span class="pl-k">:</span> segment.highlight <span class="pl-k">||</span> segment.<span class="pl-c1">color</span>,</div><div class='line js-file-line' id='LC101'>				showStroke <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.segmentShowStroke,</div><div class='line js-file-line' id='LC102'>				strokeWidth <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.segmentStrokeWidth,</div><div class='line js-file-line' id='LC103'>				strokeColor <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.segmentStrokeColor,</div><div class='line js-file-line' id='LC104'>				startAngle <span class="pl-k">:</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> <span class="pl-k">*</span> <span class="pl-c1">1.5</span>,</div><div class='line js-file-line' id='LC105'>				circumference <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.animateRotate) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-v">this</span>.calculateCircumference(segment.<span class="pl-c1">value</span>),</div><div class='line js-file-line' id='LC106'>				label <span class="pl-k">:</span> segment.<span class="pl-c1">label</span></div><div class='line js-file-line' id='LC107'>			}));</div><div class='line js-file-line' id='LC108'>			<span class="pl-k">if</span> (<span class="pl-k">!</span>silent){</div><div class='line js-file-line' id='LC109'>				<span class="pl-v">this</span>.reflow();</div><div class='line js-file-line' id='LC110'>				<span class="pl-v">this</span>.update();</div><div class='line js-file-line' id='LC111'>			}</div><div class='line js-file-line' id='LC112'>		},</div><div class='line js-file-line' id='LC113'>		<span class="pl-en">calculateCircumference</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</div><div class='line js-file-line' id='LC114'>			<span class="pl-k">if</span> ( <span class="pl-v">this</span>.total <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> ) {</div><div class='line js-file-line' id='LC115'>				<span class="pl-k">return</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">*</span><span class="pl-c1">2</span>)<span class="pl-k">*</span>(value / <span class="pl-v">this</span>.total);</div><div class='line js-file-line' id='LC116'>			} <span class="pl-k">else</span> {</div><div class='line js-file-line' id='LC117'>				<span class="pl-k">return</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC118'>			}</div><div class='line js-file-line' id='LC119'>		},</div><div class='line js-file-line' id='LC120'>		<span class="pl-en">calculateTotal</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">data</span>){</div><div class='line js-file-line' id='LC121'>			<span class="pl-v">this</span>.total <span class="pl-k">=</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC122'>			helpers.each(data,<span class="pl-k">function</span>(<span class="pl-smi">segment</span>){</div><div class='line js-file-line' id='LC123'>				<span class="pl-v">this</span>.total <span class="pl-k">+=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(segment.<span class="pl-c1">value</span>);</div><div class='line js-file-line' id='LC124'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC125'>		},</div><div class='line js-file-line' id='LC126'>		<span class="pl-en">update</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC127'>			<span class="pl-v">this</span>.calculateTotal(<span class="pl-v">this</span>.segments);</div><div class='line js-file-line' id='LC128'><br></div><div class='line js-file-line' id='LC129'>			<span class="pl-c">// Reset any highlight colours before updating.</span></div><div class='line js-file-line' id='LC130'>			helpers.each(<span class="pl-v">this</span>.activeElements, <span class="pl-k">function</span>(<span class="pl-smi">activeElement</span>){</div><div class='line js-file-line' id='LC131'>				activeElement.restore([<span class="pl-s"><span class="pl-pds">&#39;</span>fillColor<span class="pl-pds">&#39;</span></span>]);</div><div class='line js-file-line' id='LC132'>			});</div><div class='line js-file-line' id='LC133'><br></div><div class='line js-file-line' id='LC134'>			helpers.each(<span class="pl-v">this</span>.segments,<span class="pl-k">function</span>(<span class="pl-smi">segment</span>){</div><div class='line js-file-line' id='LC135'>				segment.save();</div><div class='line js-file-line' id='LC136'>			});</div><div class='line js-file-line' id='LC137'>			<span class="pl-v">this</span>.render();</div><div class='line js-file-line' id='LC138'>		},</div><div class='line js-file-line' id='LC139'><br></div><div class='line js-file-line' id='LC140'>		<span class="pl-en">removeData</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">atIndex</span>){</div><div class='line js-file-line' id='LC141'>			<span class="pl-k">var</span> indexToDelete <span class="pl-k">=</span> (helpers.isNumber(atIndex)) <span class="pl-k">?</span> atIndex <span class="pl-k">:</span> <span class="pl-v">this</span>.segments.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC142'>			<span class="pl-v">this</span>.segments.<span class="pl-c1">splice</span>(indexToDelete, <span class="pl-c1">1</span>);</div><div class='line js-file-line' id='LC143'>			<span class="pl-v">this</span>.reflow();</div><div class='line js-file-line' id='LC144'>			<span class="pl-v">this</span>.update();</div><div class='line js-file-line' id='LC145'>		},</div><div class='line js-file-line' id='LC146'><br></div><div class='line js-file-line' id='LC147'>		<span class="pl-en">reflow</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC148'>			helpers.extend(<span class="pl-v">this</span>.SegmentArc.<span class="pl-c1">prototype</span>,{</div><div class='line js-file-line' id='LC149'>				x <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>/<span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC150'>				y <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>/<span class="pl-c1">2</span></div><div class='line js-file-line' id='LC151'>			});</div><div class='line js-file-line' id='LC152'>			<span class="pl-v">this</span>.outerRadius <span class="pl-k">=</span> (helpers.<span class="pl-c1">min</span>([<span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>,<span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>]) <span class="pl-k">-</span>	<span class="pl-v">this</span>.<span class="pl-c1">options</span>.segmentStrokeWidth/<span class="pl-c1">2</span>)/<span class="pl-c1">2</span>;</div><div class='line js-file-line' id='LC153'>			helpers.each(<span class="pl-v">this</span>.segments, <span class="pl-k">function</span>(<span class="pl-smi">segment</span>){</div><div class='line js-file-line' id='LC154'>				segment.update({</div><div class='line js-file-line' id='LC155'>					outerRadius <span class="pl-k">:</span> <span class="pl-v">this</span>.outerRadius,</div><div class='line js-file-line' id='LC156'>					innerRadius <span class="pl-k">:</span> (<span class="pl-v">this</span>.outerRadius/<span class="pl-c1">100</span>) <span class="pl-k">*</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.percentageInnerCutout</div><div class='line js-file-line' id='LC157'>				});</div><div class='line js-file-line' id='LC158'>			}, <span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC159'>		},</div><div class='line js-file-line' id='LC160'>		<span class="pl-en">draw</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">easeDecimal</span>){</div><div class='line js-file-line' id='LC161'>			<span class="pl-k">var</span> animDecimal <span class="pl-k">=</span> (easeDecimal) <span class="pl-k">?</span> easeDecimal <span class="pl-k">:</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC162'>			<span class="pl-v">this</span>.<span class="pl-c1">clear</span>();</div><div class='line js-file-line' id='LC163'>			helpers.each(<span class="pl-v">this</span>.segments,<span class="pl-k">function</span>(<span class="pl-smi">segment</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC164'>				segment.transition({</div><div class='line js-file-line' id='LC165'>					circumference <span class="pl-k">:</span> <span class="pl-v">this</span>.calculateCircumference(segment.<span class="pl-c1">value</span>),</div><div class='line js-file-line' id='LC166'>					outerRadius <span class="pl-k">:</span> <span class="pl-v">this</span>.outerRadius,</div><div class='line js-file-line' id='LC167'>					innerRadius <span class="pl-k">:</span> (<span class="pl-v">this</span>.outerRadius/<span class="pl-c1">100</span>) <span class="pl-k">*</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.percentageInnerCutout</div><div class='line js-file-line' id='LC168'>				},animDecimal);</div><div class='line js-file-line' id='LC169'><br></div><div class='line js-file-line' id='LC170'>				segment.endAngle <span class="pl-k">=</span> segment.startAngle <span class="pl-k">+</span> segment.circumference;</div><div class='line js-file-line' id='LC171'><br></div><div class='line js-file-line' id='LC172'>				segment.draw();</div><div class='line js-file-line' id='LC173'>				<span class="pl-k">if</span> (index <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC174'>					segment.startAngle <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">PI</span> <span class="pl-k">*</span> <span class="pl-c1">1.5</span>;</div><div class='line js-file-line' id='LC175'>				}</div><div class='line js-file-line' id='LC176'>				<span class="pl-c">//Check to see if it&#39;s the last segment, if not get the next and update the start angle</span></div><div class='line js-file-line' id='LC177'>				<span class="pl-k">if</span> (index <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.segments.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>){</div><div class='line js-file-line' id='LC178'>					<span class="pl-v">this</span>.segments[index<span class="pl-k">+</span><span class="pl-c1">1</span>].startAngle <span class="pl-k">=</span> segment.endAngle;</div><div class='line js-file-line' id='LC179'>				}</div><div class='line js-file-line' id='LC180'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC181'><br></div><div class='line js-file-line' id='LC182'>		}</div><div class='line js-file-line' id='LC183'>	});</div><div class='line js-file-line' id='LC184'><br></div><div class='line js-file-line' id='LC185'>	Chart.types.Doughnut.extend({</div><div class='line js-file-line' id='LC186'>		name <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Pie<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC187'>		defaults <span class="pl-k">:</span> helpers.merge(defaultConfig,{percentageInnerCutout <span class="pl-k">:</span> <span class="pl-c1">0</span>})</div><div class='line js-file-line' id='LC188'>	});</div><div class='line js-file-line' id='LC189'><br></div><div class='line js-file-line' id='LC190'>}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</div></pre></div></div>
  </div>



  <footer class="clearfix">
    <div class="container">
      <a href="#"><span class="mega-octicon octicon-mark-github"></span></a>

      <ul class="clearfix">
        <li>
          <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/site/mobile_preference" class="js-mobile-preference-form" data-form-nonce="8b41a82aad02ec38c10a36ecb249a6ef31da82b3" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="IfzVt2HJcIl3lyYIQnV1ASvwS71Y9MLcn0riZNgLv3dWyrZDQjfvqLj4Hxqck1v6RKV6HfUoPtSYqdzwPbMnOg==" /></div>
            <input type="hidden" name="mobile" value="false">
            <input type="hidden" name="anchor" class="js-mobile-preference-anchor-field">

            <button type="submit" class="switch-to-desktop" data-ga-click="Mobile, switch to desktop, switch button">
              Desktop version
            </button>
</form>        </li>

      </ul>
    </div>
  </footer>
  
</body>
</html>






<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width">
  <meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1" media="(device-height: 568px)">
  <meta http-equiv="Content-Language" content="en">
  <link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-precomposed.png">
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="/apple-touch-icon-114-precomposed.png">
      <meta name="google-analytics" content="UA-3769691-2">
    <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
  <meta name="theme-color" content="#f5f5f5">

  
  <meta content="Rails, view, blob#show" data-pjax-transient="true" name="analytics-event" />
  <meta class="js-ga-set" name="dimension1" content="Logged Out">
    <meta class="js-ga-set" name="dimension3" content="mobile">

  <!-- </textarea> --><!-- '"` --><meta content="authenticity_token" name="csrf-param" />
<meta content="zDmwvHl3VKlRYvbxCEpg/7imMZt9SjmB3NbYUh+oBc1TRAAJb1LsEuPkVAUWzJdQzaInLLTqnsSuKvDgAkzW9A==" name="csrf-token" />

  <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="0575EF2B:6D91:B58A5DA:55C6ED24" name="octolytics-dimension-request_id" />
  <meta content="mobile" name="octolytics-dimension-device" />
  <meta content="1458051" name="octolytics-dimension-user_id" /><meta content="nnnick" name="octolytics-dimension-user_login" /><meta content="8843683" name="octolytics-dimension-repository_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="8843683" name="octolytics-dimension-repository_network_root_id" /><meta content="nnnick/Chart.js" name="octolytics-dimension-repository_network_root_nwo" />
  

  <title>GitHub Â· Build software better, together.</title>

  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/mobile/index-2925272909e6f36816412cdb6d8a151ed00201f3c8ed4104dda4250b06630146.css" media="all" rel="stylesheet" />
  <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/mobile/index-c612fa633714ea237b8f720b5fea970980ef59fdfe134bec23b43831f1d98f14.js"></script>
</head>
<body class="">
  <header class="nav-bar">
    <div class="nav-bar-inner">
      

      <button class="header-button header-nav-button touchable js-show-global-nav">
        <span class="octicon octicon-three-bars"></span>

      </button>

      <div class="nav-bar-title-text">
              <span class="octicon octicon-repo"></span>

    <strong><a href="/nnnick">nnnick</a></strong>
    /
    <strong><a href="/nnnick/Chart.js">Chart.js</a></strong>

      </div>
    </div>


    <nav class="nav-bar-tabs repo-nav-bar-tabs">
      <ul>
          <li>
            <a href="/explore">
              <span class="octicon octicon-telescope"></span>
              Explore
            </a>
          </li>
        <li>
            <a href="/login?return_to=%2Fnnnick%2FChart.js%2Fblob%2Fmaster%2Fsrc%2FChart.Line.js">
              <span class="octicon octicon-sign-in"></span>
              Sign in
            </a>
        </li>
            <li class="section-title">This repository</li>
    <li><a href="/nnnick/Chart.js?files=1"><span class="octicon octicon-code"></span> Code</a></li>
      <li><a href="/nnnick/Chart.js/issues"><span class="octicon octicon-issue-opened"></span> Issues</a></li>
    <li><a href="/nnnick/Chart.js/pulls"><span class="octicon octicon-git-pull-request"></span> Pull Requests</a></li>
    <li><a href="/nnnick/Chart.js/pulse"><span class="octicon octicon-pulse"></span> Pulse</a></li>

      </ul>
    </nav>
  </header>


  

        

<div class="breadcrumb blob-breadcrumb">
  <label for="blob-history-checkbox" class="blob-history-label">
    <span class="octicon octicon-history"></span>
  </label>
  <span class="filetype-icon"><span class="octicon octicon-file-text"></span></span>
  <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nnnick/Chart.js/tree/master/src" class="" data-branch="master" data-pjax="true" itemscope="url"><span itemprop="title">src</span></a></span><span class="separator">/</span><strong class="final-path">Chart.Line.js</strong>
</div>

<input id="blob-history-checkbox"
       class="js-blob-history-checkbox"
       type="checkbox"
       data-url="/nnnick/Chart.js/latest_commit/master/src/Chart.Line.js">

<div class="blob-history">
  <a href="/nnnick/Chart.js/commits/master/src/Chart.Line.js" class="js-blob-history-link">
    Loading latest commit...
</a></div>

  <div class="blob-file-content js-file-line-container">
    <div class="highlighted-blob tab-size" data-tab-size="8"><div class="code-body highlight"><pre><div class='line js-file-line' id='LC1'>(<span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC2'>	<span class="pl-s"><span class="pl-pds">&quot;</span>use strict<span class="pl-pds">&quot;</span></span>;</div><div class='line js-file-line' id='LC3'><br></div><div class='line js-file-line' id='LC4'>	<span class="pl-k">var</span> root <span class="pl-k">=</span> <span class="pl-v">this</span>,</div><div class='line js-file-line' id='LC5'>		Chart <span class="pl-k">=</span> root.Chart,</div><div class='line js-file-line' id='LC6'>		helpers <span class="pl-k">=</span> Chart.helpers;</div><div class='line js-file-line' id='LC7'><br></div><div class='line js-file-line' id='LC8'>	<span class="pl-k">var</span> defaultConfig <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC9'><br></div><div class='line js-file-line' id='LC10'>		<span class="pl-c">///Boolean - Whether grid lines are shown across the chart</span></div><div class='line js-file-line' id='LC11'>		scaleShowGridLines <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC12'><br></div><div class='line js-file-line' id='LC13'>		<span class="pl-c">//String - Colour of the grid lines</span></div><div class='line js-file-line' id='LC14'>		scaleGridLineColor <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,.05)<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC15'><br></div><div class='line js-file-line' id='LC16'>		<span class="pl-c">//Number - Width of the grid lines</span></div><div class='line js-file-line' id='LC17'>		scaleGridLineWidth <span class="pl-k">:</span> <span class="pl-c1">1</span>,</div><div class='line js-file-line' id='LC18'><br></div><div class='line js-file-line' id='LC19'>		<span class="pl-c">//Boolean - Whether to show horizontal lines (except X axis)</span></div><div class='line js-file-line' id='LC20'>		scaleShowHorizontalLines<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC21'><br></div><div class='line js-file-line' id='LC22'>		<span class="pl-c">//Boolean - Whether to show vertical lines (except Y axis)</span></div><div class='line js-file-line' id='LC23'>		scaleShowVerticalLines<span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC24'><br></div><div class='line js-file-line' id='LC25'>		<span class="pl-c">//Boolean - Whether the line is curved between points</span></div><div class='line js-file-line' id='LC26'>		bezierCurve <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC27'><br></div><div class='line js-file-line' id='LC28'>		<span class="pl-c">//Number - Tension of the bezier curve between points</span></div><div class='line js-file-line' id='LC29'>		bezierCurveTension <span class="pl-k">:</span> <span class="pl-c1">0.4</span>,</div><div class='line js-file-line' id='LC30'><br></div><div class='line js-file-line' id='LC31'>		<span class="pl-c">//Boolean - Whether to show a dot for each point</span></div><div class='line js-file-line' id='LC32'>		pointDot <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC33'><br></div><div class='line js-file-line' id='LC34'>		<span class="pl-c">//Number - Radius of each point dot in pixels</span></div><div class='line js-file-line' id='LC35'>		pointDotRadius <span class="pl-k">:</span> <span class="pl-c1">4</span>,</div><div class='line js-file-line' id='LC36'><br></div><div class='line js-file-line' id='LC37'>		<span class="pl-c">//Number - Pixel width of point dot stroke</span></div><div class='line js-file-line' id='LC38'>		pointDotStrokeWidth <span class="pl-k">:</span> <span class="pl-c1">1</span>,</div><div class='line js-file-line' id='LC39'><br></div><div class='line js-file-line' id='LC40'>		<span class="pl-c">//Number - amount extra to add to the radius to cater for hit detection outside the drawn point</span></div><div class='line js-file-line' id='LC41'>		pointHitDetectionRadius <span class="pl-k">:</span> <span class="pl-c1">20</span>,</div><div class='line js-file-line' id='LC42'><br></div><div class='line js-file-line' id='LC43'>		<span class="pl-c">//Boolean - Whether to show a stroke for datasets</span></div><div class='line js-file-line' id='LC44'>		datasetStroke <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC45'><br></div><div class='line js-file-line' id='LC46'>		<span class="pl-c">//Number - Pixel width of dataset stroke</span></div><div class='line js-file-line' id='LC47'>		datasetStrokeWidth <span class="pl-k">:</span> <span class="pl-c1">2</span>,</div><div class='line js-file-line' id='LC48'><br></div><div class='line js-file-line' id='LC49'>		<span class="pl-c">//Boolean - Whether to fill the dataset with a colour</span></div><div class='line js-file-line' id='LC50'>		datasetFill <span class="pl-k">:</span> <span class="pl-c1">true</span>,</div><div class='line js-file-line' id='LC51'><br></div><div class='line js-file-line' id='LC52'>		<span class="pl-c">//String - A legend template</span></div><div class='line js-file-line' id='LC53'>		legendTemplate <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;ul class=<span class="pl-cce">\&quot;</span>&lt;%=name.toLowerCase()%&gt;-legend<span class="pl-cce">\&quot;</span>&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=<span class="pl-cce">\&quot;</span>background-color:&lt;%=datasets[i].strokeColor%&gt;<span class="pl-cce">\&quot;</span>&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/span&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC54'><br></div><div class='line js-file-line' id='LC55'>		<span class="pl-c">//Boolean - Whether to horizontally center the label and point dot inside the grid</span></div><div class='line js-file-line' id='LC56'>		offsetGridLines <span class="pl-k">:</span> <span class="pl-c1">false</span></div><div class='line js-file-line' id='LC57'><br></div><div class='line js-file-line' id='LC58'>	};</div><div class='line js-file-line' id='LC59'><br></div><div class='line js-file-line' id='LC60'><br></div><div class='line js-file-line' id='LC61'>	Chart.Type.extend({</div><div class='line js-file-line' id='LC62'>		name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>Line<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC63'>		defaults <span class="pl-k">:</span> defaultConfig,</div><div class='line js-file-line' id='LC64'>		<span class="pl-en">initialize</span><span class="pl-k">:</span>  <span class="pl-k">function</span>(<span class="pl-smi">data</span>){</div><div class='line js-file-line' id='LC65'>			<span class="pl-c">//Declare the extension of the default point, to cater for the options passed in to the constructor</span></div><div class='line js-file-line' id='LC66'>			<span class="pl-v">this</span>.PointClass <span class="pl-k">=</span> Chart.Point.extend({</div><div class='line js-file-line' id='LC67'>				offsetGridLines <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.offsetGridLines,</div><div class='line js-file-line' id='LC68'>				strokeWidth <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointDotStrokeWidth,</div><div class='line js-file-line' id='LC69'>				radius <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointDotRadius,</div><div class='line js-file-line' id='LC70'>				display<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointDot,</div><div class='line js-file-line' id='LC71'>				hitDetectionRadius <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointHitDetectionRadius,</div><div class='line js-file-line' id='LC72'>				ctx <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.ctx,</div><div class='line js-file-line' id='LC73'>				<span class="pl-en">inRange</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">mouseX</span>){</div><div class='line js-file-line' id='LC74'>					<span class="pl-k">return</span> (<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(mouseX<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-c1">x</span>, <span class="pl-c1">2</span>) <span class="pl-k">&lt;</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-v">this</span>.radius <span class="pl-k">+</span> <span class="pl-v">this</span>.hitDetectionRadius,<span class="pl-c1">2</span>));</div><div class='line js-file-line' id='LC75'>				}</div><div class='line js-file-line' id='LC76'>			});</div><div class='line js-file-line' id='LC77'><br></div><div class='line js-file-line' id='LC78'>			<span class="pl-v">this</span>.datasets <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC79'><br></div><div class='line js-file-line' id='LC80'>			<span class="pl-c">//Set up tooltip events on the chart</span></div><div class='line js-file-line' id='LC81'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.showTooltips){</div><div class='line js-file-line' id='LC82'>				helpers.bindEvents(<span class="pl-v">this</span>, <span class="pl-v">this</span>.<span class="pl-c1">options</span>.tooltipEvents, <span class="pl-k">function</span>(<span class="pl-smi">evt</span>){</div><div class='line js-file-line' id='LC83'>					<span class="pl-k">var</span> activePoints <span class="pl-k">=</span> (evt.<span class="pl-c1">type</span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>mouseout<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-v">this</span>.getPointsAtEvent(evt) <span class="pl-k">:</span> [];</div><div class='line js-file-line' id='LC84'>					<span class="pl-v">this</span>.eachPoints(<span class="pl-k">function</span>(<span class="pl-smi">point</span>){</div><div class='line js-file-line' id='LC85'>						point.restore([<span class="pl-s"><span class="pl-pds">&#39;</span>fillColor<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>strokeColor<span class="pl-pds">&#39;</span></span>]);</div><div class='line js-file-line' id='LC86'>					});</div><div class='line js-file-line' id='LC87'>					helpers.each(activePoints, <span class="pl-k">function</span>(<span class="pl-smi">activePoint</span>){</div><div class='line js-file-line' id='LC88'>						activePoint.fillColor <span class="pl-k">=</span> activePoint.highlightFill;</div><div class='line js-file-line' id='LC89'>						activePoint.strokeColor <span class="pl-k">=</span> activePoint.highlightStroke;</div><div class='line js-file-line' id='LC90'>					});</div><div class='line js-file-line' id='LC91'>					<span class="pl-v">this</span>.showTooltip(activePoints);</div><div class='line js-file-line' id='LC92'>				});</div><div class='line js-file-line' id='LC93'>			}</div><div class='line js-file-line' id='LC94'><br></div><div class='line js-file-line' id='LC95'>			<span class="pl-c">//Iterate through each of the datasets, and build this into a property of the chart</span></div><div class='line js-file-line' id='LC96'>			helpers.each(data.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC97'><br></div><div class='line js-file-line' id='LC98'>				<span class="pl-k">var</span> datasetObject <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC99'>					label <span class="pl-k">:</span> dataset.<span class="pl-c1">label</span> <span class="pl-k">||</span> <span class="pl-c1">null</span>,</div><div class='line js-file-line' id='LC100'>					fillColor <span class="pl-k">:</span> dataset.fillColor,</div><div class='line js-file-line' id='LC101'>					strokeColor <span class="pl-k">:</span> dataset.strokeColor,</div><div class='line js-file-line' id='LC102'>					pointColor <span class="pl-k">:</span> dataset.pointColor,</div><div class='line js-file-line' id='LC103'>					pointStrokeColor <span class="pl-k">:</span> dataset.pointStrokeColor,</div><div class='line js-file-line' id='LC104'>					points <span class="pl-k">:</span> []</div><div class='line js-file-line' id='LC105'>				};</div><div class='line js-file-line' id='LC106'><br></div><div class='line js-file-line' id='LC107'>				<span class="pl-v">this</span>.datasets.<span class="pl-c1">push</span>(datasetObject);</div><div class='line js-file-line' id='LC108'><br></div><div class='line js-file-line' id='LC109'><br></div><div class='line js-file-line' id='LC110'>				helpers.each(dataset.<span class="pl-c1">data</span>,<span class="pl-k">function</span>(<span class="pl-smi">dataPoint</span>,<span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC111'>					<span class="pl-c">//Add a new point for each piece of data, passing any required data to draw.</span></div><div class='line js-file-line' id='LC112'>					datasetObject.points.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">this.PointClass</span>({</div><div class='line js-file-line' id='LC113'>						value <span class="pl-k">:</span> dataPoint,</div><div class='line js-file-line' id='LC114'>						label <span class="pl-k">:</span> data.labels[index],</div><div class='line js-file-line' id='LC115'>						datasetLabel<span class="pl-k">:</span> dataset.<span class="pl-c1">label</span>,</div><div class='line js-file-line' id='LC116'>						strokeColor <span class="pl-k">:</span> dataset.pointStrokeColor,</div><div class='line js-file-line' id='LC117'>						fillColor <span class="pl-k">:</span> dataset.pointColor,</div><div class='line js-file-line' id='LC118'>						highlightFill <span class="pl-k">:</span> dataset.pointHighlightFill <span class="pl-k">||</span> dataset.pointColor,</div><div class='line js-file-line' id='LC119'>						highlightStroke <span class="pl-k">:</span> dataset.pointHighlightStroke <span class="pl-k">||</span> dataset.pointStrokeColor</div><div class='line js-file-line' id='LC120'>					}));</div><div class='line js-file-line' id='LC121'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC122'><br></div><div class='line js-file-line' id='LC123'>				<span class="pl-v">this</span>.buildScale(data.labels);</div><div class='line js-file-line' id='LC124'><br></div><div class='line js-file-line' id='LC125'><br></div><div class='line js-file-line' id='LC126'>				<span class="pl-v">this</span>.eachPoints(<span class="pl-k">function</span>(<span class="pl-smi">point</span>, <span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC127'>					helpers.extend(point, {</div><div class='line js-file-line' id='LC128'>						x<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateX(index),</div><div class='line js-file-line' id='LC129'>						y<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.endPoint</div><div class='line js-file-line' id='LC130'>					});</div><div class='line js-file-line' id='LC131'>					point.save();</div><div class='line js-file-line' id='LC132'>				}, <span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC133'><br></div><div class='line js-file-line' id='LC134'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC135'><br></div><div class='line js-file-line' id='LC136'><br></div><div class='line js-file-line' id='LC137'>			<span class="pl-v">this</span>.render();</div><div class='line js-file-line' id='LC138'>		},</div><div class='line js-file-line' id='LC139'>		<span class="pl-en">update</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC140'>			<span class="pl-v">this</span>.scale.update();</div><div class='line js-file-line' id='LC141'>			<span class="pl-c">// Reset any highlight colours before updating.</span></div><div class='line js-file-line' id='LC142'>			helpers.each(<span class="pl-v">this</span>.activeElements, <span class="pl-k">function</span>(<span class="pl-smi">activeElement</span>){</div><div class='line js-file-line' id='LC143'>				activeElement.restore([<span class="pl-s"><span class="pl-pds">&#39;</span>fillColor<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>strokeColor<span class="pl-pds">&#39;</span></span>]);</div><div class='line js-file-line' id='LC144'>			});</div><div class='line js-file-line' id='LC145'>			<span class="pl-v">this</span>.eachPoints(<span class="pl-k">function</span>(<span class="pl-smi">point</span>){</div><div class='line js-file-line' id='LC146'>				point.save();</div><div class='line js-file-line' id='LC147'>			});</div><div class='line js-file-line' id='LC148'>			<span class="pl-v">this</span>.render();</div><div class='line js-file-line' id='LC149'>		},</div><div class='line js-file-line' id='LC150'>		<span class="pl-en">eachPoints</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>){</div><div class='line js-file-line' id='LC151'>			helpers.each(<span class="pl-v">this</span>.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC152'>				helpers.each(dataset.points,callback,<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC153'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC154'>		},</div><div class='line js-file-line' id='LC155'>		<span class="pl-en">getPointsAtEvent</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">e</span>){</div><div class='line js-file-line' id='LC156'>			<span class="pl-k">var</span> pointsArray <span class="pl-k">=</span> [],</div><div class='line js-file-line' id='LC157'>				eventPosition <span class="pl-k">=</span> helpers.getRelativePosition(e);</div><div class='line js-file-line' id='LC158'>			helpers.each(<span class="pl-v">this</span>.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC159'>				helpers.each(dataset.points,<span class="pl-k">function</span>(<span class="pl-smi">point</span>){</div><div class='line js-file-line' id='LC160'>					<span class="pl-k">if</span> (point.inRange(eventPosition.<span class="pl-c1">x</span>,eventPosition.<span class="pl-c1">y</span>)) pointsArray.<span class="pl-c1">push</span>(point);</div><div class='line js-file-line' id='LC161'>				});</div><div class='line js-file-line' id='LC162'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC163'>			<span class="pl-k">return</span> pointsArray;</div><div class='line js-file-line' id='LC164'>		},</div><div class='line js-file-line' id='LC165'>		<span class="pl-en">buildScale</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">labels</span>){</div><div class='line js-file-line' id='LC166'>			<span class="pl-k">var</span> self <span class="pl-k">=</span> <span class="pl-v">this</span>;</div><div class='line js-file-line' id='LC167'><br></div><div class='line js-file-line' id='LC168'>			<span class="pl-k">var</span> <span class="pl-en">dataTotal</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC169'>				<span class="pl-k">var</span> values <span class="pl-k">=</span> [];</div><div class='line js-file-line' id='LC170'>				self.eachPoints(<span class="pl-k">function</span>(<span class="pl-smi">point</span>){</div><div class='line js-file-line' id='LC171'>					values.<span class="pl-c1">push</span>(point.<span class="pl-c1">value</span>);</div><div class='line js-file-line' id='LC172'>				});</div><div class='line js-file-line' id='LC173'><br></div><div class='line js-file-line' id='LC174'>				<span class="pl-k">return</span> values;</div><div class='line js-file-line' id='LC175'>			};</div><div class='line js-file-line' id='LC176'><br></div><div class='line js-file-line' id='LC177'>			<span class="pl-k">var</span> scaleOptions <span class="pl-k">=</span> {</div><div class='line js-file-line' id='LC178'>				templateString <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleLabel,</div><div class='line js-file-line' id='LC179'>				height <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>,</div><div class='line js-file-line' id='LC180'>				width <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span>,</div><div class='line js-file-line' id='LC181'>				ctx <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.ctx,</div><div class='line js-file-line' id='LC182'>				textColor <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontColor,</div><div class='line js-file-line' id='LC183'>				offsetGridLines <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.offsetGridLines,</div><div class='line js-file-line' id='LC184'>				fontSize <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontSize,</div><div class='line js-file-line' id='LC185'>				fontStyle <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontStyle,</div><div class='line js-file-line' id='LC186'>				fontFamily <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontFamily,</div><div class='line js-file-line' id='LC187'>				valuesCount <span class="pl-k">:</span> labels.<span class="pl-c1">length</span>,</div><div class='line js-file-line' id='LC188'>				beginAtZero <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleBeginAtZero,</div><div class='line js-file-line' id='LC189'>				integersOnly <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleIntegersOnly,</div><div class='line js-file-line' id='LC190'>				<span class="pl-en">calculateYRange</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">currentHeight</span>){</div><div class='line js-file-line' id='LC191'>					<span class="pl-k">var</span> updatedRanges <span class="pl-k">=</span> helpers.calculateScaleRange(</div><div class='line js-file-line' id='LC192'>						dataTotal(),</div><div class='line js-file-line' id='LC193'>						currentHeight,</div><div class='line js-file-line' id='LC194'>						<span class="pl-v">this</span>.<span class="pl-c1">fontSize</span>,</div><div class='line js-file-line' id='LC195'>						<span class="pl-v">this</span>.beginAtZero,</div><div class='line js-file-line' id='LC196'>						<span class="pl-v">this</span>.integersOnly</div><div class='line js-file-line' id='LC197'>					);</div><div class='line js-file-line' id='LC198'>					helpers.extend(<span class="pl-v">this</span>, updatedRanges);</div><div class='line js-file-line' id='LC199'>				},</div><div class='line js-file-line' id='LC200'>				xLabels <span class="pl-k">:</span> labels,</div><div class='line js-file-line' id='LC201'>				font <span class="pl-k">:</span> helpers.fontString(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontSize, <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontStyle, <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleFontFamily),</div><div class='line js-file-line' id='LC202'>				lineWidth <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleLineWidth,</div><div class='line js-file-line' id='LC203'>				lineColor <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleLineColor,</div><div class='line js-file-line' id='LC204'>				showHorizontalLines <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowHorizontalLines,</div><div class='line js-file-line' id='LC205'>				showVerticalLines <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowVerticalLines,</div><div class='line js-file-line' id='LC206'>				gridLineWidth <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowGridLines) <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleGridLineWidth <span class="pl-k">:</span> <span class="pl-c1">0</span>,</div><div class='line js-file-line' id='LC207'>				gridLineColor <span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowGridLines) <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleGridLineColor <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span>rgba(0,0,0,0)<span class="pl-pds">&quot;</span></span>,</div><div class='line js-file-line' id='LC208'>				padding<span class="pl-k">:</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.showScale) <span class="pl-k">?</span> <span class="pl-c1">0</span> <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointDotRadius <span class="pl-k">+</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.pointDotStrokeWidth,</div><div class='line js-file-line' id='LC209'>				showLabels <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleShowLabels,</div><div class='line js-file-line' id='LC210'>				display <span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.showScale</div><div class='line js-file-line' id='LC211'>			};</div><div class='line js-file-line' id='LC212'><br></div><div class='line js-file-line' id='LC213'>			<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleOverride){</div><div class='line js-file-line' id='LC214'>				helpers.extend(scaleOptions, {</div><div class='line js-file-line' id='LC215'>					calculateYRange<span class="pl-k">:</span> helpers.noop,</div><div class='line js-file-line' id='LC216'>					steps<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleSteps,</div><div class='line js-file-line' id='LC217'>					stepValue<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStepWidth,</div><div class='line js-file-line' id='LC218'>					min<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStartValue,</div><div class='line js-file-line' id='LC219'>					max<span class="pl-k">:</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStartValue <span class="pl-k">+</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleSteps <span class="pl-k">*</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.scaleStepWidth)</div><div class='line js-file-line' id='LC220'>				});</div><div class='line js-file-line' id='LC221'>			}</div><div class='line js-file-line' id='LC222'><br></div><div class='line js-file-line' id='LC223'><br></div><div class='line js-file-line' id='LC224'>			<span class="pl-v">this</span>.scale <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Chart.Scale</span>(scaleOptions);</div><div class='line js-file-line' id='LC225'>		},</div><div class='line js-file-line' id='LC226'>		<span class="pl-en">addData</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">valuesArray</span>,<span class="pl-smi">label</span>){</div><div class='line js-file-line' id='LC227'>			<span class="pl-c">//Map the values array for each of the datasets</span></div><div class='line js-file-line' id='LC228'><br></div><div class='line js-file-line' id='LC229'>			helpers.each(valuesArray,<span class="pl-k">function</span>(<span class="pl-smi">value</span>,<span class="pl-smi">datasetIndex</span>){</div><div class='line js-file-line' id='LC230'>				<span class="pl-c">//Add a new point for each piece of data, passing any required data to draw.</span></div><div class='line js-file-line' id='LC231'>				<span class="pl-v">this</span>.datasets[datasetIndex].points.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">this.PointClass</span>({</div><div class='line js-file-line' id='LC232'>					value <span class="pl-k">:</span> value,</div><div class='line js-file-line' id='LC233'>					label <span class="pl-k">:</span> label,</div><div class='line js-file-line' id='LC234'>					datasetLabel<span class="pl-k">:</span> <span class="pl-v">this</span>.datasets[datasetIndex].<span class="pl-c1">label</span>,</div><div class='line js-file-line' id='LC235'>					x<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateX(<span class="pl-v">this</span>.scale.valuesCount<span class="pl-k">+</span><span class="pl-c1">1</span>),</div><div class='line js-file-line' id='LC236'>					y<span class="pl-k">:</span> <span class="pl-v">this</span>.scale.endPoint,</div><div class='line js-file-line' id='LC237'>					strokeColor <span class="pl-k">:</span> <span class="pl-v">this</span>.datasets[datasetIndex].pointStrokeColor,</div><div class='line js-file-line' id='LC238'>					fillColor <span class="pl-k">:</span> <span class="pl-v">this</span>.datasets[datasetIndex].pointColor</div><div class='line js-file-line' id='LC239'>				}));</div><div class='line js-file-line' id='LC240'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC241'><br></div><div class='line js-file-line' id='LC242'>			<span class="pl-v">this</span>.scale.addXLabel(label);</div><div class='line js-file-line' id='LC243'>			<span class="pl-c">//Then re-render the chart.</span></div><div class='line js-file-line' id='LC244'>			<span class="pl-v">this</span>.update();</div><div class='line js-file-line' id='LC245'>		},</div><div class='line js-file-line' id='LC246'>		<span class="pl-en">removeData</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC247'>			<span class="pl-v">this</span>.scale.removeXLabel();</div><div class='line js-file-line' id='LC248'>			<span class="pl-c">//Then re-render the chart.</span></div><div class='line js-file-line' id='LC249'>			helpers.each(<span class="pl-v">this</span>.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC250'>				dataset.points.<span class="pl-c1">shift</span>();</div><div class='line js-file-line' id='LC251'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC252'>			<span class="pl-v">this</span>.update();</div><div class='line js-file-line' id='LC253'>		},</div><div class='line js-file-line' id='LC254'>		<span class="pl-en">reflow</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(){</div><div class='line js-file-line' id='LC255'>			<span class="pl-k">var</span> newScaleProps <span class="pl-k">=</span> helpers.extend({</div><div class='line js-file-line' id='LC256'>				height <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">height</span>,</div><div class='line js-file-line' id='LC257'>				width <span class="pl-k">:</span> <span class="pl-v">this</span>.chart.<span class="pl-c1">width</span></div><div class='line js-file-line' id='LC258'>			});</div><div class='line js-file-line' id='LC259'>			<span class="pl-v">this</span>.scale.update(newScaleProps);</div><div class='line js-file-line' id='LC260'>		},</div><div class='line js-file-line' id='LC261'>		<span class="pl-en">draw</span> <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">ease</span>){</div><div class='line js-file-line' id='LC262'>			<span class="pl-k">var</span> easingDecimal <span class="pl-k">=</span> ease <span class="pl-k">||</span> <span class="pl-c1">1</span>;</div><div class='line js-file-line' id='LC263'>			<span class="pl-v">this</span>.<span class="pl-c1">clear</span>();</div><div class='line js-file-line' id='LC264'><br></div><div class='line js-file-line' id='LC265'>			<span class="pl-k">var</span> ctx <span class="pl-k">=</span> <span class="pl-v">this</span>.chart.ctx;</div><div class='line js-file-line' id='LC266'><br></div><div class='line js-file-line' id='LC267'>			<span class="pl-c">// Some helper methods for getting the next/prev points</span></div><div class='line js-file-line' id='LC268'>			<span class="pl-k">var</span> <span class="pl-en">hasValue</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">item</span>){</div><div class='line js-file-line' id='LC269'>				<span class="pl-k">return</span> item.<span class="pl-c1">value</span> <span class="pl-k">!==</span> <span class="pl-c1">null</span>;</div><div class='line js-file-line' id='LC270'>			},</div><div class='line js-file-line' id='LC271'>			<span class="pl-en">nextPoint</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">point</span>, <span class="pl-smi">collection</span>, <span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC272'>				<span class="pl-k">return</span> helpers.findNextWhere(collection, hasValue, index) <span class="pl-k">||</span> point;</div><div class='line js-file-line' id='LC273'>			},</div><div class='line js-file-line' id='LC274'>			<span class="pl-en">previousPoint</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">point</span>, <span class="pl-smi">collection</span>, <span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC275'>				<span class="pl-k">return</span> helpers.findPreviousWhere(collection, hasValue, index) <span class="pl-k">||</span> point;</div><div class='line js-file-line' id='LC276'>			};</div><div class='line js-file-line' id='LC277'><br></div><div class='line js-file-line' id='LC278'>			<span class="pl-v">this</span>.scale.draw(easingDecimal);</div><div class='line js-file-line' id='LC279'><br></div><div class='line js-file-line' id='LC280'><br></div><div class='line js-file-line' id='LC281'>			helpers.each(<span class="pl-v">this</span>.datasets,<span class="pl-k">function</span>(<span class="pl-smi">dataset</span>){</div><div class='line js-file-line' id='LC282'>				<span class="pl-k">var</span> pointsWithValues <span class="pl-k">=</span> helpers.where(dataset.points, hasValue);</div><div class='line js-file-line' id='LC283'><br></div><div class='line js-file-line' id='LC284'>				<span class="pl-c">//Transition each point first so that the line and point drawing isn&#39;t out of sync</span></div><div class='line js-file-line' id='LC285'>				<span class="pl-c">//We can use this extra loop to calculate the control points of this dataset also in this loop</span></div><div class='line js-file-line' id='LC286'><br></div><div class='line js-file-line' id='LC287'>				helpers.each(dataset.points, <span class="pl-k">function</span>(<span class="pl-smi">point</span>, <span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC288'>					<span class="pl-k">if</span> (point.hasValue()){</div><div class='line js-file-line' id='LC289'>						point.transition({</div><div class='line js-file-line' id='LC290'>							y <span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateY(point.<span class="pl-c1">value</span>),</div><div class='line js-file-line' id='LC291'>							x <span class="pl-k">:</span> <span class="pl-v">this</span>.scale.calculateX(index)</div><div class='line js-file-line' id='LC292'>						}, easingDecimal);</div><div class='line js-file-line' id='LC293'>					}</div><div class='line js-file-line' id='LC294'>				},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC295'><br></div><div class='line js-file-line' id='LC296'><br></div><div class='line js-file-line' id='LC297'>				<span class="pl-c">// Control points need to be calculated in a separate loop, because we need to know the current x/y of the point</span></div><div class='line js-file-line' id='LC298'>				<span class="pl-c">// This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed</span></div><div class='line js-file-line' id='LC299'>				<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.bezierCurve){</div><div class='line js-file-line' id='LC300'>					helpers.each(pointsWithValues, <span class="pl-k">function</span>(<span class="pl-smi">point</span>, <span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC301'>						<span class="pl-k">var</span> tension <span class="pl-k">=</span> (index <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> index <span class="pl-k">&lt;</span> pointsWithValues.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">?</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.bezierCurveTension <span class="pl-k">:</span> <span class="pl-c1">0</span>;</div><div class='line js-file-line' id='LC302'>						point.controlPoints <span class="pl-k">=</span> helpers.splineCurve(</div><div class='line js-file-line' id='LC303'>							previousPoint(point, pointsWithValues, index),</div><div class='line js-file-line' id='LC304'>							point,</div><div class='line js-file-line' id='LC305'>							nextPoint(point, pointsWithValues, index),</div><div class='line js-file-line' id='LC306'>							tension</div><div class='line js-file-line' id='LC307'>						);</div><div class='line js-file-line' id='LC308'><br></div><div class='line js-file-line' id='LC309'>						<span class="pl-c">// Prevent the bezier going outside of the bounds of the graph</span></div><div class='line js-file-line' id='LC310'><br></div><div class='line js-file-line' id='LC311'>						<span class="pl-c">// Cap puter bezier handles to the upper/lower scale bounds</span></div><div class='line js-file-line' id='LC312'>						<span class="pl-k">if</span> (point.controlPoints.outer.<span class="pl-c1">y</span> <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.scale.endPoint){</div><div class='line js-file-line' id='LC313'>							point.controlPoints.outer.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.scale.endPoint;</div><div class='line js-file-line' id='LC314'>						}</div><div class='line js-file-line' id='LC315'>						<span class="pl-k">else</span> <span class="pl-k">if</span> (point.controlPoints.outer.<span class="pl-c1">y</span> <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.scale.startPoint){</div><div class='line js-file-line' id='LC316'>							point.controlPoints.outer.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.scale.startPoint;</div><div class='line js-file-line' id='LC317'>						}</div><div class='line js-file-line' id='LC318'><br></div><div class='line js-file-line' id='LC319'>						<span class="pl-c">// Cap inner bezier handles to the upper/lower scale bounds</span></div><div class='line js-file-line' id='LC320'>						<span class="pl-k">if</span> (point.controlPoints.inner.<span class="pl-c1">y</span> <span class="pl-k">&gt;</span> <span class="pl-v">this</span>.scale.endPoint){</div><div class='line js-file-line' id='LC321'>							point.controlPoints.inner.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.scale.endPoint;</div><div class='line js-file-line' id='LC322'>						}</div><div class='line js-file-line' id='LC323'>						<span class="pl-k">else</span> <span class="pl-k">if</span> (point.controlPoints.inner.<span class="pl-c1">y</span> <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.scale.startPoint){</div><div class='line js-file-line' id='LC324'>							point.controlPoints.inner.<span class="pl-c1">y</span> <span class="pl-k">=</span> <span class="pl-v">this</span>.scale.startPoint;</div><div class='line js-file-line' id='LC325'>						}</div><div class='line js-file-line' id='LC326'>					},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC327'>				}</div><div class='line js-file-line' id='LC328'><br></div><div class='line js-file-line' id='LC329'><br></div><div class='line js-file-line' id='LC330'>				<span class="pl-c">//Draw the line between all the points</span></div><div class='line js-file-line' id='LC331'>				ctx.lineWidth <span class="pl-k">=</span> <span class="pl-v">this</span>.<span class="pl-c1">options</span>.datasetStrokeWidth;</div><div class='line js-file-line' id='LC332'>				ctx.strokeStyle <span class="pl-k">=</span> dataset.strokeColor;</div><div class='line js-file-line' id='LC333'>				ctx.beginPath();</div><div class='line js-file-line' id='LC334'><br></div><div class='line js-file-line' id='LC335'>				helpers.each(pointsWithValues, <span class="pl-k">function</span>(<span class="pl-smi">point</span>, <span class="pl-smi">index</span>){</div><div class='line js-file-line' id='LC336'>					<span class="pl-k">if</span> (index <span class="pl-k">===</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC337'>						ctx.<span class="pl-c1">moveTo</span>(point.<span class="pl-c1">x</span>, point.<span class="pl-c1">y</span>);</div><div class='line js-file-line' id='LC338'>					}</div><div class='line js-file-line' id='LC339'>					<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC340'>						<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-c1">options</span>.bezierCurve){</div><div class='line js-file-line' id='LC341'>							<span class="pl-k">var</span> previous <span class="pl-k">=</span> previousPoint(point, pointsWithValues, index);</div><div class='line js-file-line' id='LC342'><br></div><div class='line js-file-line' id='LC343'>							ctx.bezierCurveTo(</div><div class='line js-file-line' id='LC344'>								previous.controlPoints.outer.<span class="pl-c1">x</span>,</div><div class='line js-file-line' id='LC345'>								previous.controlPoints.outer.<span class="pl-c1">y</span>,</div><div class='line js-file-line' id='LC346'>								point.controlPoints.inner.<span class="pl-c1">x</span>,</div><div class='line js-file-line' id='LC347'>								point.controlPoints.inner.<span class="pl-c1">y</span>,</div><div class='line js-file-line' id='LC348'>								point.<span class="pl-c1">x</span>,</div><div class='line js-file-line' id='LC349'>								point.<span class="pl-c1">y</span></div><div class='line js-file-line' id='LC350'>							);</div><div class='line js-file-line' id='LC351'>						}</div><div class='line js-file-line' id='LC352'>						<span class="pl-k">else</span>{</div><div class='line js-file-line' id='LC353'>							ctx.lineTo(point.<span class="pl-c1">x</span>,point.<span class="pl-c1">y</span>);</div><div class='line js-file-line' id='LC354'>						}</div><div class='line js-file-line' id='LC355'>					}</div><div class='line js-file-line' id='LC356'>				}, <span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC357'><br></div><div class='line js-file-line' id='LC358'>				ctx.stroke();</div><div class='line js-file-line' id='LC359'><br></div><div class='line js-file-line' id='LC360'>				<span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">options</span>.datasetFill <span class="pl-k">&amp;&amp;</span> pointsWithValues.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>){</div><div class='line js-file-line' id='LC361'>					<span class="pl-c">//Round off the line by going to the base of the chart, back to the start, then fill.</span></div><div class='line js-file-line' id='LC362'>					ctx.lineTo(pointsWithValues[pointsWithValues.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>].<span class="pl-c1">x</span>, <span class="pl-v">this</span>.scale.endPoint);</div><div class='line js-file-line' id='LC363'>					ctx.lineTo(pointsWithValues[<span class="pl-c1">0</span>].<span class="pl-c1">x</span>, <span class="pl-v">this</span>.scale.endPoint);</div><div class='line js-file-line' id='LC364'>					ctx.fillStyle <span class="pl-k">=</span> dataset.fillColor;</div><div class='line js-file-line' id='LC365'>					ctx.closePath();</div><div class='line js-file-line' id='LC366'>					ctx.fill();</div><div class='line js-file-line' id='LC367'>				}</div><div class='line js-file-line' id='LC368'><br></div><div class='line js-file-line' id='LC369'>				<span class="pl-c">//Now draw the points over the line</span></div><div class='line js-file-line' id='LC370'>				<span class="pl-c">//A little inefficient double looping, but better than the line</span></div><div class='line js-file-line' id='LC371'>				<span class="pl-c">//lagging behind the point positions</span></div><div class='line js-file-line' id='LC372'>				helpers.each(pointsWithValues,<span class="pl-k">function</span>(<span class="pl-smi">point</span>){</div><div class='line js-file-line' id='LC373'>					point.draw();</div><div class='line js-file-line' id='LC374'>				});</div><div class='line js-file-line' id='LC375'>			},<span class="pl-v">this</span>);</div><div class='line js-file-line' id='LC376'>		}</div><div class='line js-file-line' id='LC377'>	});</div><div class='line js-file-line' id='LC378'><br></div><div class='line js-file-line' id='LC379'><br></div><div class='line js-file-line' id='LC380'>}).<span class="pl-c1">call</span>(<span class="pl-v">this</span>);</div></pre></div></div>
  </div>



  <footer class="clearfix">
    <div class="container">
      <a href="#"><span class="mega-octicon octicon-mark-github"></span></a>

      <ul class="clearfix">
        <li>
          <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/site/mobile_preference" class="js-mobile-preference-form" data-form-nonce="8b41a82aad02ec38c10a36ecb249a6ef31da82b3" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="dS/EAO0/vLHLR9EmdUrOKBfD6qZLeeBmAu++tAjLxUfMejkAKaQBT+ZXSOkUgelC8Leoop4BsjXX+CZ2XWzrCg==" /></div>
            <input type="hidden" name="mobile" value="false">
            <input type="hidden" name="anchor" class="js-mobile-preference-anchor-field">

            <button type="submit" class="switch-to-desktop" data-ga-click="Mobile, switch to desktop, switch button">
              Desktop version
            </button>
</form>        </li>

      </ul>
    </div>
  </footer>
  
</body>
</html>

